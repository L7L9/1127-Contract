{
	"id": "8646d70177bcc801ceb1a5dfd70506da",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.11",
	"solcLongVersion": "0.8.11+commit.d7f03943",
	"input": {
		"language": "Solidity",
		"sources": {
			"1127/util/CommonUtil.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.11;\nimport {Math} from \"1127/util/Math.sol\";\nimport {SignedMath} from \"1127/util/SignedMath.sol\";\ncontract CommonUtil  {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    \n    /**\n    业务工具区\n    **/\n\n    //生成规则bytes32\n    function toRole(string memory str) public pure returns (bytes32) {\n        return stringToBytes32(str);\n    }\n    \n    //生成资产下标 格式为 Group名字:自增id\n    function toAssetIndex(string memory _group,uint256 id) public pure returns (string memory){\n        \n        return strConcat(strConcat(_group, \":\"),toString(id));\n    }\n\n    \n    function error(\n        string memory _contract,\n        string memory _function,\n        string memory _msg\n    ) public pure returns (string memory) {\n       return strConcat(\n        strConcat(\n        strConcat(\"Contract: \", _contract),\n        strConcat(\",Function: \", _function)\n        ),\n        strConcat(\",Message: \", _msg)\n        );\n    }\n\n\n    /**\n    通用工具区\n    **/\n    function stringToBytes32(string memory str) public pure returns (bytes32) {\n        return keccak256(abi.encodePacked(str));\n    }\n\n\n    function strConcat(string memory _a, string memory _b)\n        public\n        pure\n        returns (string memory)\n    {\n        bytes memory _ba = bytes(_a);\n        bytes memory _bb = bytes(_b);\n        string memory ret = new string(_ba.length + _bb.length);\n        bytes memory bret = bytes(ret);\n        uint256 k = 0;\n        for (uint256 i = 0; i < _ba.length; i++) bret[k++] = _ba[i];\n        for (uint256 i = 0; i < _bb.length; i++) bret[k++] = _bb[i];\n        return string(ret);\n    }\n\n\n     function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    \n}\n"
			},
			"1127/util/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.11;\r\n\r\n/**\r\n * @dev Standard signed math utilities missing in the Solidity language.\r\n */\r\nlibrary SignedMath {\r\n    /**\r\n     * @dev Returns the largest of two signed numbers.\r\n     */\r\n    function max(int256 a, int256 b) internal pure returns (int256) {\r\n        return a > b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the smallest of two signed numbers.\r\n     */\r\n    function min(int256 a, int256 b) internal pure returns (int256) {\r\n        return a < b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the average of two signed numbers without overflow.\r\n     * The result is rounded towards zero.\r\n     */\r\n    function average(int256 a, int256 b) internal pure returns (int256) {\r\n        // Formula from the book \"Hacker's Delight\"\r\n        int256 x = (a & b) + ((a ^ b) >> 1);\r\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the absolute unsigned value of a signed value.\r\n     */\r\n    function abs(int256 n) internal pure returns (uint256) {\r\n        unchecked {\r\n            // must be unchecked in order to support `n = type(int256).min`\r\n            return uint256(n >= 0 ? n : -n);\r\n        }\r\n    }\r\n}"
			},
			"1127/util/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.11;\r\n\r\n/**\r\n * @dev Standard math utilities missing in the Solidity language.\r\n */\r\nlibrary Math {\r\n    /**\r\n     * @dev Muldiv operation overflow.\r\n     */\r\n    error MathOverflowedMulDiv();\r\n\r\n    enum Rounding {\r\n        Floor, // Toward negative infinity\r\n        Ceil, // Toward positive infinity\r\n        Trunc, // Toward zero\r\n        Expand // Away from zero\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\r\n     */\r\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            uint256 c = a + b;\r\n            if (c < a) return (false, 0);\r\n            return (true, c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\r\n     */\r\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b > a) return (false, 0);\r\n            return (true, a - b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\r\n     */\r\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n            // benefit is lost if 'b' is also tested.\r\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n            if (a == 0) return (true, 0);\r\n            uint256 c = a * b;\r\n            if (c / a != b) return (false, 0);\r\n            return (true, c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\r\n     */\r\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b == 0) return (false, 0);\r\n            return (true, a / b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\r\n     */\r\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b == 0) return (false, 0);\r\n            return (true, a % b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the largest of two numbers.\r\n     */\r\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a > b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the smallest of two numbers.\r\n     */\r\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a < b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the average of two numbers. The result is rounded towards\r\n     * zero.\r\n     */\r\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // (a + b) / 2 can overflow.\r\n        return (a & b) + (a ^ b) / 2;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the ceiling of the division of two numbers.\r\n     *\r\n     * This differs from standard division with `/` in that it rounds towards infinity instead\r\n     * of rounding towards zero.\r\n     */\r\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        if (b == 0) {\r\n            // Guarantee the same behavior as in a regular Solidity division.\r\n            return a / b;\r\n        }\r\n\r\n        // (a + b - 1) / b can overflow on addition, so we distribute.\r\n        return a == 0 ? 0 : (a - 1) / b + 1;\r\n    }\r\n\r\n    /**\r\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\r\n     * denominator == 0.\r\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\r\n     * Uniswap Labs also under MIT license.\r\n     */\r\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\r\n        unchecked {\r\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\r\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\r\n            // variables such that product = prod1 * 2^256 + prod0.\r\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\r\n            uint256 prod1; // Most significant 256 bits of the product\r\n            assembly {\r\n                let mm := mulmod(x, y, not(0))\r\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\r\n            }\r\n\r\n            // Handle non-overflow cases, 256 by 256 division.\r\n            if (prod1 == 0) {\r\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\r\n                // The surrounding unchecked block does not change this fact.\r\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\r\n                return prod0 / denominator;\r\n            }\r\n\r\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\r\n            if (denominator <= prod1) {\r\n                revert MathOverflowedMulDiv();\r\n            }\r\n\r\n            ///////////////////////////////////////////////\r\n            // 512 by 256 division.\r\n            ///////////////////////////////////////////////\r\n\r\n            // Make division exact by subtracting the remainder from [prod1 prod0].\r\n            uint256 remainder;\r\n            assembly {\r\n                // Compute remainder using mulmod.\r\n                remainder := mulmod(x, y, denominator)\r\n\r\n                // Subtract 256 bit number from 512 bit number.\r\n                prod1 := sub(prod1, gt(remainder, prod0))\r\n                prod0 := sub(prod0, remainder)\r\n            }\r\n\r\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\r\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\r\n\r\n            uint256 twos = denominator & (0 - denominator);\r\n            assembly {\r\n                // Divide denominator by twos.\r\n                denominator := div(denominator, twos)\r\n\r\n                // Divide [prod1 prod0] by twos.\r\n                prod0 := div(prod0, twos)\r\n\r\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\r\n                twos := add(div(sub(0, twos), twos), 1)\r\n            }\r\n\r\n            // Shift in bits from prod1 into prod0.\r\n            prod0 |= prod1 * twos;\r\n\r\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\r\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\r\n            // four bits. That is, denominator * inv = 1 mod 2^4.\r\n            uint256 inverse = (3 * denominator) ^ 2;\r\n\r\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\r\n            // works in modular arithmetic, doubling the correct bits in each step.\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\r\n\r\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\r\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\r\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\r\n            // is no longer required.\r\n            result = prod0 * inverse;\r\n            return result;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\r\n     */\r\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\r\n        uint256 result = mulDiv(x, y, denominator);\r\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\r\n            result += 1;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\r\n     * towards zero.\r\n     *\r\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\r\n     */\r\n    function sqrt(uint256 a) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\r\n        //\r\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\r\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\r\n        //\r\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\r\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\r\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\r\n        //\r\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\r\n        uint256 result = 1 << (log2(a) >> 1);\r\n\r\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\r\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\r\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\r\n        // into the expected uint128 result.\r\n        unchecked {\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            return min(result, a / result);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @notice Calculates sqrt(a), following the selected rounding direction.\r\n     */\r\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\r\n        unchecked {\r\n            uint256 result = sqrt(a);\r\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log2(uint256 value) internal pure returns (uint256) {\r\n        uint256 result = 0;\r\n        unchecked {\r\n            if (value >> 128 > 0) {\r\n                value >>= 128;\r\n                result += 128;\r\n            }\r\n            if (value >> 64 > 0) {\r\n                value >>= 64;\r\n                result += 64;\r\n            }\r\n            if (value >> 32 > 0) {\r\n                value >>= 32;\r\n                result += 32;\r\n            }\r\n            if (value >> 16 > 0) {\r\n                value >>= 16;\r\n                result += 16;\r\n            }\r\n            if (value >> 8 > 0) {\r\n                value >>= 8;\r\n                result += 8;\r\n            }\r\n            if (value >> 4 > 0) {\r\n                value >>= 4;\r\n                result += 4;\r\n            }\r\n            if (value >> 2 > 0) {\r\n                value >>= 2;\r\n                result += 2;\r\n            }\r\n            if (value >> 1 > 0) {\r\n                result += 1;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\r\n        unchecked {\r\n            uint256 result = log2(value);\r\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log10(uint256 value) internal pure returns (uint256) {\r\n        uint256 result = 0;\r\n        unchecked {\r\n            if (value >= 10 ** 64) {\r\n                value /= 10 ** 64;\r\n                result += 64;\r\n            }\r\n            if (value >= 10 ** 32) {\r\n                value /= 10 ** 32;\r\n                result += 32;\r\n            }\r\n            if (value >= 10 ** 16) {\r\n                value /= 10 ** 16;\r\n                result += 16;\r\n            }\r\n            if (value >= 10 ** 8) {\r\n                value /= 10 ** 8;\r\n                result += 8;\r\n            }\r\n            if (value >= 10 ** 4) {\r\n                value /= 10 ** 4;\r\n                result += 4;\r\n            }\r\n            if (value >= 10 ** 2) {\r\n                value /= 10 ** 2;\r\n                result += 2;\r\n            }\r\n            if (value >= 10 ** 1) {\r\n                result += 1;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\r\n        unchecked {\r\n            uint256 result = log10(value);\r\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\r\n     * Returns 0 if given 0.\r\n     *\r\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\r\n     */\r\n    function log256(uint256 value) internal pure returns (uint256) {\r\n        uint256 result = 0;\r\n        unchecked {\r\n            if (value >> 128 > 0) {\r\n                value >>= 128;\r\n                result += 16;\r\n            }\r\n            if (value >> 64 > 0) {\r\n                value >>= 64;\r\n                result += 8;\r\n            }\r\n            if (value >> 32 > 0) {\r\n                value >>= 32;\r\n                result += 4;\r\n            }\r\n            if (value >> 16 > 0) {\r\n                value >>= 16;\r\n                result += 2;\r\n            }\r\n            if (value >> 8 > 0) {\r\n                result += 1;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\r\n        unchecked {\r\n            uint256 result = log256(value);\r\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\r\n     */\r\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\r\n        return uint8(rounding) % 2 == 1;\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"1127/util/CommonUtil.sol": {
				"CommonUtil": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_contract",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_function",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_msg",
									"type": "string"
								}
							],
							"name": "error",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_a",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_b",
									"type": "string"
								}
							],
							"name": "strConcat",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "str",
									"type": "string"
								}
							],
							"name": "stringToBytes32",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_group",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "toAssetIndex",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "str",
									"type": "string"
								}
							],
							"name": "toRole",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"1127/util/CommonUtil.sol\":150:2402  contract CommonUtil  {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"1127/util/CommonUtil.sol\":150:2402  contract CommonUtil  {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x609f7070\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x60e01594\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xa1f7ed1a\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xcfb51928\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xff74927b\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"1127/util/CommonUtil.sol\":662:1012  function error(... */\n    tag_3:\n      tag_8\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      tag_11\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"1127/util/CommonUtil.sol\":307:416  function toRole(string memory str) public pure returns (bytes32) {... */\n    tag_4:\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      tag_17\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"1127/util/CommonUtil.sol\":482:651  function toAssetIndex(string memory _group,uint256 id) public pure returns (string memory){... */\n    tag_5:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"1127/util/CommonUtil.sol\":1055:1185  function stringToBytes32(string memory str) public pure returns (bytes32) {... */\n    tag_6:\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_26\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_26:\n      tag_27\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"1127/util/CommonUtil.sol\":1192:1688  function strConcat(string memory _a, string memory _b)... */\n    tag_7:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"1127/util/CommonUtil.sol\":662:1012  function error(... */\n    tag_11:\n        /* \"1127/util/CommonUtil.sol\":798:811  string memory */\n      0x60\n        /* \"1127/util/CommonUtil.sol\":829:1005  strConcat(... */\n      tag_35\n        /* \"1127/util/CommonUtil.sol\":848:956  strConcat(... */\n      tag_36\n        /* \"1127/util/CommonUtil.sol\":867:901  strConcat(\"Contract: \", _contract) */\n      tag_37\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x0a\n      dup2\n      mstore\n      0x20\n      add\n      0x436f6e74726163743a2000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"1127/util/CommonUtil.sol\":891:900  _contract */\n      dup8\n        /* \"1127/util/CommonUtil.sol\":867:876  strConcat */\n      tag_32\n        /* \"1127/util/CommonUtil.sol\":867:901  strConcat(\"Contract: \", _contract) */\n      jump\t// in\n    tag_37:\n        /* \"1127/util/CommonUtil.sol\":911:946  strConcat(\",Function: \", _function) */\n      tag_38\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x0b\n      dup2\n      mstore\n      0x20\n      add\n      0x2c46756e6374696f6e3a20000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"1127/util/CommonUtil.sol\":936:945  _function */\n      dup8\n        /* \"1127/util/CommonUtil.sol\":911:920  strConcat */\n      tag_32\n        /* \"1127/util/CommonUtil.sol\":911:946  strConcat(\",Function: \", _function) */\n      jump\t// in\n    tag_38:\n        /* \"1127/util/CommonUtil.sol\":848:857  strConcat */\n      tag_32\n        /* \"1127/util/CommonUtil.sol\":848:956  strConcat(... */\n      jump\t// in\n    tag_36:\n        /* \"1127/util/CommonUtil.sol\":966:995  strConcat(\",Message: \", _msg) */\n      tag_39\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x0a\n      dup2\n      mstore\n      0x20\n      add\n      0x2c4d6573736167653a2000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"1127/util/CommonUtil.sol\":990:994  _msg */\n      dup6\n        /* \"1127/util/CommonUtil.sol\":966:975  strConcat */\n      tag_32\n        /* \"1127/util/CommonUtil.sol\":966:995  strConcat(\",Message: \", _msg) */\n      jump\t// in\n    tag_39:\n        /* \"1127/util/CommonUtil.sol\":829:838  strConcat */\n      tag_32\n        /* \"1127/util/CommonUtil.sol\":829:1005  strConcat(... */\n      jump\t// in\n    tag_35:\n        /* \"1127/util/CommonUtil.sol\":822:1005  return strConcat(... */\n      swap1\n      pop\n        /* \"1127/util/CommonUtil.sol\":662:1012  function error(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"1127/util/CommonUtil.sol\":307:416  function toRole(string memory str) public pure returns (bytes32) {... */\n    tag_17:\n        /* \"1127/util/CommonUtil.sol\":363:370  bytes32 */\n      0x00\n        /* \"1127/util/CommonUtil.sol\":389:409  stringToBytes32(str) */\n      tag_41\n        /* \"1127/util/CommonUtil.sol\":405:408  str */\n      dup3\n        /* \"1127/util/CommonUtil.sol\":389:404  stringToBytes32 */\n      tag_27\n        /* \"1127/util/CommonUtil.sol\":389:409  stringToBytes32(str) */\n      jump\t// in\n    tag_41:\n        /* \"1127/util/CommonUtil.sol\":382:409  return stringToBytes32(str) */\n      swap1\n      pop\n        /* \"1127/util/CommonUtil.sol\":307:416  function toRole(string memory str) public pure returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"1127/util/CommonUtil.sol\":482:651  function toAssetIndex(string memory _group,uint256 id) public pure returns (string memory){... */\n    tag_23:\n        /* \"1127/util/CommonUtil.sol\":558:571  string memory */\n      0x60\n        /* \"1127/util/CommonUtil.sol\":598:644  strConcat(strConcat(_group, \":\"),toString(id)) */\n      tag_43\n        /* \"1127/util/CommonUtil.sol\":608:630  strConcat(_group, \":\") */\n      tag_44\n        /* \"1127/util/CommonUtil.sol\":618:624  _group */\n      dup5\n        /* \"1127/util/CommonUtil.sol\":608:630  strConcat(_group, \":\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x01\n      dup2\n      mstore\n      0x20\n      add\n      0x3a00000000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"1127/util/CommonUtil.sol\":608:617  strConcat */\n      tag_32\n        /* \"1127/util/CommonUtil.sol\":608:630  strConcat(_group, \":\") */\n      jump\t// in\n    tag_44:\n        /* \"1127/util/CommonUtil.sol\":631:643  toString(id) */\n      tag_45\n        /* \"1127/util/CommonUtil.sol\":640:642  id */\n      dup5\n        /* \"1127/util/CommonUtil.sol\":631:639  toString */\n      tag_46\n        /* \"1127/util/CommonUtil.sol\":631:643  toString(id) */\n      jump\t// in\n    tag_45:\n        /* \"1127/util/CommonUtil.sol\":598:607  strConcat */\n      tag_32\n        /* \"1127/util/CommonUtil.sol\":598:644  strConcat(strConcat(_group, \":\"),toString(id)) */\n      jump\t// in\n    tag_43:\n        /* \"1127/util/CommonUtil.sol\":591:644  return strConcat(strConcat(_group, \":\"),toString(id)) */\n      swap1\n      pop\n        /* \"1127/util/CommonUtil.sol\":482:651  function toAssetIndex(string memory _group,uint256 id) public pure returns (string memory){... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"1127/util/CommonUtil.sol\":1055:1185  function stringToBytes32(string memory str) public pure returns (bytes32) {... */\n    tag_27:\n        /* \"1127/util/CommonUtil.sol\":1120:1127  bytes32 */\n      0x00\n        /* \"1127/util/CommonUtil.sol\":1173:1176  str */\n      dup2\n        /* \"1127/util/CommonUtil.sol\":1156:1177  abi.encodePacked(str) */\n      add(0x20, mload(0x40))\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"1127/util/CommonUtil.sol\":1146:1178  keccak256(abi.encodePacked(str)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"1127/util/CommonUtil.sol\":1139:1178  return keccak256(abi.encodePacked(str)) */\n      swap1\n      pop\n        /* \"1127/util/CommonUtil.sol\":1055:1185  function stringToBytes32(string memory str) public pure returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"1127/util/CommonUtil.sol\":1192:1688  function strConcat(string memory _a, string memory _b)... */\n    tag_32:\n        /* \"1127/util/CommonUtil.sol\":1292:1305  string memory */\n      0x60\n        /* \"1127/util/CommonUtil.sol\":1321:1337  bytes memory _ba */\n      0x00\n        /* \"1127/util/CommonUtil.sol\":1346:1348  _a */\n      dup4\n        /* \"1127/util/CommonUtil.sol\":1321:1349  bytes memory _ba = bytes(_a) */\n      swap1\n      pop\n        /* \"1127/util/CommonUtil.sol\":1359:1375  bytes memory _bb */\n      0x00\n        /* \"1127/util/CommonUtil.sol\":1384:1386  _b */\n      dup4\n        /* \"1127/util/CommonUtil.sol\":1359:1387  bytes memory _bb = bytes(_b) */\n      swap1\n      pop\n        /* \"1127/util/CommonUtil.sol\":1397:1414  string memory ret */\n      0x00\n        /* \"1127/util/CommonUtil.sol\":1441:1444  _bb */\n      dup2\n        /* \"1127/util/CommonUtil.sol\":1441:1451  _bb.length */\n      mload\n        /* \"1127/util/CommonUtil.sol\":1428:1431  _ba */\n      dup4\n        /* \"1127/util/CommonUtil.sol\":1428:1438  _ba.length */\n      mload\n        /* \"1127/util/CommonUtil.sol\":1428:1451  _ba.length + _bb.length */\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n        /* \"1127/util/CommonUtil.sol\":1417:1452  new string(_ba.length + _bb.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_53\n      jumpi\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n    tag_53:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_56\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_56:\n      pop\n        /* \"1127/util/CommonUtil.sol\":1397:1452  string memory ret = new string(_ba.length + _bb.length) */\n      swap1\n      pop\n        /* \"1127/util/CommonUtil.sol\":1462:1479  bytes memory bret */\n      0x00\n        /* \"1127/util/CommonUtil.sol\":1488:1491  ret */\n      dup2\n        /* \"1127/util/CommonUtil.sol\":1462:1492  bytes memory bret = bytes(ret) */\n      swap1\n      pop\n        /* \"1127/util/CommonUtil.sol\":1502:1511  uint256 k */\n      0x00\n        /* \"1127/util/CommonUtil.sol\":1530:1539  uint256 i */\n      dup1\n        /* \"1127/util/CommonUtil.sol\":1525:1584  for (uint256 i = 0; i < _ba.length; i++) bret[k++] = _ba[i] */\n    tag_57:\n        /* \"1127/util/CommonUtil.sol\":1549:1552  _ba */\n      dup6\n        /* \"1127/util/CommonUtil.sol\":1549:1559  _ba.length */\n      mload\n        /* \"1127/util/CommonUtil.sol\":1545:1546  i */\n      dup2\n        /* \"1127/util/CommonUtil.sol\":1545:1559  i < _ba.length */\n      lt\n        /* \"1127/util/CommonUtil.sol\":1525:1584  for (uint256 i = 0; i < _ba.length; i++) bret[k++] = _ba[i] */\n      iszero\n      tag_58\n      jumpi\n        /* \"1127/util/CommonUtil.sol\":1578:1581  _ba */\n      dup6\n        /* \"1127/util/CommonUtil.sol\":1582:1583  i */\n      dup2\n        /* \"1127/util/CommonUtil.sol\":1578:1584  _ba[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_60\n      jumpi\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n    tag_60:\n      0x20\n      add\n      add\n      mload\n      0xf8\n      shr\n      0xf8\n      shl\n        /* \"1127/util/CommonUtil.sol\":1566:1570  bret */\n      dup4\n        /* \"1127/util/CommonUtil.sol\":1571:1574  k++ */\n      dup4\n      dup1\n      tag_63\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      swap5\n      pop\n        /* \"1127/util/CommonUtil.sol\":1566:1575  bret[k++] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_65\n      jumpi\n      tag_66\n      tag_62\n      jump\t// in\n    tag_66:\n    tag_65:\n      0x20\n      add\n      add\n        /* \"1127/util/CommonUtil.sol\":1566:1584  bret[k++] = _ba[i] */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"1127/util/CommonUtil.sol\":1561:1564  i++ */\n      dup1\n      dup1\n      tag_67\n      swap1\n      tag_64\n      jump\t// in\n    tag_67:\n      swap2\n      pop\n      pop\n        /* \"1127/util/CommonUtil.sol\":1525:1584  for (uint256 i = 0; i < _ba.length; i++) bret[k++] = _ba[i] */\n      jump(tag_57)\n    tag_58:\n      pop\n        /* \"1127/util/CommonUtil.sol\":1599:1608  uint256 i */\n      0x00\n        /* \"1127/util/CommonUtil.sol\":1594:1653  for (uint256 i = 0; i < _bb.length; i++) bret[k++] = _bb[i] */\n    tag_68:\n        /* \"1127/util/CommonUtil.sol\":1618:1621  _bb */\n      dup5\n        /* \"1127/util/CommonUtil.sol\":1618:1628  _bb.length */\n      mload\n        /* \"1127/util/CommonUtil.sol\":1614:1615  i */\n      dup2\n        /* \"1127/util/CommonUtil.sol\":1614:1628  i < _bb.length */\n      lt\n        /* \"1127/util/CommonUtil.sol\":1594:1653  for (uint256 i = 0; i < _bb.length; i++) bret[k++] = _bb[i] */\n      iszero\n      tag_69\n      jumpi\n        /* \"1127/util/CommonUtil.sol\":1647:1650  _bb */\n      dup5\n        /* \"1127/util/CommonUtil.sol\":1651:1652  i */\n      dup2\n        /* \"1127/util/CommonUtil.sol\":1647:1653  _bb[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_71\n      jumpi\n      tag_72\n      tag_62\n      jump\t// in\n    tag_72:\n    tag_71:\n      0x20\n      add\n      add\n      mload\n      0xf8\n      shr\n      0xf8\n      shl\n        /* \"1127/util/CommonUtil.sol\":1635:1639  bret */\n      dup4\n        /* \"1127/util/CommonUtil.sol\":1640:1643  k++ */\n      dup4\n      dup1\n      tag_73\n      swap1\n      tag_64\n      jump\t// in\n    tag_73:\n      swap5\n      pop\n        /* \"1127/util/CommonUtil.sol\":1635:1644  bret[k++] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_74\n      jumpi\n      tag_75\n      tag_62\n      jump\t// in\n    tag_75:\n    tag_74:\n      0x20\n      add\n      add\n        /* \"1127/util/CommonUtil.sol\":1635:1653  bret[k++] = _bb[i] */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"1127/util/CommonUtil.sol\":1630:1633  i++ */\n      dup1\n      dup1\n      tag_76\n      swap1\n      tag_64\n      jump\t// in\n    tag_76:\n      swap2\n      pop\n      pop\n        /* \"1127/util/CommonUtil.sol\":1594:1653  for (uint256 i = 0; i < _bb.length; i++) bret[k++] = _bb[i] */\n      jump(tag_68)\n    tag_69:\n      pop\n        /* \"1127/util/CommonUtil.sol\":1677:1680  ret */\n      dup3\n        /* \"1127/util/CommonUtil.sol\":1663:1681  return string(ret) */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"1127/util/CommonUtil.sol\":1192:1688  function strConcat(string memory _a, string memory _b)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"1127/util/CommonUtil.sol\":1696:2394  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_46:\n        /* \"1127/util/CommonUtil.sol\":1752:1765  string memory */\n      0x60\n        /* \"1127/util/CommonUtil.sol\":1801:1815  uint256 length */\n      0x00\n        /* \"1127/util/CommonUtil.sol\":1838:1839  1 */\n      0x01\n        /* \"1127/util/CommonUtil.sol\":1818:1835  Math.log10(value) */\n      tag_78\n        /* \"1127/util/CommonUtil.sol\":1829:1834  value */\n      dup5\n        /* \"1127/util/CommonUtil.sol\":1818:1828  Math.log10 */\n      tag_79\n        /* \"1127/util/CommonUtil.sol\":1818:1835  Math.log10(value) */\n      jump\t// in\n    tag_78:\n        /* \"1127/util/CommonUtil.sol\":1818:1839  Math.log10(value) + 1 */\n      add\n        /* \"1127/util/CommonUtil.sol\":1801:1839  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"1127/util/CommonUtil.sol\":1853:1873  string memory buffer */\n      0x00\n        /* \"1127/util/CommonUtil.sol\":1887:1893  length */\n      dup2\n        /* \"1127/util/CommonUtil.sol\":1876:1894  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_80\n      jumpi\n      tag_81\n      tag_55\n      jump\t// in\n    tag_81:\n    tag_80:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_82\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_82:\n      pop\n        /* \"1127/util/CommonUtil.sol\":1853:1894  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"1127/util/CommonUtil.sol\":1908:1919  uint256 ptr */\n      0x00\n        /* \"1127/util/CommonUtil.sol\":2034:2040  length */\n      dup3\n        /* \"1127/util/CommonUtil.sol\":2030:2032  32 */\n      0x20\n        /* \"1127/util/CommonUtil.sol\":2026:2041  add(32, length) */\n      add\n        /* \"1127/util/CommonUtil.sol\":2018:2024  buffer */\n      dup3\n        /* \"1127/util/CommonUtil.sol\":2014:2042  add(buffer, add(32, length)) */\n      add\n        /* \"1127/util/CommonUtil.sol\":2007:2042  ptr := add(buffer, add(32, length)) */\n      swap1\n      pop\n        /* \"1127/util/CommonUtil.sol\":2069:2351  while (true) {... */\n    tag_83:\n        /* \"1127/util/CommonUtil.sol\":2076:2080  true */\n      0x01\n        /* \"1127/util/CommonUtil.sol\":2069:2351  while (true) {... */\n      iszero\n      tag_84\n      jumpi\n        /* \"1127/util/CommonUtil.sol\":2100:2105  ptr-- */\n      dup1\n      dup1\n      0x01\n      swap1\n      sub\n      swap2\n      pop\n      pop\n        /* \"1127/util/CommonUtil.sol\":2239:2249  HEX_DIGITS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"1127/util/CommonUtil.sol\":2234:2236  10 */\n      0x0a\n        /* \"1127/util/CommonUtil.sol\":2227:2232  value */\n      dup7\n        /* \"1127/util/CommonUtil.sol\":2223:2237  mod(value, 10) */\n      mod\n        /* \"1127/util/CommonUtil.sol\":2218:2250  byte(mod(value, 10), HEX_DIGITS) */\n      byte\n        /* \"1127/util/CommonUtil.sol\":2213:2216  ptr */\n      dup2\n        /* \"1127/util/CommonUtil.sol\":2205:2251  mstore8(ptr, byte(mod(value, 10), HEX_DIGITS)) */\n      mstore8\n        /* \"1127/util/CommonUtil.sol\":2295:2297  10 */\n      0x0a\n        /* \"1127/util/CommonUtil.sol\":2286:2297  value /= 10 */\n      dup6\n      dup2\n      tag_85\n      jumpi\n      tag_86\n      tag_87\n      jump\t// in\n    tag_86:\n    tag_85:\n      div\n      swap5\n      pop\n        /* \"1127/util/CommonUtil.sol\":2328:2329  0 */\n      0x00\n        /* \"1127/util/CommonUtil.sol\":2319:2324  value */\n      dup6\n        /* \"1127/util/CommonUtil.sol\":2319:2329  value == 0 */\n      eq\n        /* \"1127/util/CommonUtil.sol\":2315:2336  if (value == 0) break */\n      iszero\n      tag_88\n      jumpi\n        /* \"1127/util/CommonUtil.sol\":2331:2336  break */\n      jump(tag_84)\n        /* \"1127/util/CommonUtil.sol\":2315:2336  if (value == 0) break */\n    tag_88:\n        /* \"1127/util/CommonUtil.sol\":2069:2351  while (true) {... */\n      jump(tag_83)\n    tag_84:\n        /* \"1127/util/CommonUtil.sol\":2371:2377  buffer */\n      dup2\n        /* \"1127/util/CommonUtil.sol\":2364:2377  return buffer */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"1127/util/CommonUtil.sol\":1696:2394  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"1127/util/Math.sol\":12461:13409  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_79:\n        /* \"1127/util/Math.sol\":12514:12521  uint256 */\n      0x00\n        /* \"1127/util/Math.sol\":12534:12548  uint256 result */\n      dup1\n        /* \"1127/util/Math.sol\":12551:12552  0 */\n      0x00\n        /* \"1127/util/Math.sol\":12534:12552  uint256 result = 0 */\n      swap1\n      pop\n        /* \"1127/util/Math.sol\":12601:12609  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"1127/util/Math.sol\":12592:12597  value */\n      dup4\n        /* \"1127/util/Math.sol\":12592:12609  value >= 10 ** 64 */\n      lt\n        /* \"1127/util/Math.sol\":12588:12694  if (value >= 10 ** 64) {... */\n      tag_90\n      jumpi\n        /* \"1127/util/Math.sol\":12639:12647  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"1127/util/Math.sol\":12630:12647  value /= 10 ** 64 */\n      dup4\n      dup2\n      tag_91\n      jumpi\n      tag_92\n      tag_87\n      jump\t// in\n    tag_92:\n    tag_91:\n      div\n      swap3\n      pop\n        /* \"1127/util/Math.sol\":12676:12678  64 */\n      0x40\n        /* \"1127/util/Math.sol\":12666:12678  result += 64 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"1127/util/Math.sol\":12588:12694  if (value >= 10 ** 64) {... */\n    tag_90:\n        /* \"1127/util/Math.sol\":12721:12729  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"1127/util/Math.sol\":12712:12717  value */\n      dup4\n        /* \"1127/util/Math.sol\":12712:12729  value >= 10 ** 32 */\n      lt\n        /* \"1127/util/Math.sol\":12708:12814  if (value >= 10 ** 32) {... */\n      tag_93\n      jumpi\n        /* \"1127/util/Math.sol\":12759:12767  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"1127/util/Math.sol\":12750:12767  value /= 10 ** 32 */\n      dup4\n      dup2\n      tag_94\n      jumpi\n      tag_95\n      tag_87\n      jump\t// in\n    tag_95:\n    tag_94:\n      div\n      swap3\n      pop\n        /* \"1127/util/Math.sol\":12796:12798  32 */\n      0x20\n        /* \"1127/util/Math.sol\":12786:12798  result += 32 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"1127/util/Math.sol\":12708:12814  if (value >= 10 ** 32) {... */\n    tag_93:\n        /* \"1127/util/Math.sol\":12841:12849  10 ** 16 */\n      0x2386f26fc10000\n        /* \"1127/util/Math.sol\":12832:12837  value */\n      dup4\n        /* \"1127/util/Math.sol\":12832:12849  value >= 10 ** 16 */\n      lt\n        /* \"1127/util/Math.sol\":12828:12934  if (value >= 10 ** 16) {... */\n      tag_96\n      jumpi\n        /* \"1127/util/Math.sol\":12879:12887  10 ** 16 */\n      0x2386f26fc10000\n        /* \"1127/util/Math.sol\":12870:12887  value /= 10 ** 16 */\n      dup4\n      dup2\n      tag_97\n      jumpi\n      tag_98\n      tag_87\n      jump\t// in\n    tag_98:\n    tag_97:\n      div\n      swap3\n      pop\n        /* \"1127/util/Math.sol\":12916:12918  16 */\n      0x10\n        /* \"1127/util/Math.sol\":12906:12918  result += 16 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"1127/util/Math.sol\":12828:12934  if (value >= 10 ** 16) {... */\n    tag_96:\n        /* \"1127/util/Math.sol\":12961:12968  10 ** 8 */\n      0x05f5e100\n        /* \"1127/util/Math.sol\":12952:12957  value */\n      dup4\n        /* \"1127/util/Math.sol\":12952:12968  value >= 10 ** 8 */\n      lt\n        /* \"1127/util/Math.sol\":12948:13051  if (value >= 10 ** 8) {... */\n      tag_99\n      jumpi\n        /* \"1127/util/Math.sol\":12998:13005  10 ** 8 */\n      0x05f5e100\n        /* \"1127/util/Math.sol\":12989:13005  value /= 10 ** 8 */\n      dup4\n      dup2\n      tag_100\n      jumpi\n      tag_101\n      tag_87\n      jump\t// in\n    tag_101:\n    tag_100:\n      div\n      swap3\n      pop\n        /* \"1127/util/Math.sol\":13034:13035  8 */\n      0x08\n        /* \"1127/util/Math.sol\":13024:13035  result += 8 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"1127/util/Math.sol\":12948:13051  if (value >= 10 ** 8) {... */\n    tag_99:\n        /* \"1127/util/Math.sol\":13078:13085  10 ** 4 */\n      0x2710\n        /* \"1127/util/Math.sol\":13069:13074  value */\n      dup4\n        /* \"1127/util/Math.sol\":13069:13085  value >= 10 ** 4 */\n      lt\n        /* \"1127/util/Math.sol\":13065:13168  if (value >= 10 ** 4) {... */\n      tag_102\n      jumpi\n        /* \"1127/util/Math.sol\":13115:13122  10 ** 4 */\n      0x2710\n        /* \"1127/util/Math.sol\":13106:13122  value /= 10 ** 4 */\n      dup4\n      dup2\n      tag_103\n      jumpi\n      tag_104\n      tag_87\n      jump\t// in\n    tag_104:\n    tag_103:\n      div\n      swap3\n      pop\n        /* \"1127/util/Math.sol\":13151:13152  4 */\n      0x04\n        /* \"1127/util/Math.sol\":13141:13152  result += 4 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"1127/util/Math.sol\":13065:13168  if (value >= 10 ** 4) {... */\n    tag_102:\n        /* \"1127/util/Math.sol\":13195:13202  10 ** 2 */\n      0x64\n        /* \"1127/util/Math.sol\":13186:13191  value */\n      dup4\n        /* \"1127/util/Math.sol\":13186:13202  value >= 10 ** 2 */\n      lt\n        /* \"1127/util/Math.sol\":13182:13285  if (value >= 10 ** 2) {... */\n      tag_105\n      jumpi\n        /* \"1127/util/Math.sol\":13232:13239  10 ** 2 */\n      0x64\n        /* \"1127/util/Math.sol\":13223:13239  value /= 10 ** 2 */\n      dup4\n      dup2\n      tag_106\n      jumpi\n      tag_107\n      tag_87\n      jump\t// in\n    tag_107:\n    tag_106:\n      div\n      swap3\n      pop\n        /* \"1127/util/Math.sol\":13268:13269  2 */\n      0x02\n        /* \"1127/util/Math.sol\":13258:13269  result += 2 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"1127/util/Math.sol\":13182:13285  if (value >= 10 ** 2) {... */\n    tag_105:\n        /* \"1127/util/Math.sol\":13312:13319  10 ** 1 */\n      0x0a\n        /* \"1127/util/Math.sol\":13303:13308  value */\n      dup4\n        /* \"1127/util/Math.sol\":13303:13319  value >= 10 ** 1 */\n      lt\n        /* \"1127/util/Math.sol\":13299:13367  if (value >= 10 ** 1) {... */\n      tag_108\n      jumpi\n        /* \"1127/util/Math.sol\":13350:13351  1 */\n      0x01\n        /* \"1127/util/Math.sol\":13340:13351  result += 1 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"1127/util/Math.sol\":13299:13367  if (value >= 10 ** 1) {... */\n    tag_108:\n        /* \"1127/util/Math.sol\":13395:13401  result */\n      dup1\n        /* \"1127/util/Math.sol\":13388:13401  return result */\n      swap2\n      pop\n      pop\n        /* \"1127/util/Math.sol\":12461:13409  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_109:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_110:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_111:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:451   */\n    tag_112:\n        /* \"#utility.yul\":443:444   */\n      0x00\n        /* \"#utility.yul\":440:441   */\n      dup1\n        /* \"#utility.yul\":433:445   */\n      revert\n        /* \"#utility.yul\":457:574   */\n    tag_113:\n        /* \"#utility.yul\":566:567   */\n      0x00\n        /* \"#utility.yul\":563:564   */\n      dup1\n        /* \"#utility.yul\":556:568   */\n      revert\n        /* \"#utility.yul\":580:682   */\n    tag_114:\n        /* \"#utility.yul\":621:627   */\n      0x00\n        /* \"#utility.yul\":672:674   */\n      0x1f\n        /* \"#utility.yul\":668:675   */\n      not\n        /* \"#utility.yul\":663:665   */\n      0x1f\n        /* \"#utility.yul\":656:661   */\n      dup4\n        /* \"#utility.yul\":652:666   */\n      add\n        /* \"#utility.yul\":648:676   */\n      and\n        /* \"#utility.yul\":638:676   */\n      swap1\n      pop\n        /* \"#utility.yul\":580:682   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":688:868   */\n    tag_55:\n        /* \"#utility.yul\":736:813   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":733:734   */\n      0x00\n        /* \"#utility.yul\":726:814   */\n      mstore\n        /* \"#utility.yul\":833:837   */\n      0x41\n        /* \"#utility.yul\":830:831   */\n      0x04\n        /* \"#utility.yul\":823:838   */\n      mstore\n        /* \"#utility.yul\":857:861   */\n      0x24\n        /* \"#utility.yul\":854:855   */\n      0x00\n        /* \"#utility.yul\":847:862   */\n      revert\n        /* \"#utility.yul\":874:1155   */\n    tag_115:\n        /* \"#utility.yul\":957:984   */\n      tag_142\n        /* \"#utility.yul\":979:983   */\n      dup3\n        /* \"#utility.yul\":957:984   */\n      tag_114\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":949:955   */\n      dup2\n        /* \"#utility.yul\":945:985   */\n      add\n        /* \"#utility.yul\":1087:1093   */\n      dup2\n        /* \"#utility.yul\":1075:1085   */\n      dup2\n        /* \"#utility.yul\":1072:1094   */\n      lt\n        /* \"#utility.yul\":1051:1069   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1039:1049   */\n      dup3\n        /* \"#utility.yul\":1036:1070   */\n      gt\n        /* \"#utility.yul\":1033:1095   */\n      or\n        /* \"#utility.yul\":1030:1118   */\n      iszero\n      tag_143\n      jumpi\n        /* \"#utility.yul\":1098:1116   */\n      tag_144\n      tag_55\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":1030:1118   */\n    tag_143:\n        /* \"#utility.yul\":1138:1148   */\n      dup1\n        /* \"#utility.yul\":1134:1136   */\n      0x40\n        /* \"#utility.yul\":1127:1149   */\n      mstore\n        /* \"#utility.yul\":917:1155   */\n      pop\n        /* \"#utility.yul\":874:1155   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1161:1290   */\n    tag_116:\n        /* \"#utility.yul\":1195:1201   */\n      0x00\n        /* \"#utility.yul\":1222:1242   */\n      tag_146\n      tag_109\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":1212:1242   */\n      swap1\n      pop\n        /* \"#utility.yul\":1251:1284   */\n      tag_147\n        /* \"#utility.yul\":1279:1283   */\n      dup3\n        /* \"#utility.yul\":1271:1277   */\n      dup3\n        /* \"#utility.yul\":1251:1284   */\n      tag_115\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":1161:1290   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1296:1604   */\n    tag_117:\n        /* \"#utility.yul\":1358:1362   */\n      0x00\n        /* \"#utility.yul\":1448:1466   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1440:1446   */\n      dup3\n        /* \"#utility.yul\":1437:1467   */\n      gt\n        /* \"#utility.yul\":1434:1490   */\n      iszero\n      tag_149\n      jumpi\n        /* \"#utility.yul\":1470:1488   */\n      tag_150\n      tag_55\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":1434:1490   */\n    tag_149:\n        /* \"#utility.yul\":1508:1537   */\n      tag_151\n        /* \"#utility.yul\":1530:1536   */\n      dup3\n        /* \"#utility.yul\":1508:1537   */\n      tag_114\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":1500:1537   */\n      swap1\n      pop\n        /* \"#utility.yul\":1592:1596   */\n      0x20\n        /* \"#utility.yul\":1586:1590   */\n      dup2\n        /* \"#utility.yul\":1582:1597   */\n      add\n        /* \"#utility.yul\":1574:1597   */\n      swap1\n      pop\n        /* \"#utility.yul\":1296:1604   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1610:1764   */\n    tag_118:\n        /* \"#utility.yul\":1694:1700   */\n      dup3\n        /* \"#utility.yul\":1689:1692   */\n      dup2\n        /* \"#utility.yul\":1684:1687   */\n      dup4\n        /* \"#utility.yul\":1671:1701   */\n      calldatacopy\n        /* \"#utility.yul\":1756:1757   */\n      0x00\n        /* \"#utility.yul\":1747:1753   */\n      dup4\n        /* \"#utility.yul\":1742:1745   */\n      dup4\n        /* \"#utility.yul\":1738:1754   */\n      add\n        /* \"#utility.yul\":1731:1758   */\n      mstore\n        /* \"#utility.yul\":1610:1764   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1770:2182   */\n    tag_119:\n        /* \"#utility.yul\":1848:1853   */\n      0x00\n        /* \"#utility.yul\":1873:1939   */\n      tag_154\n        /* \"#utility.yul\":1889:1938   */\n      tag_155\n        /* \"#utility.yul\":1931:1937   */\n      dup5\n        /* \"#utility.yul\":1889:1938   */\n      tag_117\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":1873:1939   */\n      tag_116\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":1864:1939   */\n      swap1\n      pop\n        /* \"#utility.yul\":1962:1968   */\n      dup3\n        /* \"#utility.yul\":1955:1960   */\n      dup2\n        /* \"#utility.yul\":1948:1969   */\n      mstore\n        /* \"#utility.yul\":2000:2004   */\n      0x20\n        /* \"#utility.yul\":1993:1998   */\n      dup2\n        /* \"#utility.yul\":1989:2005   */\n      add\n        /* \"#utility.yul\":2038:2041   */\n      dup5\n        /* \"#utility.yul\":2029:2035   */\n      dup5\n        /* \"#utility.yul\":2024:2027   */\n      dup5\n        /* \"#utility.yul\":2020:2036   */\n      add\n        /* \"#utility.yul\":2017:2042   */\n      gt\n        /* \"#utility.yul\":2014:2126   */\n      iszero\n      tag_156\n      jumpi\n        /* \"#utility.yul\":2045:2124   */\n      tag_157\n      tag_113\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":2014:2126   */\n    tag_156:\n        /* \"#utility.yul\":2135:2176   */\n      tag_158\n        /* \"#utility.yul\":2169:2175   */\n      dup5\n        /* \"#utility.yul\":2164:2167   */\n      dup3\n        /* \"#utility.yul\":2159:2162   */\n      dup6\n        /* \"#utility.yul\":2135:2176   */\n      tag_118\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":1854:2182   */\n      pop\n        /* \"#utility.yul\":1770:2182   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2202:2542   */\n    tag_120:\n        /* \"#utility.yul\":2258:2263   */\n      0x00\n        /* \"#utility.yul\":2307:2310   */\n      dup3\n        /* \"#utility.yul\":2300:2304   */\n      0x1f\n        /* \"#utility.yul\":2292:2298   */\n      dup4\n        /* \"#utility.yul\":2288:2305   */\n      add\n        /* \"#utility.yul\":2284:2311   */\n      slt\n        /* \"#utility.yul\":2274:2396   */\n      tag_160\n      jumpi\n        /* \"#utility.yul\":2315:2394   */\n      tag_161\n      tag_112\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":2274:2396   */\n    tag_160:\n        /* \"#utility.yul\":2432:2438   */\n      dup2\n        /* \"#utility.yul\":2419:2439   */\n      calldataload\n        /* \"#utility.yul\":2457:2536   */\n      tag_162\n        /* \"#utility.yul\":2532:2535   */\n      dup5\n        /* \"#utility.yul\":2524:2530   */\n      dup3\n        /* \"#utility.yul\":2517:2521   */\n      0x20\n        /* \"#utility.yul\":2509:2515   */\n      dup7\n        /* \"#utility.yul\":2505:2522   */\n      add\n        /* \"#utility.yul\":2457:2536   */\n      tag_119\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":2448:2536   */\n      swap2\n      pop\n        /* \"#utility.yul\":2264:2542   */\n      pop\n        /* \"#utility.yul\":2202:2542   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2548:3707   */\n    tag_10:\n        /* \"#utility.yul\":2655:2661   */\n      0x00\n        /* \"#utility.yul\":2663:2669   */\n      dup1\n        /* \"#utility.yul\":2671:2677   */\n      0x00\n        /* \"#utility.yul\":2720:2722   */\n      0x60\n        /* \"#utility.yul\":2708:2717   */\n      dup5\n        /* \"#utility.yul\":2699:2706   */\n      dup7\n        /* \"#utility.yul\":2695:2718   */\n      sub\n        /* \"#utility.yul\":2691:2723   */\n      slt\n        /* \"#utility.yul\":2688:2807   */\n      iszero\n      tag_164\n      jumpi\n        /* \"#utility.yul\":2726:2805   */\n      tag_165\n      tag_110\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":2688:2807   */\n    tag_164:\n        /* \"#utility.yul\":2874:2875   */\n      0x00\n        /* \"#utility.yul\":2863:2872   */\n      dup5\n        /* \"#utility.yul\":2859:2876   */\n      add\n        /* \"#utility.yul\":2846:2877   */\n      calldataload\n        /* \"#utility.yul\":2904:2922   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2896:2902   */\n      dup2\n        /* \"#utility.yul\":2893:2923   */\n      gt\n        /* \"#utility.yul\":2890:3007   */\n      iszero\n      tag_166\n      jumpi\n        /* \"#utility.yul\":2926:3005   */\n      tag_167\n      tag_111\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":2890:3007   */\n    tag_166:\n        /* \"#utility.yul\":3031:3094   */\n      tag_168\n        /* \"#utility.yul\":3086:3093   */\n      dup7\n        /* \"#utility.yul\":3077:3083   */\n      dup3\n        /* \"#utility.yul\":3066:3075   */\n      dup8\n        /* \"#utility.yul\":3062:3084   */\n      add\n        /* \"#utility.yul\":3031:3094   */\n      tag_120\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":3021:3094   */\n      swap4\n      pop\n        /* \"#utility.yul\":2817:3104   */\n      pop\n        /* \"#utility.yul\":3171:3173   */\n      0x20\n        /* \"#utility.yul\":3160:3169   */\n      dup5\n        /* \"#utility.yul\":3156:3174   */\n      add\n        /* \"#utility.yul\":3143:3175   */\n      calldataload\n        /* \"#utility.yul\":3202:3220   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3194:3200   */\n      dup2\n        /* \"#utility.yul\":3191:3221   */\n      gt\n        /* \"#utility.yul\":3188:3305   */\n      iszero\n      tag_169\n      jumpi\n        /* \"#utility.yul\":3224:3303   */\n      tag_170\n      tag_111\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":3188:3305   */\n    tag_169:\n        /* \"#utility.yul\":3329:3392   */\n      tag_171\n        /* \"#utility.yul\":3384:3391   */\n      dup7\n        /* \"#utility.yul\":3375:3381   */\n      dup3\n        /* \"#utility.yul\":3364:3373   */\n      dup8\n        /* \"#utility.yul\":3360:3382   */\n      add\n        /* \"#utility.yul\":3329:3392   */\n      tag_120\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":3319:3392   */\n      swap3\n      pop\n        /* \"#utility.yul\":3114:3402   */\n      pop\n        /* \"#utility.yul\":3469:3471   */\n      0x40\n        /* \"#utility.yul\":3458:3467   */\n      dup5\n        /* \"#utility.yul\":3454:3472   */\n      add\n        /* \"#utility.yul\":3441:3473   */\n      calldataload\n        /* \"#utility.yul\":3500:3518   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3492:3498   */\n      dup2\n        /* \"#utility.yul\":3489:3519   */\n      gt\n        /* \"#utility.yul\":3486:3603   */\n      iszero\n      tag_172\n      jumpi\n        /* \"#utility.yul\":3522:3601   */\n      tag_173\n      tag_111\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":3486:3603   */\n    tag_172:\n        /* \"#utility.yul\":3627:3690   */\n      tag_174\n        /* \"#utility.yul\":3682:3689   */\n      dup7\n        /* \"#utility.yul\":3673:3679   */\n      dup3\n        /* \"#utility.yul\":3662:3671   */\n      dup8\n        /* \"#utility.yul\":3658:3680   */\n      add\n        /* \"#utility.yul\":3627:3690   */\n      tag_120\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":3617:3690   */\n      swap2\n      pop\n        /* \"#utility.yul\":3412:3700   */\n      pop\n        /* \"#utility.yul\":2548:3707   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":3713:3812   */\n    tag_121:\n        /* \"#utility.yul\":3765:3771   */\n      0x00\n        /* \"#utility.yul\":3799:3804   */\n      dup2\n        /* \"#utility.yul\":3793:3805   */\n      mload\n        /* \"#utility.yul\":3783:3805   */\n      swap1\n      pop\n        /* \"#utility.yul\":3713:3812   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3818:3987   */\n    tag_122:\n        /* \"#utility.yul\":3902:3913   */\n      0x00\n        /* \"#utility.yul\":3936:3942   */\n      dup3\n        /* \"#utility.yul\":3931:3934   */\n      dup3\n        /* \"#utility.yul\":3924:3943   */\n      mstore\n        /* \"#utility.yul\":3976:3980   */\n      0x20\n        /* \"#utility.yul\":3971:3974   */\n      dup3\n        /* \"#utility.yul\":3967:3981   */\n      add\n        /* \"#utility.yul\":3952:3981   */\n      swap1\n      pop\n        /* \"#utility.yul\":3818:3987   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3993:4300   */\n    tag_123:\n        /* \"#utility.yul\":4061:4062   */\n      0x00\n        /* \"#utility.yul\":4071:4184   */\n    tag_178:\n        /* \"#utility.yul\":4085:4091   */\n      dup4\n        /* \"#utility.yul\":4082:4083   */\n      dup2\n        /* \"#utility.yul\":4079:4092   */\n      lt\n        /* \"#utility.yul\":4071:4184   */\n      iszero\n      tag_180\n      jumpi\n        /* \"#utility.yul\":4170:4171   */\n      dup1\n        /* \"#utility.yul\":4165:4168   */\n      dup3\n        /* \"#utility.yul\":4161:4172   */\n      add\n        /* \"#utility.yul\":4155:4173   */\n      mload\n        /* \"#utility.yul\":4151:4152   */\n      dup2\n        /* \"#utility.yul\":4146:4149   */\n      dup5\n        /* \"#utility.yul\":4142:4153   */\n      add\n        /* \"#utility.yul\":4135:4174   */\n      mstore\n        /* \"#utility.yul\":4107:4109   */\n      0x20\n        /* \"#utility.yul\":4104:4105   */\n      dup2\n        /* \"#utility.yul\":4100:4110   */\n      add\n        /* \"#utility.yul\":4095:4110   */\n      swap1\n      pop\n        /* \"#utility.yul\":4071:4184   */\n      jump(tag_178)\n    tag_180:\n        /* \"#utility.yul\":4202:4208   */\n      dup4\n        /* \"#utility.yul\":4199:4200   */\n      dup2\n        /* \"#utility.yul\":4196:4209   */\n      gt\n        /* \"#utility.yul\":4193:4294   */\n      iszero\n      tag_181\n      jumpi\n        /* \"#utility.yul\":4282:4283   */\n      0x00\n        /* \"#utility.yul\":4273:4279   */\n      dup5\n        /* \"#utility.yul\":4268:4271   */\n      dup5\n        /* \"#utility.yul\":4264:4280   */\n      add\n        /* \"#utility.yul\":4257:4284   */\n      mstore\n        /* \"#utility.yul\":4193:4294   */\n    tag_181:\n        /* \"#utility.yul\":4042:4300   */\n      pop\n        /* \"#utility.yul\":3993:4300   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4306:4670   */\n    tag_124:\n        /* \"#utility.yul\":4394:4397   */\n      0x00\n        /* \"#utility.yul\":4422:4461   */\n      tag_183\n        /* \"#utility.yul\":4455:4460   */\n      dup3\n        /* \"#utility.yul\":4422:4461   */\n      tag_121\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":4477:4548   */\n      tag_184\n        /* \"#utility.yul\":4541:4547   */\n      dup2\n        /* \"#utility.yul\":4536:4539   */\n      dup6\n        /* \"#utility.yul\":4477:4548   */\n      tag_122\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":4470:4548   */\n      swap4\n      pop\n        /* \"#utility.yul\":4557:4609   */\n      tag_185\n        /* \"#utility.yul\":4602:4608   */\n      dup2\n        /* \"#utility.yul\":4597:4600   */\n      dup6\n        /* \"#utility.yul\":4590:4594   */\n      0x20\n        /* \"#utility.yul\":4583:4588   */\n      dup7\n        /* \"#utility.yul\":4579:4595   */\n      add\n        /* \"#utility.yul\":4557:4609   */\n      tag_123\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":4634:4663   */\n      tag_186\n        /* \"#utility.yul\":4656:4662   */\n      dup2\n        /* \"#utility.yul\":4634:4663   */\n      tag_114\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":4629:4632   */\n      dup5\n        /* \"#utility.yul\":4625:4664   */\n      add\n        /* \"#utility.yul\":4618:4664   */\n      swap2\n      pop\n        /* \"#utility.yul\":4398:4670   */\n      pop\n        /* \"#utility.yul\":4306:4670   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4676:4989   */\n    tag_13:\n        /* \"#utility.yul\":4789:4793   */\n      0x00\n        /* \"#utility.yul\":4827:4829   */\n      0x20\n        /* \"#utility.yul\":4816:4825   */\n      dup3\n        /* \"#utility.yul\":4812:4830   */\n      add\n        /* \"#utility.yul\":4804:4830   */\n      swap1\n      pop\n        /* \"#utility.yul\":4876:4885   */\n      dup2\n        /* \"#utility.yul\":4870:4874   */\n      dup2\n        /* \"#utility.yul\":4866:4886   */\n      sub\n        /* \"#utility.yul\":4862:4863   */\n      0x00\n        /* \"#utility.yul\":4851:4860   */\n      dup4\n        /* \"#utility.yul\":4847:4864   */\n      add\n        /* \"#utility.yul\":4840:4887   */\n      mstore\n        /* \"#utility.yul\":4904:4982   */\n      tag_188\n        /* \"#utility.yul\":4977:4981   */\n      dup2\n        /* \"#utility.yul\":4968:4974   */\n      dup5\n        /* \"#utility.yul\":4904:4982   */\n      tag_124\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":4896:4982   */\n      swap1\n      pop\n        /* \"#utility.yul\":4676:4989   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4995:5504   */\n    tag_16:\n        /* \"#utility.yul\":5064:5070   */\n      0x00\n        /* \"#utility.yul\":5113:5115   */\n      0x20\n        /* \"#utility.yul\":5101:5110   */\n      dup3\n        /* \"#utility.yul\":5092:5099   */\n      dup5\n        /* \"#utility.yul\":5088:5111   */\n      sub\n        /* \"#utility.yul\":5084:5116   */\n      slt\n        /* \"#utility.yul\":5081:5200   */\n      iszero\n      tag_190\n      jumpi\n        /* \"#utility.yul\":5119:5198   */\n      tag_191\n      tag_110\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":5081:5200   */\n    tag_190:\n        /* \"#utility.yul\":5267:5268   */\n      0x00\n        /* \"#utility.yul\":5256:5265   */\n      dup3\n        /* \"#utility.yul\":5252:5269   */\n      add\n        /* \"#utility.yul\":5239:5270   */\n      calldataload\n        /* \"#utility.yul\":5297:5315   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5289:5295   */\n      dup2\n        /* \"#utility.yul\":5286:5316   */\n      gt\n        /* \"#utility.yul\":5283:5400   */\n      iszero\n      tag_192\n      jumpi\n        /* \"#utility.yul\":5319:5398   */\n      tag_193\n      tag_111\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":5283:5400   */\n    tag_192:\n        /* \"#utility.yul\":5424:5487   */\n      tag_194\n        /* \"#utility.yul\":5479:5486   */\n      dup5\n        /* \"#utility.yul\":5470:5476   */\n      dup3\n        /* \"#utility.yul\":5459:5468   */\n      dup6\n        /* \"#utility.yul\":5455:5477   */\n      add\n        /* \"#utility.yul\":5424:5487   */\n      tag_120\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":5414:5487   */\n      swap2\n      pop\n        /* \"#utility.yul\":5210:5497   */\n      pop\n        /* \"#utility.yul\":4995:5504   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5510:5587   */\n    tag_125:\n        /* \"#utility.yul\":5547:5554   */\n      0x00\n        /* \"#utility.yul\":5576:5581   */\n      dup2\n        /* \"#utility.yul\":5565:5581   */\n      swap1\n      pop\n        /* \"#utility.yul\":5510:5587   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5593:5711   */\n    tag_126:\n        /* \"#utility.yul\":5680:5704   */\n      tag_197\n        /* \"#utility.yul\":5698:5703   */\n      dup2\n        /* \"#utility.yul\":5680:5704   */\n      tag_125\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":5675:5678   */\n      dup3\n        /* \"#utility.yul\":5668:5705   */\n      mstore\n        /* \"#utility.yul\":5593:5711   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5717:5939   */\n    tag_19:\n        /* \"#utility.yul\":5810:5814   */\n      0x00\n        /* \"#utility.yul\":5848:5850   */\n      0x20\n        /* \"#utility.yul\":5837:5846   */\n      dup3\n        /* \"#utility.yul\":5833:5851   */\n      add\n        /* \"#utility.yul\":5825:5851   */\n      swap1\n      pop\n        /* \"#utility.yul\":5861:5932   */\n      tag_199\n        /* \"#utility.yul\":5929:5930   */\n      0x00\n        /* \"#utility.yul\":5918:5927   */\n      dup4\n        /* \"#utility.yul\":5914:5931   */\n      add\n        /* \"#utility.yul\":5905:5911   */\n      dup5\n        /* \"#utility.yul\":5861:5932   */\n      tag_126\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":5717:5939   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5945:6022   */\n    tag_127:\n        /* \"#utility.yul\":5982:5989   */\n      0x00\n        /* \"#utility.yul\":6011:6016   */\n      dup2\n        /* \"#utility.yul\":6000:6016   */\n      swap1\n      pop\n        /* \"#utility.yul\":5945:6022   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6028:6150   */\n    tag_128:\n        /* \"#utility.yul\":6101:6125   */\n      tag_202\n        /* \"#utility.yul\":6119:6124   */\n      dup2\n        /* \"#utility.yul\":6101:6125   */\n      tag_127\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":6094:6099   */\n      dup2\n        /* \"#utility.yul\":6091:6126   */\n      eq\n        /* \"#utility.yul\":6081:6144   */\n      tag_203\n      jumpi\n        /* \"#utility.yul\":6140:6141   */\n      0x00\n        /* \"#utility.yul\":6137:6138   */\n      dup1\n        /* \"#utility.yul\":6130:6142   */\n      revert\n        /* \"#utility.yul\":6081:6144   */\n    tag_203:\n        /* \"#utility.yul\":6028:6150   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6156:6295   */\n    tag_129:\n        /* \"#utility.yul\":6202:6207   */\n      0x00\n        /* \"#utility.yul\":6240:6246   */\n      dup2\n        /* \"#utility.yul\":6227:6247   */\n      calldataload\n        /* \"#utility.yul\":6218:6247   */\n      swap1\n      pop\n        /* \"#utility.yul\":6256:6289   */\n      tag_205\n        /* \"#utility.yul\":6283:6288   */\n      dup2\n        /* \"#utility.yul\":6256:6289   */\n      tag_128\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":6156:6295   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6301:6955   */\n    tag_22:\n        /* \"#utility.yul\":6379:6385   */\n      0x00\n        /* \"#utility.yul\":6387:6393   */\n      dup1\n        /* \"#utility.yul\":6436:6438   */\n      0x40\n        /* \"#utility.yul\":6424:6433   */\n      dup4\n        /* \"#utility.yul\":6415:6422   */\n      dup6\n        /* \"#utility.yul\":6411:6434   */\n      sub\n        /* \"#utility.yul\":6407:6439   */\n      slt\n        /* \"#utility.yul\":6404:6523   */\n      iszero\n      tag_207\n      jumpi\n        /* \"#utility.yul\":6442:6521   */\n      tag_208\n      tag_110\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":6404:6523   */\n    tag_207:\n        /* \"#utility.yul\":6590:6591   */\n      0x00\n        /* \"#utility.yul\":6579:6588   */\n      dup4\n        /* \"#utility.yul\":6575:6592   */\n      add\n        /* \"#utility.yul\":6562:6593   */\n      calldataload\n        /* \"#utility.yul\":6620:6638   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6612:6618   */\n      dup2\n        /* \"#utility.yul\":6609:6639   */\n      gt\n        /* \"#utility.yul\":6606:6723   */\n      iszero\n      tag_209\n      jumpi\n        /* \"#utility.yul\":6642:6721   */\n      tag_210\n      tag_111\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":6606:6723   */\n    tag_209:\n        /* \"#utility.yul\":6747:6810   */\n      tag_211\n        /* \"#utility.yul\":6802:6809   */\n      dup6\n        /* \"#utility.yul\":6793:6799   */\n      dup3\n        /* \"#utility.yul\":6782:6791   */\n      dup7\n        /* \"#utility.yul\":6778:6800   */\n      add\n        /* \"#utility.yul\":6747:6810   */\n      tag_120\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":6737:6810   */\n      swap3\n      pop\n        /* \"#utility.yul\":6533:6820   */\n      pop\n        /* \"#utility.yul\":6859:6861   */\n      0x20\n        /* \"#utility.yul\":6885:6938   */\n      tag_212\n        /* \"#utility.yul\":6930:6937   */\n      dup6\n        /* \"#utility.yul\":6921:6927   */\n      dup3\n        /* \"#utility.yul\":6910:6919   */\n      dup7\n        /* \"#utility.yul\":6906:6928   */\n      add\n        /* \"#utility.yul\":6885:6938   */\n      tag_129\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":6875:6938   */\n      swap2\n      pop\n        /* \"#utility.yul\":6830:6948   */\n      pop\n        /* \"#utility.yul\":6301:6955   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6961:7795   */\n    tag_31:\n        /* \"#utility.yul\":7049:7055   */\n      0x00\n        /* \"#utility.yul\":7057:7063   */\n      dup1\n        /* \"#utility.yul\":7106:7108   */\n      0x40\n        /* \"#utility.yul\":7094:7103   */\n      dup4\n        /* \"#utility.yul\":7085:7092   */\n      dup6\n        /* \"#utility.yul\":7081:7104   */\n      sub\n        /* \"#utility.yul\":7077:7109   */\n      slt\n        /* \"#utility.yul\":7074:7193   */\n      iszero\n      tag_214\n      jumpi\n        /* \"#utility.yul\":7112:7191   */\n      tag_215\n      tag_110\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":7074:7193   */\n    tag_214:\n        /* \"#utility.yul\":7260:7261   */\n      0x00\n        /* \"#utility.yul\":7249:7258   */\n      dup4\n        /* \"#utility.yul\":7245:7262   */\n      add\n        /* \"#utility.yul\":7232:7263   */\n      calldataload\n        /* \"#utility.yul\":7290:7308   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7282:7288   */\n      dup2\n        /* \"#utility.yul\":7279:7309   */\n      gt\n        /* \"#utility.yul\":7276:7393   */\n      iszero\n      tag_216\n      jumpi\n        /* \"#utility.yul\":7312:7391   */\n      tag_217\n      tag_111\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":7276:7393   */\n    tag_216:\n        /* \"#utility.yul\":7417:7480   */\n      tag_218\n        /* \"#utility.yul\":7472:7479   */\n      dup6\n        /* \"#utility.yul\":7463:7469   */\n      dup3\n        /* \"#utility.yul\":7452:7461   */\n      dup7\n        /* \"#utility.yul\":7448:7470   */\n      add\n        /* \"#utility.yul\":7417:7480   */\n      tag_120\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":7407:7480   */\n      swap3\n      pop\n        /* \"#utility.yul\":7203:7490   */\n      pop\n        /* \"#utility.yul\":7557:7559   */\n      0x20\n        /* \"#utility.yul\":7546:7555   */\n      dup4\n        /* \"#utility.yul\":7542:7560   */\n      add\n        /* \"#utility.yul\":7529:7561   */\n      calldataload\n        /* \"#utility.yul\":7588:7606   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7580:7586   */\n      dup2\n        /* \"#utility.yul\":7577:7607   */\n      gt\n        /* \"#utility.yul\":7574:7691   */\n      iszero\n      tag_219\n      jumpi\n        /* \"#utility.yul\":7610:7689   */\n      tag_220\n      tag_111\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":7574:7691   */\n    tag_219:\n        /* \"#utility.yul\":7715:7778   */\n      tag_221\n        /* \"#utility.yul\":7770:7777   */\n      dup6\n        /* \"#utility.yul\":7761:7767   */\n      dup3\n        /* \"#utility.yul\":7750:7759   */\n      dup7\n        /* \"#utility.yul\":7746:7768   */\n      add\n        /* \"#utility.yul\":7715:7778   */\n      tag_120\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":7705:7778   */\n      swap2\n      pop\n        /* \"#utility.yul\":7500:7788   */\n      pop\n        /* \"#utility.yul\":6961:7795   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7801:7949   */\n    tag_130:\n        /* \"#utility.yul\":7903:7914   */\n      0x00\n        /* \"#utility.yul\":7940:7943   */\n      dup2\n        /* \"#utility.yul\":7925:7943   */\n      swap1\n      pop\n        /* \"#utility.yul\":7801:7949   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7955:8332   */\n    tag_131:\n        /* \"#utility.yul\":8061:8064   */\n      0x00\n        /* \"#utility.yul\":8089:8128   */\n      tag_224\n        /* \"#utility.yul\":8122:8127   */\n      dup3\n        /* \"#utility.yul\":8089:8128   */\n      tag_121\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":8144:8233   */\n      tag_225\n        /* \"#utility.yul\":8226:8232   */\n      dup2\n        /* \"#utility.yul\":8221:8224   */\n      dup6\n        /* \"#utility.yul\":8144:8233   */\n      tag_130\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":8137:8233   */\n      swap4\n      pop\n        /* \"#utility.yul\":8242:8294   */\n      tag_226\n        /* \"#utility.yul\":8287:8293   */\n      dup2\n        /* \"#utility.yul\":8282:8285   */\n      dup6\n        /* \"#utility.yul\":8275:8279   */\n      0x20\n        /* \"#utility.yul\":8268:8273   */\n      dup7\n        /* \"#utility.yul\":8264:8280   */\n      add\n        /* \"#utility.yul\":8242:8294   */\n      tag_123\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":8319:8325   */\n      dup1\n        /* \"#utility.yul\":8314:8317   */\n      dup5\n        /* \"#utility.yul\":8310:8326   */\n      add\n        /* \"#utility.yul\":8303:8326   */\n      swap2\n      pop\n        /* \"#utility.yul\":8065:8332   */\n      pop\n        /* \"#utility.yul\":7955:8332   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8338:8613   */\n    tag_49:\n        /* \"#utility.yul\":8470:8473   */\n      0x00\n        /* \"#utility.yul\":8492:8587   */\n      tag_228\n        /* \"#utility.yul\":8583:8586   */\n      dup3\n        /* \"#utility.yul\":8574:8580   */\n      dup5\n        /* \"#utility.yul\":8492:8587   */\n      tag_131\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":8485:8587   */\n      swap2\n      pop\n        /* \"#utility.yul\":8604:8607   */\n      dup2\n        /* \"#utility.yul\":8597:8607   */\n      swap1\n      pop\n        /* \"#utility.yul\":8338:8613   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8619:8799   */\n    tag_132:\n        /* \"#utility.yul\":8667:8744   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8664:8665   */\n      0x00\n        /* \"#utility.yul\":8657:8745   */\n      mstore\n        /* \"#utility.yul\":8764:8768   */\n      0x11\n        /* \"#utility.yul\":8761:8762   */\n      0x04\n        /* \"#utility.yul\":8754:8769   */\n      mstore\n        /* \"#utility.yul\":8788:8792   */\n      0x24\n        /* \"#utility.yul\":8785:8786   */\n      0x00\n        /* \"#utility.yul\":8778:8793   */\n      revert\n        /* \"#utility.yul\":8805:9110   */\n    tag_52:\n        /* \"#utility.yul\":8845:8848   */\n      0x00\n        /* \"#utility.yul\":8864:8884   */\n      tag_231\n        /* \"#utility.yul\":8882:8883   */\n      dup3\n        /* \"#utility.yul\":8864:8884   */\n      tag_127\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":8859:8884   */\n      swap2\n      pop\n        /* \"#utility.yul\":8898:8918   */\n      tag_232\n        /* \"#utility.yul\":8916:8917   */\n      dup4\n        /* \"#utility.yul\":8898:8918   */\n      tag_127\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":8893:8918   */\n      swap3\n      pop\n        /* \"#utility.yul\":9052:9053   */\n      dup3\n        /* \"#utility.yul\":8984:9050   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":8980:9054   */\n      sub\n        /* \"#utility.yul\":8977:8978   */\n      dup3\n        /* \"#utility.yul\":8974:9055   */\n      gt\n        /* \"#utility.yul\":8971:9078   */\n      iszero\n      tag_233\n      jumpi\n        /* \"#utility.yul\":9058:9076   */\n      tag_234\n      tag_132\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":8971:9078   */\n    tag_233:\n        /* \"#utility.yul\":9102:9103   */\n      dup3\n        /* \"#utility.yul\":9099:9100   */\n      dup3\n        /* \"#utility.yul\":9095:9104   */\n      add\n        /* \"#utility.yul\":9088:9104   */\n      swap1\n      pop\n        /* \"#utility.yul\":8805:9110   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9116:9296   */\n    tag_62:\n        /* \"#utility.yul\":9164:9241   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9161:9162   */\n      0x00\n        /* \"#utility.yul\":9154:9242   */\n      mstore\n        /* \"#utility.yul\":9261:9265   */\n      0x32\n        /* \"#utility.yul\":9258:9259   */\n      0x04\n        /* \"#utility.yul\":9251:9266   */\n      mstore\n        /* \"#utility.yul\":9285:9289   */\n      0x24\n        /* \"#utility.yul\":9282:9283   */\n      0x00\n        /* \"#utility.yul\":9275:9290   */\n      revert\n        /* \"#utility.yul\":9302:9535   */\n    tag_64:\n        /* \"#utility.yul\":9341:9344   */\n      0x00\n        /* \"#utility.yul\":9364:9388   */\n      tag_237\n        /* \"#utility.yul\":9382:9387   */\n      dup3\n        /* \"#utility.yul\":9364:9388   */\n      tag_127\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":9355:9388   */\n      swap2\n      pop\n        /* \"#utility.yul\":9410:9476   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":9403:9408   */\n      dup3\n        /* \"#utility.yul\":9400:9477   */\n      eq\n        /* \"#utility.yul\":9397:9500   */\n      iszero\n      tag_238\n      jumpi\n        /* \"#utility.yul\":9480:9498   */\n      tag_239\n      tag_132\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":9397:9500   */\n    tag_238:\n        /* \"#utility.yul\":9527:9528   */\n      0x01\n        /* \"#utility.yul\":9520:9525   */\n      dup3\n        /* \"#utility.yul\":9516:9529   */\n      add\n        /* \"#utility.yul\":9509:9529   */\n      swap1\n      pop\n        /* \"#utility.yul\":9302:9535   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9541:9721   */\n    tag_87:\n        /* \"#utility.yul\":9589:9666   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9586:9587   */\n      0x00\n        /* \"#utility.yul\":9579:9667   */\n      mstore\n        /* \"#utility.yul\":9686:9690   */\n      0x12\n        /* \"#utility.yul\":9683:9684   */\n      0x04\n        /* \"#utility.yul\":9676:9691   */\n      mstore\n        /* \"#utility.yul\":9710:9714   */\n      0x24\n        /* \"#utility.yul\":9707:9708   */\n      0x00\n        /* \"#utility.yul\":9700:9715   */\n      revert\n\n    auxdata: 0xa264697066735822122000ba1c0c45364f92a5e4240fdfc1caca6a067417e14b11044a4bd1f879e1321064736f6c634300080b0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610c68806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063609f70701461005c57806360e015941461008c578063a1f7ed1a146100bc578063cfb51928146100ec578063ff74927b1461011c575b600080fd5b610076600480360381019061007191906107db565b61014c565b604051610083919061090a565b60405180910390f35b6100a660048036038101906100a1919061092c565b610224565b6040516100b3919061098e565b60405180910390f35b6100d660048036038101906100d191906109df565b610236565b6040516100e3919061090a565b60405180910390f35b6101066004803603810190610101919061092c565b610290565b604051610113919061098e565b60405180910390f35b61013660048036038101906101319190610a3b565b6102c0565b604051610143919061090a565b60405180910390f35b606061021b6101d76101936040518060400160405280600a81526020017f436f6e74726163743a2000000000000000000000000000000000000000000000815250876102c0565b6101d26040518060400160405280600b81526020017f2c46756e6374696f6e3a20000000000000000000000000000000000000000000815250876102c0565b6102c0565b6102166040518060400160405280600a81526020017f2c4d6573736167653a2000000000000000000000000000000000000000000000815250856102c0565b6102c0565b90509392505050565b600061022f82610290565b9050919050565b606061028861027a846040518060400160405280600181526020017f3a000000000000000000000000000000000000000000000000000000000000008152506102c0565b61028384610456565b6102c0565b905092915050565b6000816040516020016102a39190610aef565b604051602081830303815290604052805190602001209050919050565b6060600083905060008390506000815183516102dc9190610b35565b67ffffffffffffffff8111156102f5576102f46106b0565b5b6040519080825280601f01601f1916602001820160405280156103275781602001600182028036833780820191505090505b50905060008190506000805b85518110156103bb5785818151811061034f5761034e610b8b565b5b602001015160f81c60f81b83838061036690610bba565b94508151811061037957610378610b8b565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806103b390610bba565b915050610333565b5060005b8451811015610447578481815181106103db576103da610b8b565b5b602001015160f81c60f81b8383806103f290610bba565b94508151811061040557610404610b8b565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808061043f90610bba565b9150506103bf565b50829550505050505092915050565b6060600060016104658461052e565b01905060008167ffffffffffffffff811115610484576104836106b0565b5b6040519080825280601f01601f1916602001820160405280156104b65781602001600182028036833780820191505090505b509050600082602001820190505b600115610523578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a858161050d5761050c610c03565b5b049450600085141561051e57610523565b6104c4565b819350505050919050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000831061058c577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161058257610581610c03565b5b0492506040810190505b6d04ee2d6d415b85acef810000000083106105c9576d04ee2d6d415b85acef810000000083816105bf576105be610c03565b5b0492506020810190505b662386f26fc1000083106105f857662386f26fc1000083816105ee576105ed610c03565b5b0492506010810190505b6305f5e1008310610621576305f5e100838161061757610616610c03565b5b0492506008810190505b612710831061064657612710838161063c5761063b610c03565b5b0492506004810190505b60648310610669576064838161065f5761065e610c03565b5b0492506002810190505b600a8310610678576001810190505b80915050919050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6106e88261069f565b810181811067ffffffffffffffff82111715610707576107066106b0565b5b80604052505050565b600061071a610681565b905061072682826106df565b919050565b600067ffffffffffffffff821115610746576107456106b0565b5b61074f8261069f565b9050602081019050919050565b82818337600083830152505050565b600061077e6107798461072b565b610710565b90508281526020810184848401111561079a5761079961069a565b5b6107a584828561075c565b509392505050565b600082601f8301126107c2576107c1610695565b5b81356107d284826020860161076b565b91505092915050565b6000806000606084860312156107f4576107f361068b565b5b600084013567ffffffffffffffff81111561081257610811610690565b5b61081e868287016107ad565b935050602084013567ffffffffffffffff81111561083f5761083e610690565b5b61084b868287016107ad565b925050604084013567ffffffffffffffff81111561086c5761086b610690565b5b610878868287016107ad565b9150509250925092565b600081519050919050565b600082825260208201905092915050565b60005b838110156108bc5780820151818401526020810190506108a1565b838111156108cb576000848401525b50505050565b60006108dc82610882565b6108e6818561088d565b93506108f681856020860161089e565b6108ff8161069f565b840191505092915050565b6000602082019050818103600083015261092481846108d1565b905092915050565b6000602082840312156109425761094161068b565b5b600082013567ffffffffffffffff8111156109605761095f610690565b5b61096c848285016107ad565b91505092915050565b6000819050919050565b61098881610975565b82525050565b60006020820190506109a3600083018461097f565b92915050565b6000819050919050565b6109bc816109a9565b81146109c757600080fd5b50565b6000813590506109d9816109b3565b92915050565b600080604083850312156109f6576109f561068b565b5b600083013567ffffffffffffffff811115610a1457610a13610690565b5b610a20858286016107ad565b9250506020610a31858286016109ca565b9150509250929050565b60008060408385031215610a5257610a5161068b565b5b600083013567ffffffffffffffff811115610a7057610a6f610690565b5b610a7c858286016107ad565b925050602083013567ffffffffffffffff811115610a9d57610a9c610690565b5b610aa9858286016107ad565b9150509250929050565b600081905092915050565b6000610ac982610882565b610ad38185610ab3565b9350610ae381856020860161089e565b80840191505092915050565b6000610afb8284610abe565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610b40826109a9565b9150610b4b836109a9565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610b8057610b7f610b06565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610bc5826109a9565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610bf857610bf7610b06565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fdfea264697066735822122000ba1c0c45364f92a5e4240fdfc1caca6a067417e14b11044a4bd1f879e1321064736f6c634300080b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC68 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x609F7070 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x60E01594 EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0xA1F7ED1A EQ PUSH2 0xBC JUMPI DUP1 PUSH4 0xCFB51928 EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0xFF74927B EQ PUSH2 0x11C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x76 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x7DB JUMP JUMPDEST PUSH2 0x14C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x90A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA1 SWAP2 SWAP1 PUSH2 0x92C JUMP JUMPDEST PUSH2 0x224 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB3 SWAP2 SWAP1 PUSH2 0x98E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD1 SWAP2 SWAP1 PUSH2 0x9DF JUMP JUMPDEST PUSH2 0x236 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x90A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x106 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x101 SWAP2 SWAP1 PUSH2 0x92C JUMP JUMPDEST PUSH2 0x290 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x113 SWAP2 SWAP1 PUSH2 0x98E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x136 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x131 SWAP2 SWAP1 PUSH2 0xA3B JUMP JUMPDEST PUSH2 0x2C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x143 SWAP2 SWAP1 PUSH2 0x90A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH2 0x21B PUSH2 0x1D7 PUSH2 0x193 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x436F6E74726163743A2000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP8 PUSH2 0x2C0 JUMP JUMPDEST PUSH2 0x1D2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x2C46756E6374696F6E3A20000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP8 PUSH2 0x2C0 JUMP JUMPDEST PUSH2 0x2C0 JUMP JUMPDEST PUSH2 0x216 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x2C4D6573736167653A2000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP6 PUSH2 0x2C0 JUMP JUMPDEST PUSH2 0x2C0 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22F DUP3 PUSH2 0x290 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x288 PUSH2 0x27A DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3A00000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x2C0 JUMP JUMPDEST PUSH2 0x283 DUP5 PUSH2 0x456 JUMP JUMPDEST PUSH2 0x2C0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2A3 SWAP2 SWAP1 PUSH2 0xAEF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP4 SWAP1 POP PUSH1 0x0 DUP4 SWAP1 POP PUSH1 0x0 DUP2 MLOAD DUP4 MLOAD PUSH2 0x2DC SWAP2 SWAP1 PUSH2 0xB35 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2F5 JUMPI PUSH2 0x2F4 PUSH2 0x6B0 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x327 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0x3BB JUMPI DUP6 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x34F JUMPI PUSH2 0x34E PUSH2 0xB8B JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL DUP4 DUP4 DUP1 PUSH2 0x366 SWAP1 PUSH2 0xBBA JUMP JUMPDEST SWAP5 POP DUP2 MLOAD DUP2 LT PUSH2 0x379 JUMPI PUSH2 0x378 PUSH2 0xB8B JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP DUP1 DUP1 PUSH2 0x3B3 SWAP1 PUSH2 0xBBA JUMP JUMPDEST SWAP2 POP POP PUSH2 0x333 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x447 JUMPI DUP5 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x3DB JUMPI PUSH2 0x3DA PUSH2 0xB8B JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL DUP4 DUP4 DUP1 PUSH2 0x3F2 SWAP1 PUSH2 0xBBA JUMP JUMPDEST SWAP5 POP DUP2 MLOAD DUP2 LT PUSH2 0x405 JUMPI PUSH2 0x404 PUSH2 0xB8B JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP DUP1 DUP1 PUSH2 0x43F SWAP1 PUSH2 0xBBA JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3BF JUMP JUMPDEST POP DUP3 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x465 DUP5 PUSH2 0x52E JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x484 JUMPI PUSH2 0x483 PUSH2 0x6B0 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x4B6 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x523 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x50D JUMPI PUSH2 0x50C PUSH2 0xC03 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 EQ ISZERO PUSH2 0x51E JUMPI PUSH2 0x523 JUMP JUMPDEST PUSH2 0x4C4 JUMP JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x58C JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x582 JUMPI PUSH2 0x581 PUSH2 0xC03 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x5C9 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x5BF JUMPI PUSH2 0x5BE PUSH2 0xC03 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x5F8 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x5EE JUMPI PUSH2 0x5ED PUSH2 0xC03 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x621 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x617 JUMPI PUSH2 0x616 PUSH2 0xC03 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x646 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x63C JUMPI PUSH2 0x63B PUSH2 0xC03 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x669 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x65F JUMPI PUSH2 0x65E PUSH2 0xC03 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x678 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x6E8 DUP3 PUSH2 0x69F JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x707 JUMPI PUSH2 0x706 PUSH2 0x6B0 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x71A PUSH2 0x681 JUMP JUMPDEST SWAP1 POP PUSH2 0x726 DUP3 DUP3 PUSH2 0x6DF JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x746 JUMPI PUSH2 0x745 PUSH2 0x6B0 JUMP JUMPDEST JUMPDEST PUSH2 0x74F DUP3 PUSH2 0x69F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77E PUSH2 0x779 DUP5 PUSH2 0x72B JUMP JUMPDEST PUSH2 0x710 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x79A JUMPI PUSH2 0x799 PUSH2 0x69A JUMP JUMPDEST JUMPDEST PUSH2 0x7A5 DUP5 DUP3 DUP6 PUSH2 0x75C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x7C2 JUMPI PUSH2 0x7C1 PUSH2 0x695 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x7D2 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x76B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x7F4 JUMPI PUSH2 0x7F3 PUSH2 0x68B JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x812 JUMPI PUSH2 0x811 PUSH2 0x690 JUMP JUMPDEST JUMPDEST PUSH2 0x81E DUP7 DUP3 DUP8 ADD PUSH2 0x7AD JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x83F JUMPI PUSH2 0x83E PUSH2 0x690 JUMP JUMPDEST JUMPDEST PUSH2 0x84B DUP7 DUP3 DUP8 ADD PUSH2 0x7AD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x86C JUMPI PUSH2 0x86B PUSH2 0x690 JUMP JUMPDEST JUMPDEST PUSH2 0x878 DUP7 DUP3 DUP8 ADD PUSH2 0x7AD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x8BC JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x8A1 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x8CB JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8DC DUP3 PUSH2 0x882 JUMP JUMPDEST PUSH2 0x8E6 DUP2 DUP6 PUSH2 0x88D JUMP JUMPDEST SWAP4 POP PUSH2 0x8F6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x89E JUMP JUMPDEST PUSH2 0x8FF DUP2 PUSH2 0x69F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x924 DUP2 DUP5 PUSH2 0x8D1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x942 JUMPI PUSH2 0x941 PUSH2 0x68B JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x960 JUMPI PUSH2 0x95F PUSH2 0x690 JUMP JUMPDEST JUMPDEST PUSH2 0x96C DUP5 DUP3 DUP6 ADD PUSH2 0x7AD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x988 DUP2 PUSH2 0x975 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9A3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x97F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9BC DUP2 PUSH2 0x9A9 JUMP JUMPDEST DUP2 EQ PUSH2 0x9C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x9D9 DUP2 PUSH2 0x9B3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9F6 JUMPI PUSH2 0x9F5 PUSH2 0x68B JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA14 JUMPI PUSH2 0xA13 PUSH2 0x690 JUMP JUMPDEST JUMPDEST PUSH2 0xA20 DUP6 DUP3 DUP7 ADD PUSH2 0x7AD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xA31 DUP6 DUP3 DUP7 ADD PUSH2 0x9CA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA52 JUMPI PUSH2 0xA51 PUSH2 0x68B JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA70 JUMPI PUSH2 0xA6F PUSH2 0x690 JUMP JUMPDEST JUMPDEST PUSH2 0xA7C DUP6 DUP3 DUP7 ADD PUSH2 0x7AD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA9D JUMPI PUSH2 0xA9C PUSH2 0x690 JUMP JUMPDEST JUMPDEST PUSH2 0xAA9 DUP6 DUP3 DUP7 ADD PUSH2 0x7AD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAC9 DUP3 PUSH2 0x882 JUMP JUMPDEST PUSH2 0xAD3 DUP2 DUP6 PUSH2 0xAB3 JUMP JUMPDEST SWAP4 POP PUSH2 0xAE3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x89E JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAFB DUP3 DUP5 PUSH2 0xABE JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB40 DUP3 PUSH2 0x9A9 JUMP JUMPDEST SWAP2 POP PUSH2 0xB4B DUP4 PUSH2 0x9A9 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xB80 JUMPI PUSH2 0xB7F PUSH2 0xB06 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xBC5 DUP3 PUSH2 0x9A9 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0xBF8 JUMPI PUSH2 0xBF7 PUSH2 0xB06 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP 0xBA SHR 0xC GASLIMIT CALLDATASIZE 0x4F SWAP3 0xA5 0xE4 0x24 0xF 0xDF 0xC1 0xCA 0xCA PUSH11 0x67417E14B11044A4BD1F8 PUSH26 0xE1321064736F6C634300080B0033000000000000000000000000 ",
							"sourceMap": "150:2252:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@error_70": {
									"entryPoint": 332,
									"id": 70,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@log10_1101": {
									"entryPoint": 1326,
									"id": 1101,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@strConcat_179": {
									"entryPoint": 704,
									"id": 179,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@stringToBytes32_86": {
									"entryPoint": 656,
									"id": 86,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@toAssetIndex_41": {
									"entryPoint": 566,
									"id": 41,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@toRole_21": {
									"entryPoint": 548,
									"id": 21,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@toString_226": {
									"entryPoint": 1110,
									"id": 226,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 1899,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 1965,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2506,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 2348,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr": {
									"entryPoint": 2619,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptr": {
									"entryPoint": 2011,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_string_memory_ptrt_uint256": {
									"entryPoint": 2527,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 2431,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2257,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 2750,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 2799,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 2446,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2314,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1808,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 1665,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 1835,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 2178,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2189,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 2739,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2869,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 2421,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2473,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory": {
									"entryPoint": 1884,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory": {
									"entryPoint": 2206,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 1759,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 3002,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2822,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 3075,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 2955,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1712,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1685,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 1690,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1680,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1675,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1695,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2483,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:9724:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:3",
														"type": ""
													}
												],
												"src": "7:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "423:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "433:12:3"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "546:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "563:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "566:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "556:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "556:12:3"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "628:54:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "638:38:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "663:2:3",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:3"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "672:2:3",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:3"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:28:3"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:3"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "611:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "621:6:3",
														"type": ""
													}
												],
												"src": "580:102:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "716:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "733:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "736:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "726:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "726:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "830:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "833:4:3",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "823:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "823:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "854:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "857:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "847:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "847:15:3"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "917:238:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:3",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:3"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "945:40:3"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "931:10:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1096:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:3",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:3"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:3"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:3"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1033:62:3"
															},
															"nodeType": "YulIf",
															"src": "1030:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:3",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1127:22:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:3"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "903:6:3",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "911:4:3",
														"type": ""
													}
												],
												"src": "874:281:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1202:88:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1212:30:3",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1222:20:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:3"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:3"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1251:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:3"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1186:4:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1195:6:3",
														"type": ""
													}
												],
												"src": "1161:129:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1363:241:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1468:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:3",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1437:30:3"
															},
															"nodeType": "YulIf",
															"src": "1434:56:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1500:37:3",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:3"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1508:29:3"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1574:23:3",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1582:15:3"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:3"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1347:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1358:4:3",
														"type": ""
													}
												],
												"src": "1296:308:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1661:103:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "1684:3:3"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "1689:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1694:6:3"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1671:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1671:30:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1671:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1742:3:3"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1747:6:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1738:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1738:16:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1756:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1731:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1731:27:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1731:27:3"
														}
													]
												},
												"name": "copy_calldata_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1643:3:3",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1648:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1653:6:3",
														"type": ""
													}
												],
												"src": "1610:154:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1854:328:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1864:75:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1931:6:3"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "1889:41:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1889:49:3"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1873:15:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1873:66:3"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1864:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "1955:5:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1962:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1948:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1948:21:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1948:21:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1978:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "1993:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2000:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1989:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1989:16:3"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "1982:3:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2043:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "2045:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2045:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2045:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "2024:3:3"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2029:6:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2020:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2020:16:3"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2038:3:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2017:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2017:25:3"
															},
															"nodeType": "YulIf",
															"src": "2014:112:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2159:3:3"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "2164:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2169:6:3"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2135:23:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2135:41:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2135:41:3"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1827:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1832:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1840:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1848:5:3",
														"type": ""
													}
												],
												"src": "1770:412:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2264:278:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2313:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "2315:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2315:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2315:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2292:6:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2300:4:3",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2288:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2288:17:3"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2307:3:3"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2284:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2284:27:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2277:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2277:35:3"
															},
															"nodeType": "YulIf",
															"src": "2274:122:3"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2405:34:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2432:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2419:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2419:20:3"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2409:6:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2448:88:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2509:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2517:4:3",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2505:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2505:17:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2524:6:3"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2532:3:3"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2457:47:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2457:79:3"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2448:5:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2242:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2250:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2258:5:3",
														"type": ""
													}
												],
												"src": "2202:340:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2678:1029:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2724:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2726:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2726:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2726:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2699:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2708:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2695:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2695:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2720:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2691:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2691:32:3"
															},
															"nodeType": "YulIf",
															"src": "2688:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "2817:287:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2832:45:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2863:9:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2874:1:3",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2859:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2859:17:3"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "2846:12:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2846:31:3"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2836:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2924:83:3",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "2926:77:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2926:79:3"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2926:79:3"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2896:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2904:18:3",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2893:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2893:30:3"
																	},
																	"nodeType": "YulIf",
																	"src": "2890:117:3"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3021:73:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3066:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3077:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3062:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3062:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3086:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "3031:30:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3031:63:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3021:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3114:288:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3129:46:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3160:9:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3171:2:3",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3156:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3156:18:3"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "3143:12:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3143:32:3"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3133:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3222:83:3",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3224:77:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3224:79:3"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3224:79:3"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3194:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3202:18:3",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3191:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3191:30:3"
																	},
																	"nodeType": "YulIf",
																	"src": "3188:117:3"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3319:73:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3364:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3375:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3360:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3360:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3384:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "3329:30:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3329:63:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3319:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3412:288:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3427:46:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3458:9:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3469:2:3",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3454:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3454:18:3"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "3441:12:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3441:32:3"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3431:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3520:83:3",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3522:77:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3522:79:3"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3522:79:3"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3492:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3500:18:3",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3489:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3489:30:3"
																	},
																	"nodeType": "YulIf",
																	"src": "3486:117:3"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3617:73:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3662:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3673:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3658:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3658:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3682:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "3627:30:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3627:63:3"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "3617:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2632:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2643:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2655:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2663:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2671:6:3",
														"type": ""
													}
												],
												"src": "2548:1159:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3772:40:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3783:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3799:5:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3793:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3793:12:3"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3783:6:3"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3755:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3765:6:3",
														"type": ""
													}
												],
												"src": "3713:99:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3914:73:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3931:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3936:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3924:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3924:19:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3924:19:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3952:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3971:3:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3976:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3967:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "3967:14:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "3952:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3886:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3891:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "3902:11:3",
														"type": ""
													}
												],
												"src": "3818:169:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4042:258:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4052:10:3",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4061:1:3",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "4056:1:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4121:63:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "4146:3:3"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "4151:1:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "4142:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4142:11:3"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "4165:3:3"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "4170:1:3"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "4161:3:3"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4161:11:3"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "4155:5:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4155:18:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4135:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4135:39:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4135:39:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "4082:1:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4085:6:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4079:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4079:13:3"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "4093:19:3",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4095:15:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "4104:1:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4107:2:3",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4100:3:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4100:10:3"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "4095:1:3"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4075:3:3",
																"statements": []
															},
															"src": "4071:113:3"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4218:76:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "4268:3:3"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "4273:6:3"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "4264:3:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4264:16:3"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4282:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4257:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4257:27:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4257:27:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "4199:1:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4202:6:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4196:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4196:13:3"
															},
															"nodeType": "YulIf",
															"src": "4193:101:3"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "4024:3:3",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "4029:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4034:6:3",
														"type": ""
													}
												],
												"src": "3993:307:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4398:272:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4408:53:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4455:5:3"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "4422:32:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4422:39:3"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4412:6:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4470:78:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4536:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4541:6:3"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4477:58:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4477:71:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4470:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4583:5:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4590:4:3",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4579:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4579:16:3"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4597:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4602:6:3"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "4557:21:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4557:52:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4557:52:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4618:46:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4629:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4656:6:3"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "4634:21:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4634:29:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4625:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4625:39:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4618:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4379:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4386:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4394:3:3",
														"type": ""
													}
												],
												"src": "4306:364:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4794:195:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4804:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4816:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4827:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4812:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4812:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4804:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4851:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4862:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4847:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4847:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4870:4:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4876:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4866:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4866:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4840:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4840:47:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4840:47:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4896:86:3",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4968:6:3"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4977:4:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4904:63:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "4904:78:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4896:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4766:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4778:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4789:4:3",
														"type": ""
													}
												],
												"src": "4676:313:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5071:433:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5117:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5119:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5119:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5119:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5092:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5101:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5088:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5088:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5113:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5084:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5084:32:3"
															},
															"nodeType": "YulIf",
															"src": "5081:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "5210:287:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5225:45:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5256:9:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5267:1:3",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5252:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5252:17:3"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "5239:12:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5239:31:3"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5229:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5317:83:3",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "5319:77:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5319:79:3"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "5319:79:3"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5289:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5297:18:3",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5286:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5286:30:3"
																	},
																	"nodeType": "YulIf",
																	"src": "5283:117:3"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5414:73:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5459:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5470:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5455:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5455:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5479:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "5424:30:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5424:63:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5414:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5041:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5052:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5064:6:3",
														"type": ""
													}
												],
												"src": "4995:509:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5555:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5565:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5576:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5565:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5537:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5547:7:3",
														"type": ""
													}
												],
												"src": "5510:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5658:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5675:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5698:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "5680:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5680:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5668:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5668:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5668:37:3"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5646:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5653:3:3",
														"type": ""
													}
												],
												"src": "5593:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5815:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5825:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5837:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5848:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5833:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5833:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5825:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5905:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5918:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5929:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5914:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5914:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5861:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "5861:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5861:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5787:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5799:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5810:4:3",
														"type": ""
													}
												],
												"src": "5717:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5990:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6000:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "6011:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6000:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5972:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5982:7:3",
														"type": ""
													}
												],
												"src": "5945:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6071:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6128:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6137:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6140:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6130:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6130:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6130:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6094:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6119:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "6101:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6101:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6091:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6091:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6084:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6084:43:3"
															},
															"nodeType": "YulIf",
															"src": "6081:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6064:5:3",
														"type": ""
													}
												],
												"src": "6028:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6208:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6218:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6240:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6227:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6227:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6218:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6283:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6256:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6256:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6256:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6186:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6194:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6202:5:3",
														"type": ""
													}
												],
												"src": "6156:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6394:561:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6440:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6442:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6442:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6442:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6415:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6424:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6411:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6411:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6436:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6407:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "6407:32:3"
															},
															"nodeType": "YulIf",
															"src": "6404:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "6533:287:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6548:45:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6579:9:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6590:1:3",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6575:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6575:17:3"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "6562:12:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6562:31:3"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6552:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "6640:83:3",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "6642:77:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6642:79:3"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "6642:79:3"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "6612:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6620:18:3",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "6609:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6609:30:3"
																	},
																	"nodeType": "YulIf",
																	"src": "6606:117:3"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6737:73:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6782:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6793:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6778:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6778:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6802:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "6747:30:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6747:63:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6737:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6830:118:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6845:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6859:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6849:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6875:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6910:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6921:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6906:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6906:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6930:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6885:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6885:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6875:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6356:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6367:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6379:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6387:6:3",
														"type": ""
													}
												],
												"src": "6301:654:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7064:731:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7110:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "7112:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7112:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7112:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7085:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7094:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7081:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7081:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7106:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7077:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "7077:32:3"
															},
															"nodeType": "YulIf",
															"src": "7074:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "7203:287:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7218:45:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7249:9:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7260:1:3",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7245:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7245:17:3"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "7232:12:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7232:31:3"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7222:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "7310:83:3",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "7312:77:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7312:79:3"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "7312:79:3"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "7282:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7290:18:3",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7279:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7279:30:3"
																	},
																	"nodeType": "YulIf",
																	"src": "7276:117:3"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7407:73:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7452:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7463:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7448:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7448:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7472:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "7417:30:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7417:63:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7407:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "7500:288:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7515:46:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7546:9:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7557:2:3",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7542:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7542:18:3"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "7529:12:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7529:32:3"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7519:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "7608:83:3",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "7610:77:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7610:79:3"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "7610:79:3"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "7580:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7588:18:3",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7577:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7577:30:3"
																	},
																	"nodeType": "YulIf",
																	"src": "7574:117:3"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7705:73:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7750:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7761:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7746:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7746:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7770:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "7715:30:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7715:63:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "7705:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7026:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7037:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7049:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7057:6:3",
														"type": ""
													}
												],
												"src": "6961:834:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7915:34:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7925:18:3",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "7940:3:3"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "7925:11:3"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7887:3:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7892:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "7903:11:3",
														"type": ""
													}
												],
												"src": "7801:148:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8065:267:3",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8075:53:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8122:5:3"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "8089:32:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8089:39:3"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "8079:6:3",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8137:96:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8221:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8226:6:3"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8144:76:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8144:89:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8137:3:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8268:5:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8275:4:3",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8264:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8264:16:3"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8282:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8287:6:3"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "8242:21:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8242:52:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8242:52:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8303:23:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8314:3:3"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8319:6:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8310:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8310:16:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8303:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8046:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8053:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8061:3:3",
														"type": ""
													}
												],
												"src": "7955:377:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8474:139:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8485:102:3",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8574:6:3"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8583:3:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8492:81:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8492:95:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8485:3:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8597:10:3",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "8604:3:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8597:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8453:3:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8459:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8470:3:3",
														"type": ""
													}
												],
												"src": "8338:275:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8647:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8664:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8667:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8657:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8657:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8657:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8761:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8764:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8754:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8754:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8754:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8785:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8788:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8778:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8778:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8778:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "8619:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8849:261:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8859:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8882:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8864:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8864:20:3"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "8859:1:3"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8893:25:3",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8916:1:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8898:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8898:20:3"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "8893:1:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9056:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9058:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9058:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9058:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8977:1:3"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8984:66:3",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "9052:1:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8980:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8980:74:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8974:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "8974:81:3"
															},
															"nodeType": "YulIf",
															"src": "8971:107:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9088:16:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9099:1:3"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9102:1:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9095:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9095:9:3"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "9088:3:3"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8836:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8839:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "8845:3:3",
														"type": ""
													}
												],
												"src": "8805:305:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9144:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9161:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9164:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9154:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9154:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9154:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9258:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9261:4:3",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9251:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9251:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9251:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9282:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9285:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9275:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9275:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9275:15:3"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "9116:180:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9345:190:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9355:33:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9382:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9364:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9364:24:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "9355:5:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9478:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9480:16:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9480:18:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9480:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9403:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9410:66:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "9400:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9400:77:3"
															},
															"nodeType": "YulIf",
															"src": "9397:103:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9509:20:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9520:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9527:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9516:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9516:13:3"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "9509:3:3"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9331:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "9341:3:3",
														"type": ""
													}
												],
												"src": "9302:233:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9569:152:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9586:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9589:77:3",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9579:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9579:88:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9579:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9683:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9686:4:3",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9676:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9676:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9676:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9707:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9710:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9700:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "9700:15:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9700:15:3"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "9541:180:3"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100575760003560e01c8063609f70701461005c57806360e015941461008c578063a1f7ed1a146100bc578063cfb51928146100ec578063ff74927b1461011c575b600080fd5b610076600480360381019061007191906107db565b61014c565b604051610083919061090a565b60405180910390f35b6100a660048036038101906100a1919061092c565b610224565b6040516100b3919061098e565b60405180910390f35b6100d660048036038101906100d191906109df565b610236565b6040516100e3919061090a565b60405180910390f35b6101066004803603810190610101919061092c565b610290565b604051610113919061098e565b60405180910390f35b61013660048036038101906101319190610a3b565b6102c0565b604051610143919061090a565b60405180910390f35b606061021b6101d76101936040518060400160405280600a81526020017f436f6e74726163743a2000000000000000000000000000000000000000000000815250876102c0565b6101d26040518060400160405280600b81526020017f2c46756e6374696f6e3a20000000000000000000000000000000000000000000815250876102c0565b6102c0565b6102166040518060400160405280600a81526020017f2c4d6573736167653a2000000000000000000000000000000000000000000000815250856102c0565b6102c0565b90509392505050565b600061022f82610290565b9050919050565b606061028861027a846040518060400160405280600181526020017f3a000000000000000000000000000000000000000000000000000000000000008152506102c0565b61028384610456565b6102c0565b905092915050565b6000816040516020016102a39190610aef565b604051602081830303815290604052805190602001209050919050565b6060600083905060008390506000815183516102dc9190610b35565b67ffffffffffffffff8111156102f5576102f46106b0565b5b6040519080825280601f01601f1916602001820160405280156103275781602001600182028036833780820191505090505b50905060008190506000805b85518110156103bb5785818151811061034f5761034e610b8b565b5b602001015160f81c60f81b83838061036690610bba565b94508151811061037957610378610b8b565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806103b390610bba565b915050610333565b5060005b8451811015610447578481815181106103db576103da610b8b565b5b602001015160f81c60f81b8383806103f290610bba565b94508151811061040557610404610b8b565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808061043f90610bba565b9150506103bf565b50829550505050505092915050565b6060600060016104658461052e565b01905060008167ffffffffffffffff811115610484576104836106b0565b5b6040519080825280601f01601f1916602001820160405280156104b65781602001600182028036833780820191505090505b509050600082602001820190505b600115610523578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a858161050d5761050c610c03565b5b049450600085141561051e57610523565b6104c4565b819350505050919050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000831061058c577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161058257610581610c03565b5b0492506040810190505b6d04ee2d6d415b85acef810000000083106105c9576d04ee2d6d415b85acef810000000083816105bf576105be610c03565b5b0492506020810190505b662386f26fc1000083106105f857662386f26fc1000083816105ee576105ed610c03565b5b0492506010810190505b6305f5e1008310610621576305f5e100838161061757610616610c03565b5b0492506008810190505b612710831061064657612710838161063c5761063b610c03565b5b0492506004810190505b60648310610669576064838161065f5761065e610c03565b5b0492506002810190505b600a8310610678576001810190505b80915050919050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6106e88261069f565b810181811067ffffffffffffffff82111715610707576107066106b0565b5b80604052505050565b600061071a610681565b905061072682826106df565b919050565b600067ffffffffffffffff821115610746576107456106b0565b5b61074f8261069f565b9050602081019050919050565b82818337600083830152505050565b600061077e6107798461072b565b610710565b90508281526020810184848401111561079a5761079961069a565b5b6107a584828561075c565b509392505050565b600082601f8301126107c2576107c1610695565b5b81356107d284826020860161076b565b91505092915050565b6000806000606084860312156107f4576107f361068b565b5b600084013567ffffffffffffffff81111561081257610811610690565b5b61081e868287016107ad565b935050602084013567ffffffffffffffff81111561083f5761083e610690565b5b61084b868287016107ad565b925050604084013567ffffffffffffffff81111561086c5761086b610690565b5b610878868287016107ad565b9150509250925092565b600081519050919050565b600082825260208201905092915050565b60005b838110156108bc5780820151818401526020810190506108a1565b838111156108cb576000848401525b50505050565b60006108dc82610882565b6108e6818561088d565b93506108f681856020860161089e565b6108ff8161069f565b840191505092915050565b6000602082019050818103600083015261092481846108d1565b905092915050565b6000602082840312156109425761094161068b565b5b600082013567ffffffffffffffff8111156109605761095f610690565b5b61096c848285016107ad565b91505092915050565b6000819050919050565b61098881610975565b82525050565b60006020820190506109a3600083018461097f565b92915050565b6000819050919050565b6109bc816109a9565b81146109c757600080fd5b50565b6000813590506109d9816109b3565b92915050565b600080604083850312156109f6576109f561068b565b5b600083013567ffffffffffffffff811115610a1457610a13610690565b5b610a20858286016107ad565b9250506020610a31858286016109ca565b9150509250929050565b60008060408385031215610a5257610a5161068b565b5b600083013567ffffffffffffffff811115610a7057610a6f610690565b5b610a7c858286016107ad565b925050602083013567ffffffffffffffff811115610a9d57610a9c610690565b5b610aa9858286016107ad565b9150509250929050565b600081905092915050565b6000610ac982610882565b610ad38185610ab3565b9350610ae381856020860161089e565b80840191505092915050565b6000610afb8284610abe565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610b40826109a9565b9150610b4b836109a9565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610b8057610b7f610b06565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610bc5826109a9565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610bf857610bf7610b06565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fdfea264697066735822122000ba1c0c45364f92a5e4240fdfc1caca6a067417e14b11044a4bd1f879e1321064736f6c634300080b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x609F7070 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x60E01594 EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0xA1F7ED1A EQ PUSH2 0xBC JUMPI DUP1 PUSH4 0xCFB51928 EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0xFF74927B EQ PUSH2 0x11C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x76 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x7DB JUMP JUMPDEST PUSH2 0x14C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x90A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA1 SWAP2 SWAP1 PUSH2 0x92C JUMP JUMPDEST PUSH2 0x224 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB3 SWAP2 SWAP1 PUSH2 0x98E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD1 SWAP2 SWAP1 PUSH2 0x9DF JUMP JUMPDEST PUSH2 0x236 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE3 SWAP2 SWAP1 PUSH2 0x90A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x106 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x101 SWAP2 SWAP1 PUSH2 0x92C JUMP JUMPDEST PUSH2 0x290 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x113 SWAP2 SWAP1 PUSH2 0x98E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x136 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x131 SWAP2 SWAP1 PUSH2 0xA3B JUMP JUMPDEST PUSH2 0x2C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x143 SWAP2 SWAP1 PUSH2 0x90A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH2 0x21B PUSH2 0x1D7 PUSH2 0x193 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x436F6E74726163743A2000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP8 PUSH2 0x2C0 JUMP JUMPDEST PUSH2 0x1D2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x2C46756E6374696F6E3A20000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP8 PUSH2 0x2C0 JUMP JUMPDEST PUSH2 0x2C0 JUMP JUMPDEST PUSH2 0x216 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x2C4D6573736167653A2000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP6 PUSH2 0x2C0 JUMP JUMPDEST PUSH2 0x2C0 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22F DUP3 PUSH2 0x290 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x288 PUSH2 0x27A DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3A00000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x2C0 JUMP JUMPDEST PUSH2 0x283 DUP5 PUSH2 0x456 JUMP JUMPDEST PUSH2 0x2C0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2A3 SWAP2 SWAP1 PUSH2 0xAEF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP4 SWAP1 POP PUSH1 0x0 DUP4 SWAP1 POP PUSH1 0x0 DUP2 MLOAD DUP4 MLOAD PUSH2 0x2DC SWAP2 SWAP1 PUSH2 0xB35 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2F5 JUMPI PUSH2 0x2F4 PUSH2 0x6B0 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x327 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0x3BB JUMPI DUP6 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x34F JUMPI PUSH2 0x34E PUSH2 0xB8B JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL DUP4 DUP4 DUP1 PUSH2 0x366 SWAP1 PUSH2 0xBBA JUMP JUMPDEST SWAP5 POP DUP2 MLOAD DUP2 LT PUSH2 0x379 JUMPI PUSH2 0x378 PUSH2 0xB8B JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP DUP1 DUP1 PUSH2 0x3B3 SWAP1 PUSH2 0xBBA JUMP JUMPDEST SWAP2 POP POP PUSH2 0x333 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x447 JUMPI DUP5 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x3DB JUMPI PUSH2 0x3DA PUSH2 0xB8B JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL DUP4 DUP4 DUP1 PUSH2 0x3F2 SWAP1 PUSH2 0xBBA JUMP JUMPDEST SWAP5 POP DUP2 MLOAD DUP2 LT PUSH2 0x405 JUMPI PUSH2 0x404 PUSH2 0xB8B JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP DUP1 DUP1 PUSH2 0x43F SWAP1 PUSH2 0xBBA JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3BF JUMP JUMPDEST POP DUP3 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x465 DUP5 PUSH2 0x52E JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x484 JUMPI PUSH2 0x483 PUSH2 0x6B0 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x4B6 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x523 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x50D JUMPI PUSH2 0x50C PUSH2 0xC03 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 EQ ISZERO PUSH2 0x51E JUMPI PUSH2 0x523 JUMP JUMPDEST PUSH2 0x4C4 JUMP JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x58C JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x582 JUMPI PUSH2 0x581 PUSH2 0xC03 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x5C9 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x5BF JUMPI PUSH2 0x5BE PUSH2 0xC03 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x5F8 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x5EE JUMPI PUSH2 0x5ED PUSH2 0xC03 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x621 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x617 JUMPI PUSH2 0x616 PUSH2 0xC03 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x646 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x63C JUMPI PUSH2 0x63B PUSH2 0xC03 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x669 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x65F JUMPI PUSH2 0x65E PUSH2 0xC03 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x678 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x6E8 DUP3 PUSH2 0x69F JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x707 JUMPI PUSH2 0x706 PUSH2 0x6B0 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x71A PUSH2 0x681 JUMP JUMPDEST SWAP1 POP PUSH2 0x726 DUP3 DUP3 PUSH2 0x6DF JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x746 JUMPI PUSH2 0x745 PUSH2 0x6B0 JUMP JUMPDEST JUMPDEST PUSH2 0x74F DUP3 PUSH2 0x69F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77E PUSH2 0x779 DUP5 PUSH2 0x72B JUMP JUMPDEST PUSH2 0x710 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x79A JUMPI PUSH2 0x799 PUSH2 0x69A JUMP JUMPDEST JUMPDEST PUSH2 0x7A5 DUP5 DUP3 DUP6 PUSH2 0x75C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x7C2 JUMPI PUSH2 0x7C1 PUSH2 0x695 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x7D2 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x76B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x7F4 JUMPI PUSH2 0x7F3 PUSH2 0x68B JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x812 JUMPI PUSH2 0x811 PUSH2 0x690 JUMP JUMPDEST JUMPDEST PUSH2 0x81E DUP7 DUP3 DUP8 ADD PUSH2 0x7AD JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x83F JUMPI PUSH2 0x83E PUSH2 0x690 JUMP JUMPDEST JUMPDEST PUSH2 0x84B DUP7 DUP3 DUP8 ADD PUSH2 0x7AD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x86C JUMPI PUSH2 0x86B PUSH2 0x690 JUMP JUMPDEST JUMPDEST PUSH2 0x878 DUP7 DUP3 DUP8 ADD PUSH2 0x7AD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x8BC JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x8A1 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x8CB JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8DC DUP3 PUSH2 0x882 JUMP JUMPDEST PUSH2 0x8E6 DUP2 DUP6 PUSH2 0x88D JUMP JUMPDEST SWAP4 POP PUSH2 0x8F6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x89E JUMP JUMPDEST PUSH2 0x8FF DUP2 PUSH2 0x69F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x924 DUP2 DUP5 PUSH2 0x8D1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x942 JUMPI PUSH2 0x941 PUSH2 0x68B JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x960 JUMPI PUSH2 0x95F PUSH2 0x690 JUMP JUMPDEST JUMPDEST PUSH2 0x96C DUP5 DUP3 DUP6 ADD PUSH2 0x7AD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x988 DUP2 PUSH2 0x975 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9A3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x97F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9BC DUP2 PUSH2 0x9A9 JUMP JUMPDEST DUP2 EQ PUSH2 0x9C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x9D9 DUP2 PUSH2 0x9B3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x9F6 JUMPI PUSH2 0x9F5 PUSH2 0x68B JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA14 JUMPI PUSH2 0xA13 PUSH2 0x690 JUMP JUMPDEST JUMPDEST PUSH2 0xA20 DUP6 DUP3 DUP7 ADD PUSH2 0x7AD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xA31 DUP6 DUP3 DUP7 ADD PUSH2 0x9CA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA52 JUMPI PUSH2 0xA51 PUSH2 0x68B JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA70 JUMPI PUSH2 0xA6F PUSH2 0x690 JUMP JUMPDEST JUMPDEST PUSH2 0xA7C DUP6 DUP3 DUP7 ADD PUSH2 0x7AD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA9D JUMPI PUSH2 0xA9C PUSH2 0x690 JUMP JUMPDEST JUMPDEST PUSH2 0xAA9 DUP6 DUP3 DUP7 ADD PUSH2 0x7AD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAC9 DUP3 PUSH2 0x882 JUMP JUMPDEST PUSH2 0xAD3 DUP2 DUP6 PUSH2 0xAB3 JUMP JUMPDEST SWAP4 POP PUSH2 0xAE3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x89E JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAFB DUP3 DUP5 PUSH2 0xABE JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB40 DUP3 PUSH2 0x9A9 JUMP JUMPDEST SWAP2 POP PUSH2 0xB4B DUP4 PUSH2 0x9A9 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xB80 JUMPI PUSH2 0xB7F PUSH2 0xB06 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xBC5 DUP3 PUSH2 0x9A9 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0xBF8 JUMPI PUSH2 0xBF7 PUSH2 0xB06 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STOP 0xBA SHR 0xC GASLIMIT CALLDATASIZE 0x4F SWAP3 0xA5 0xE4 0x24 0xF 0xDF 0xC1 0xCA 0xCA PUSH11 0x67417E14B11044A4BD1F8 PUSH26 0xE1321064736F6C634300080B0033000000000000000000000000 ",
							"sourceMap": "150:2252:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;662:350;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;307:109;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;482:169;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1055:130;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1192:496;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;662:350;798:13;829:176;848:108;867:34;;;;;;;;;;;;;;;;;;891:9;867;:34::i;:::-;911:35;;;;;;;;;;;;;;;;;;936:9;911;:35::i;:::-;848:9;:108::i;:::-;966:29;;;;;;;;;;;;;;;;;;990:4;966:9;:29::i;:::-;829:9;:176::i;:::-;822:183;;662:350;;;;;:::o;307:109::-;363:7;389:20;405:3;389:15;:20::i;:::-;382:27;;307:109;;;:::o;482:169::-;558:13;598:46;608:22;618:6;608:22;;;;;;;;;;;;;;;;;:9;:22::i;:::-;631:12;640:2;631:8;:12::i;:::-;598:9;:46::i;:::-;591:53;;482:169;;;;:::o;1055:130::-;1120:7;1173:3;1156:21;;;;;;;;:::i;:::-;;;;;;;;;;;;;1146:32;;;;;;1139:39;;1055:130;;;:::o;1192:496::-;1292:13;1321:16;1346:2;1321:28;;1359:16;1384:2;1359:28;;1397:17;1441:3;:10;1428:3;:10;:23;;;;:::i;:::-;1417:35;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1397:55;;1462:17;1488:3;1462:30;;1502:9;1530;1525:59;1549:3;:10;1545:1;:14;1525:59;;;1578:3;1582:1;1578:6;;;;;;;;:::i;:::-;;;;;;;;;;1566:4;1571:3;;;;;:::i;:::-;;;1566:9;;;;;;;;:::i;:::-;;;;;:18;;;;;;;;;;;1561:3;;;;;:::i;:::-;;;;1525:59;;;;1599:9;1594:59;1618:3;:10;1614:1;:14;1594:59;;;1647:3;1651:1;1647:6;;;;;;;;:::i;:::-;;;;;;;;;;1635:4;1640:3;;;;;:::i;:::-;;;1635:9;;;;;;;;:::i;:::-;;;;;:18;;;;;;;;;;;1630:3;;;;;:::i;:::-;;;;1594:59;;;;1677:3;1663:18;;;;;;;1192:496;;;;:::o;1696:698::-;1752:13;1801:14;1838:1;1818:17;1829:5;1818:10;:17::i;:::-;:21;1801:38;;1853:20;1887:6;1876:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1853:41;;1908:11;2034:6;2030:2;2026:15;2018:6;2014:28;2007:35;;2069:282;2076:4;2069:282;;;2100:5;;;;;;;;2239:10;2234:2;2227:5;2223:14;2218:32;2213:3;2205:46;2295:2;2286:11;;;;;;:::i;:::-;;;;;2328:1;2319:5;:10;2315:21;;;2331:5;;2315:21;2069:282;;;2371:6;2364:13;;;;;1696:698;;;:::o;12461:948:1:-;12514:7;12534:14;12551:1;12534:18;;12601:8;12592:5;:17;12588:106;;12639:8;12630:17;;;;;;:::i;:::-;;;;;12676:2;12666:12;;;;12588:106;12721:8;12712:5;:17;12708:106;;12759:8;12750:17;;;;;;:::i;:::-;;;;;12796:2;12786:12;;;;12708:106;12841:8;12832:5;:17;12828:106;;12879:8;12870:17;;;;;;:::i;:::-;;;;;12916:2;12906:12;;;;12828:106;12961:7;12952:5;:16;12948:103;;12998:7;12989:16;;;;;;:::i;:::-;;;;;13034:1;13024:11;;;;12948:103;13078:7;13069:5;:16;13065:103;;13115:7;13106:16;;;;;;:::i;:::-;;;;;13151:1;13141:11;;;;13065:103;13195:7;13186:5;:16;13182:103;;13232:7;13223:16;;;;;;:::i;:::-;;;;;13268:1;13258:11;;;;13182:103;13312:7;13303:5;:16;13299:68;;13350:1;13340:11;;;;13299:68;13395:6;13388:13;;;12461:948;;;:::o;7:75:3:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:154::-;1694:6;1689:3;1684;1671:30;1756:1;1747:6;1742:3;1738:16;1731:27;1610:154;;;:::o;1770:412::-;1848:5;1873:66;1889:49;1931:6;1889:49;:::i;:::-;1873:66;:::i;:::-;1864:75;;1962:6;1955:5;1948:21;2000:4;1993:5;1989:16;2038:3;2029:6;2024:3;2020:16;2017:25;2014:112;;;2045:79;;:::i;:::-;2014:112;2135:41;2169:6;2164:3;2159;2135:41;:::i;:::-;1854:328;1770:412;;;;;:::o;2202:340::-;2258:5;2307:3;2300:4;2292:6;2288:17;2284:27;2274:122;;2315:79;;:::i;:::-;2274:122;2432:6;2419:20;2457:79;2532:3;2524:6;2517:4;2509:6;2505:17;2457:79;:::i;:::-;2448:88;;2264:278;2202:340;;;;:::o;2548:1159::-;2655:6;2663;2671;2720:2;2708:9;2699:7;2695:23;2691:32;2688:119;;;2726:79;;:::i;:::-;2688:119;2874:1;2863:9;2859:17;2846:31;2904:18;2896:6;2893:30;2890:117;;;2926:79;;:::i;:::-;2890:117;3031:63;3086:7;3077:6;3066:9;3062:22;3031:63;:::i;:::-;3021:73;;2817:287;3171:2;3160:9;3156:18;3143:32;3202:18;3194:6;3191:30;3188:117;;;3224:79;;:::i;:::-;3188:117;3329:63;3384:7;3375:6;3364:9;3360:22;3329:63;:::i;:::-;3319:73;;3114:288;3469:2;3458:9;3454:18;3441:32;3500:18;3492:6;3489:30;3486:117;;;3522:79;;:::i;:::-;3486:117;3627:63;3682:7;3673:6;3662:9;3658:22;3627:63;:::i;:::-;3617:73;;3412:288;2548:1159;;;;;:::o;3713:99::-;3765:6;3799:5;3793:12;3783:22;;3713:99;;;:::o;3818:169::-;3902:11;3936:6;3931:3;3924:19;3976:4;3971:3;3967:14;3952:29;;3818:169;;;;:::o;3993:307::-;4061:1;4071:113;4085:6;4082:1;4079:13;4071:113;;;4170:1;4165:3;4161:11;4155:18;4151:1;4146:3;4142:11;4135:39;4107:2;4104:1;4100:10;4095:15;;4071:113;;;4202:6;4199:1;4196:13;4193:101;;;4282:1;4273:6;4268:3;4264:16;4257:27;4193:101;4042:258;3993:307;;;:::o;4306:364::-;4394:3;4422:39;4455:5;4422:39;:::i;:::-;4477:71;4541:6;4536:3;4477:71;:::i;:::-;4470:78;;4557:52;4602:6;4597:3;4590:4;4583:5;4579:16;4557:52;:::i;:::-;4634:29;4656:6;4634:29;:::i;:::-;4629:3;4625:39;4618:46;;4398:272;4306:364;;;;:::o;4676:313::-;4789:4;4827:2;4816:9;4812:18;4804:26;;4876:9;4870:4;4866:20;4862:1;4851:9;4847:17;4840:47;4904:78;4977:4;4968:6;4904:78;:::i;:::-;4896:86;;4676:313;;;;:::o;4995:509::-;5064:6;5113:2;5101:9;5092:7;5088:23;5084:32;5081:119;;;5119:79;;:::i;:::-;5081:119;5267:1;5256:9;5252:17;5239:31;5297:18;5289:6;5286:30;5283:117;;;5319:79;;:::i;:::-;5283:117;5424:63;5479:7;5470:6;5459:9;5455:22;5424:63;:::i;:::-;5414:73;;5210:287;4995:509;;;;:::o;5510:77::-;5547:7;5576:5;5565:16;;5510:77;;;:::o;5593:118::-;5680:24;5698:5;5680:24;:::i;:::-;5675:3;5668:37;5593:118;;:::o;5717:222::-;5810:4;5848:2;5837:9;5833:18;5825:26;;5861:71;5929:1;5918:9;5914:17;5905:6;5861:71;:::i;:::-;5717:222;;;;:::o;5945:77::-;5982:7;6011:5;6000:16;;5945:77;;;:::o;6028:122::-;6101:24;6119:5;6101:24;:::i;:::-;6094:5;6091:35;6081:63;;6140:1;6137;6130:12;6081:63;6028:122;:::o;6156:139::-;6202:5;6240:6;6227:20;6218:29;;6256:33;6283:5;6256:33;:::i;:::-;6156:139;;;;:::o;6301:654::-;6379:6;6387;6436:2;6424:9;6415:7;6411:23;6407:32;6404:119;;;6442:79;;:::i;:::-;6404:119;6590:1;6579:9;6575:17;6562:31;6620:18;6612:6;6609:30;6606:117;;;6642:79;;:::i;:::-;6606:117;6747:63;6802:7;6793:6;6782:9;6778:22;6747:63;:::i;:::-;6737:73;;6533:287;6859:2;6885:53;6930:7;6921:6;6910:9;6906:22;6885:53;:::i;:::-;6875:63;;6830:118;6301:654;;;;;:::o;6961:834::-;7049:6;7057;7106:2;7094:9;7085:7;7081:23;7077:32;7074:119;;;7112:79;;:::i;:::-;7074:119;7260:1;7249:9;7245:17;7232:31;7290:18;7282:6;7279:30;7276:117;;;7312:79;;:::i;:::-;7276:117;7417:63;7472:7;7463:6;7452:9;7448:22;7417:63;:::i;:::-;7407:73;;7203:287;7557:2;7546:9;7542:18;7529:32;7588:18;7580:6;7577:30;7574:117;;;7610:79;;:::i;:::-;7574:117;7715:63;7770:7;7761:6;7750:9;7746:22;7715:63;:::i;:::-;7705:73;;7500:288;6961:834;;;;;:::o;7801:148::-;7903:11;7940:3;7925:18;;7801:148;;;;:::o;7955:377::-;8061:3;8089:39;8122:5;8089:39;:::i;:::-;8144:89;8226:6;8221:3;8144:89;:::i;:::-;8137:96;;8242:52;8287:6;8282:3;8275:4;8268:5;8264:16;8242:52;:::i;:::-;8319:6;8314:3;8310:16;8303:23;;8065:267;7955:377;;;;:::o;8338:275::-;8470:3;8492:95;8583:3;8574:6;8492:95;:::i;:::-;8485:102;;8604:3;8597:10;;8338:275;;;;:::o;8619:180::-;8667:77;8664:1;8657:88;8764:4;8761:1;8754:15;8788:4;8785:1;8778:15;8805:305;8845:3;8864:20;8882:1;8864:20;:::i;:::-;8859:25;;8898:20;8916:1;8898:20;:::i;:::-;8893:25;;9052:1;8984:66;8980:74;8977:1;8974:81;8971:107;;;9058:18;;:::i;:::-;8971:107;9102:1;9099;9095:9;9088:16;;8805:305;;;;:::o;9116:180::-;9164:77;9161:1;9154:88;9261:4;9258:1;9251:15;9285:4;9282:1;9275:15;9302:233;9341:3;9364:24;9382:5;9364:24;:::i;:::-;9355:33;;9410:66;9403:5;9400:77;9397:103;;;9480:18;;:::i;:::-;9397:103;9527:1;9520:5;9516:13;9509:20;;9302:233;;;:::o;9541:180::-;9589:77;9586:1;9579:88;9686:4;9683:1;9676:15;9710:4;9707:1;9700:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "635200",
								"executionCost": "670",
								"totalCost": "635870"
							},
							"external": {
								"error(string,string,string)": "infinite",
								"strConcat(string,string)": "infinite",
								"stringToBytes32(string)": "infinite",
								"toAssetIndex(string,uint256)": "infinite",
								"toRole(string)": "infinite"
							},
							"internal": {
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 150,
									"end": 2402,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 150,
									"end": 2402,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 150,
									"end": 2402,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 150,
									"end": 2402,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 150,
									"end": 2402,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 150,
									"end": 2402,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 150,
									"end": 2402,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 150,
									"end": 2402,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 150,
									"end": 2402,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 2402,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 150,
									"end": 2402,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 150,
									"end": 2402,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 150,
									"end": 2402,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 150,
									"end": 2402,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 150,
									"end": 2402,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 150,
									"end": 2402,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 150,
									"end": 2402,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 150,
									"end": 2402,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 2402,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 150,
									"end": 2402,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 2402,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122000ba1c0c45364f92a5e4240fdfc1caca6a067417e14b11044a4bd1f879e1321064736f6c634300080b0033",
									".code": [
										{
											"begin": 150,
											"end": 2402,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 150,
											"end": 2402,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 150,
											"end": 2402,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 150,
											"end": 2402,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 150,
											"end": 2402,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 150,
											"end": 2402,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 150,
											"end": 2402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 150,
											"end": 2402,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 150,
											"end": 2402,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 150,
											"end": 2402,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 150,
											"end": 2402,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 150,
											"end": 2402,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 150,
											"end": 2402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 150,
											"end": 2402,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 150,
											"end": 2402,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 150,
											"end": 2402,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 150,
											"end": 2402,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 150,
											"end": 2402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 150,
											"end": 2402,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 150,
											"end": 2402,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 150,
											"end": 2402,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 150,
											"end": 2402,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 150,
											"end": 2402,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 150,
											"end": 2402,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 150,
											"end": 2402,
											"name": "PUSH",
											"source": 0,
											"value": "609F7070"
										},
										{
											"begin": 150,
											"end": 2402,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 150,
											"end": 2402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 150,
											"end": 2402,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 150,
											"end": 2402,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 150,
											"end": 2402,
											"name": "PUSH",
											"source": 0,
											"value": "60E01594"
										},
										{
											"begin": 150,
											"end": 2402,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 150,
											"end": 2402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 150,
											"end": 2402,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 150,
											"end": 2402,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 150,
											"end": 2402,
											"name": "PUSH",
											"source": 0,
											"value": "A1F7ED1A"
										},
										{
											"begin": 150,
											"end": 2402,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 150,
											"end": 2402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 150,
											"end": 2402,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 150,
											"end": 2402,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 150,
											"end": 2402,
											"name": "PUSH",
											"source": 0,
											"value": "CFB51928"
										},
										{
											"begin": 150,
											"end": 2402,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 150,
											"end": 2402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 150,
											"end": 2402,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 150,
											"end": 2402,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 150,
											"end": 2402,
											"name": "PUSH",
											"source": 0,
											"value": "FF74927B"
										},
										{
											"begin": 150,
											"end": 2402,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 150,
											"end": 2402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 150,
											"end": 2402,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 150,
											"end": 2402,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 150,
											"end": 2402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 150,
											"end": 2402,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 150,
											"end": 2402,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 150,
											"end": 2402,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 662,
											"end": 1012,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 662,
											"end": 1012,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 662,
											"end": 1012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 662,
											"end": 1012,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 662,
											"end": 1012,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 662,
											"end": 1012,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 662,
											"end": 1012,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 662,
											"end": 1012,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 662,
											"end": 1012,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 662,
											"end": 1012,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 662,
											"end": 1012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 662,
											"end": 1012,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 662,
											"end": 1012,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 662,
											"end": 1012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 662,
											"end": 1012,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 662,
											"end": 1012,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 662,
											"end": 1012,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 662,
											"end": 1012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 662,
											"end": 1012,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 662,
											"end": 1012,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 662,
											"end": 1012,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 662,
											"end": 1012,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 662,
											"end": 1012,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 662,
											"end": 1012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 662,
											"end": 1012,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 662,
											"end": 1012,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 662,
											"end": 1012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 662,
											"end": 1012,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 662,
											"end": 1012,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 662,
											"end": 1012,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 662,
											"end": 1012,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 662,
											"end": 1012,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 662,
											"end": 1012,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 662,
											"end": 1012,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 662,
											"end": 1012,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 662,
											"end": 1012,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 662,
											"end": 1012,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 307,
											"end": 416,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 307,
											"end": 416,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 307,
											"end": 416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 307,
											"end": 416,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 307,
											"end": 416,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 307,
											"end": 416,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 307,
											"end": 416,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 307,
											"end": 416,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 307,
											"end": 416,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 307,
											"end": 416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 307,
											"end": 416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 307,
											"end": 416,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 307,
											"end": 416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 307,
											"end": 416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 307,
											"end": 416,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 307,
											"end": 416,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 307,
											"end": 416,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 307,
											"end": 416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 307,
											"end": 416,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 307,
											"end": 416,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 307,
											"end": 416,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 307,
											"end": 416,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 307,
											"end": 416,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 307,
											"end": 416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 307,
											"end": 416,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 307,
											"end": 416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 307,
											"end": 416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 307,
											"end": 416,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 307,
											"end": 416,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 307,
											"end": 416,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 307,
											"end": 416,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 307,
											"end": 416,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 307,
											"end": 416,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 307,
											"end": 416,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 307,
											"end": 416,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 307,
											"end": 416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 307,
											"end": 416,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 482,
											"end": 651,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 482,
											"end": 651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 482,
											"end": 651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 482,
											"end": 651,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 482,
											"end": 651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 482,
											"end": 651,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 482,
											"end": 651,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 482,
											"end": 651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 482,
											"end": 651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 482,
											"end": 651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 482,
											"end": 651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 482,
											"end": 651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 482,
											"end": 651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 482,
											"end": 651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 482,
											"end": 651,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 482,
											"end": 651,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 482,
											"end": 651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 482,
											"end": 651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 482,
											"end": 651,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 482,
											"end": 651,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 482,
											"end": 651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 482,
											"end": 651,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 482,
											"end": 651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 482,
											"end": 651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 482,
											"end": 651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 482,
											"end": 651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 482,
											"end": 651,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 482,
											"end": 651,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 482,
											"end": 651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 482,
											"end": 651,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 482,
											"end": 651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 482,
											"end": 651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 482,
											"end": 651,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 482,
											"end": 651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 482,
											"end": 651,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1055,
											"end": 1185,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1055,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1055,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1055,
											"end": 1185,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1055,
											"end": 1185,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1055,
											"end": 1185,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1055,
											"end": 1185,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1055,
											"end": 1185,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1055,
											"end": 1185,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1055,
											"end": 1185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1055,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1055,
											"end": 1185,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1055,
											"end": 1185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1055,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1055,
											"end": 1185,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1055,
											"end": 1185,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1055,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1055,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1055,
											"end": 1185,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1055,
											"end": 1185,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1055,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1055,
											"end": 1185,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1055,
											"end": 1185,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1055,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1055,
											"end": 1185,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1055,
											"end": 1185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1055,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1055,
											"end": 1185,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1055,
											"end": 1185,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1055,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1055,
											"end": 1185,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1055,
											"end": 1185,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1055,
											"end": 1185,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1055,
											"end": 1185,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1055,
											"end": 1185,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1055,
											"end": 1185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1055,
											"end": 1185,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1688,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1192,
											"end": 1688,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1192,
											"end": 1688,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1192,
											"end": 1688,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1688,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1688,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1688,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1688,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1688,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1192,
											"end": 1688,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1688,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1192,
											"end": 1688,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1192,
											"end": 1688,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1192,
											"end": 1688,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1192,
											"end": 1688,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1192,
											"end": 1688,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1192,
											"end": 1688,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1688,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1192,
											"end": 1688,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1192,
											"end": 1688,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1688,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1192,
											"end": 1688,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1192,
											"end": 1688,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1192,
											"end": 1688,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1688,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1192,
											"end": 1688,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1688,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1688,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1688,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1688,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1688,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 662,
											"end": 1012,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 662,
											"end": 1012,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 798,
											"end": 811,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 829,
											"end": 1005,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 848,
											"end": 956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 867,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 867,
											"end": 901,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 867,
											"end": 901,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 867,
											"end": 901,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 867,
											"end": 901,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 867,
											"end": 901,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 867,
											"end": 901,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 867,
											"end": 901,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 867,
											"end": 901,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 867,
											"end": 901,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 867,
											"end": 901,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 867,
											"end": 901,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 867,
											"end": 901,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 867,
											"end": 901,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 867,
											"end": 901,
											"name": "PUSH",
											"source": 0,
											"value": "436F6E74726163743A2000000000000000000000000000000000000000000000"
										},
										{
											"begin": 867,
											"end": 901,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 867,
											"end": 901,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 867,
											"end": 901,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 891,
											"end": 900,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 867,
											"end": 876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 867,
											"end": 901,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 867,
											"end": 901,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 867,
											"end": 901,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 911,
											"end": 946,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 911,
											"end": 946,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 911,
											"end": 946,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 911,
											"end": 946,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 911,
											"end": 946,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 911,
											"end": 946,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 911,
											"end": 946,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 911,
											"end": 946,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 911,
											"end": 946,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 911,
											"end": 946,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 911,
											"end": 946,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 911,
											"end": 946,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 911,
											"end": 946,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 911,
											"end": 946,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 911,
											"end": 946,
											"name": "PUSH",
											"source": 0,
											"value": "2C46756E6374696F6E3A20000000000000000000000000000000000000000000"
										},
										{
											"begin": 911,
											"end": 946,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 911,
											"end": 946,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 911,
											"end": 946,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 936,
											"end": 945,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 911,
											"end": 920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 911,
											"end": 946,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 911,
											"end": 946,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 911,
											"end": 946,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 848,
											"end": 857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 848,
											"end": 956,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 848,
											"end": 956,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 848,
											"end": 956,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 966,
											"end": 995,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 966,
											"end": 995,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 966,
											"end": 995,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 966,
											"end": 995,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 966,
											"end": 995,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 966,
											"end": 995,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 966,
											"end": 995,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 966,
											"end": 995,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 966,
											"end": 995,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 966,
											"end": 995,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 966,
											"end": 995,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 966,
											"end": 995,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 966,
											"end": 995,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 966,
											"end": 995,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 966,
											"end": 995,
											"name": "PUSH",
											"source": 0,
											"value": "2C4D6573736167653A2000000000000000000000000000000000000000000000"
										},
										{
											"begin": 966,
											"end": 995,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 966,
											"end": 995,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 966,
											"end": 995,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 990,
											"end": 994,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 966,
											"end": 975,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 966,
											"end": 995,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 966,
											"end": 995,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 966,
											"end": 995,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 829,
											"end": 838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 829,
											"end": 1005,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 829,
											"end": 1005,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 829,
											"end": 1005,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 822,
											"end": 1005,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 822,
											"end": 1005,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 662,
											"end": 1012,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 662,
											"end": 1012,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 662,
											"end": 1012,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 662,
											"end": 1012,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 662,
											"end": 1012,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 662,
											"end": 1012,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 307,
											"end": 416,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 307,
											"end": 416,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 363,
											"end": 370,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 389,
											"end": 409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 405,
											"end": 408,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 389,
											"end": 404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 389,
											"end": 409,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 389,
											"end": 409,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 389,
											"end": 409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 382,
											"end": 409,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 382,
											"end": 409,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 307,
											"end": 416,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 307,
											"end": 416,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 307,
											"end": 416,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 307,
											"end": 416,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 482,
											"end": 651,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 482,
											"end": 651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 558,
											"end": 571,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 598,
											"end": 644,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 608,
											"end": 630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 618,
											"end": 624,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 608,
											"end": 630,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 608,
											"end": 630,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 608,
											"end": 630,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 608,
											"end": 630,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 608,
											"end": 630,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 608,
											"end": 630,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 608,
											"end": 630,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 608,
											"end": 630,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 608,
											"end": 630,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 608,
											"end": 630,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 608,
											"end": 630,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 608,
											"end": 630,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 608,
											"end": 630,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 608,
											"end": 630,
											"name": "PUSH",
											"source": 0,
											"value": "3A00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 608,
											"end": 630,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 608,
											"end": 630,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 608,
											"end": 630,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 608,
											"end": 617,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 608,
											"end": 630,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 608,
											"end": 630,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 608,
											"end": 630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 631,
											"end": 643,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 640,
											"end": 642,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 631,
											"end": 639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 631,
											"end": 643,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 631,
											"end": 643,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 631,
											"end": 643,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 598,
											"end": 607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 598,
											"end": 644,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 598,
											"end": 644,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 598,
											"end": 644,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 591,
											"end": 644,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 591,
											"end": 644,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 482,
											"end": 651,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 482,
											"end": 651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 482,
											"end": 651,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 482,
											"end": 651,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 482,
											"end": 651,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1055,
											"end": 1185,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1055,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1120,
											"end": 1127,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1173,
											"end": 1176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1156,
											"end": 1177,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1156,
											"end": 1177,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1156,
											"end": 1177,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1156,
											"end": 1177,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1156,
											"end": 1177,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1156,
											"end": 1177,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1156,
											"end": 1177,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1156,
											"end": 1177,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1156,
											"end": 1177,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1156,
											"end": 1177,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1156,
											"end": 1177,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1156,
											"end": 1177,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1156,
											"end": 1177,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1156,
											"end": 1177,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1156,
											"end": 1177,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1156,
											"end": 1177,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1156,
											"end": 1177,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1156,
											"end": 1177,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1156,
											"end": 1177,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1156,
											"end": 1177,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1156,
											"end": 1177,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1156,
											"end": 1177,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1156,
											"end": 1177,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1146,
											"end": 1178,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1146,
											"end": 1178,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1146,
											"end": 1178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1146,
											"end": 1178,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1146,
											"end": 1178,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1146,
											"end": 1178,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1178,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1055,
											"end": 1185,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1055,
											"end": 1185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1055,
											"end": 1185,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1055,
											"end": 1185,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1192,
											"end": 1688,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1192,
											"end": 1688,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1292,
											"end": 1305,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1321,
											"end": 1337,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1346,
											"end": 1348,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1321,
											"end": 1349,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1321,
											"end": 1349,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1375,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1384,
											"end": 1386,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1387,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1387,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 1414,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1441,
											"end": 1444,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1441,
											"end": 1451,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1428,
											"end": 1431,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1428,
											"end": 1438,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1428,
											"end": 1451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1428,
											"end": 1451,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1428,
											"end": 1451,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1428,
											"end": 1451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1428,
											"end": 1451,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1428,
											"end": 1451,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1428,
											"end": 1451,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1452,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1417,
											"end": 1452,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1452,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1452,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1417,
											"end": 1452,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1417,
											"end": 1452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1417,
											"end": 1452,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1417,
											"end": 1452,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1417,
											"end": 1452,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1452,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1417,
											"end": 1452,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1452,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1417,
											"end": 1452,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1452,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1452,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1452,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1452,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1452,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1452,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1417,
											"end": 1452,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1452,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1417,
											"end": 1452,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1452,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1452,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1417,
											"end": 1452,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1452,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1452,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1452,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1417,
											"end": 1452,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1452,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1452,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1417,
											"end": 1452,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1452,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1452,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1417,
											"end": 1452,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1452,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1417,
											"end": 1452,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1452,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1452,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1452,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1452,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1452,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1452,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1452,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1452,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1452,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1452,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1452,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1452,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1452,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1452,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1417,
											"end": 1452,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1452,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 1452,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1397,
											"end": 1452,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1479,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1488,
											"end": 1491,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1492,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1462,
											"end": 1492,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1502,
											"end": 1511,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1530,
											"end": 1539,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1525,
											"end": 1584,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1525,
											"end": 1584,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1549,
											"end": 1552,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1549,
											"end": 1559,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1545,
											"end": 1546,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1545,
											"end": 1559,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1525,
											"end": 1584,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1525,
											"end": 1584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1525,
											"end": 1584,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1578,
											"end": 1581,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1582,
											"end": 1583,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1578,
											"end": 1584,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1578,
											"end": 1584,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1578,
											"end": 1584,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1578,
											"end": 1584,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1578,
											"end": 1584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1578,
											"end": 1584,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1578,
											"end": 1584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1578,
											"end": 1584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1578,
											"end": 1584,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1578,
											"end": 1584,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1578,
											"end": 1584,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1578,
											"end": 1584,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1578,
											"end": 1584,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1578,
											"end": 1584,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1578,
											"end": 1584,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1578,
											"end": 1584,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1578,
											"end": 1584,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1578,
											"end": 1584,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 1578,
											"end": 1584,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1578,
											"end": 1584,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 1578,
											"end": 1584,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1566,
											"end": 1570,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1571,
											"end": 1574,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1571,
											"end": 1574,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1571,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1571,
											"end": 1574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1571,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1571,
											"end": 1574,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1571,
											"end": 1574,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1571,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1571,
											"end": 1574,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 1571,
											"end": 1574,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1566,
											"end": 1575,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1566,
											"end": 1575,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1566,
											"end": 1575,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1566,
											"end": 1575,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1566,
											"end": 1575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1566,
											"end": 1575,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1566,
											"end": 1575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1566,
											"end": 1575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1566,
											"end": 1575,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1566,
											"end": 1575,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1566,
											"end": 1575,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1566,
											"end": 1575,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1566,
											"end": 1575,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1566,
											"end": 1575,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1566,
											"end": 1575,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1566,
											"end": 1575,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1566,
											"end": 1584,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1566,
											"end": 1584,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1566,
											"end": 1584,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1566,
											"end": 1584,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1566,
											"end": 1584,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1566,
											"end": 1584,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1566,
											"end": 1584,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1566,
											"end": 1584,
											"name": "BYTE",
											"source": 0
										},
										{
											"begin": 1566,
											"end": 1584,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1566,
											"end": 1584,
											"name": "MSTORE8",
											"source": 0
										},
										{
											"begin": 1566,
											"end": 1584,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1564,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1564,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1564,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1561,
											"end": 1564,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1564,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1561,
											"end": 1564,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1561,
											"end": 1564,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1561,
											"end": 1564,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1564,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1564,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1564,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1525,
											"end": 1584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1525,
											"end": 1584,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1525,
											"end": 1584,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1525,
											"end": 1584,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1525,
											"end": 1584,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1599,
											"end": 1608,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1594,
											"end": 1653,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1594,
											"end": 1653,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1618,
											"end": 1621,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1618,
											"end": 1628,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1614,
											"end": 1615,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1614,
											"end": 1628,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1594,
											"end": 1653,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1594,
											"end": 1653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1594,
											"end": 1653,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1647,
											"end": 1650,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1651,
											"end": 1652,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1647,
											"end": 1653,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1647,
											"end": 1653,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1647,
											"end": 1653,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1647,
											"end": 1653,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1647,
											"end": 1653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1647,
											"end": 1653,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1647,
											"end": 1653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1647,
											"end": 1653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1647,
											"end": 1653,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1647,
											"end": 1653,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1647,
											"end": 1653,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1647,
											"end": 1653,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1647,
											"end": 1653,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1647,
											"end": 1653,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1647,
											"end": 1653,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1647,
											"end": 1653,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1647,
											"end": 1653,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1647,
											"end": 1653,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 1647,
											"end": 1653,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1647,
											"end": 1653,
											"name": "PUSH",
											"source": 0,
											"value": "F8"
										},
										{
											"begin": 1647,
											"end": 1653,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1635,
											"end": 1639,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1640,
											"end": 1643,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1640,
											"end": 1643,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1640,
											"end": 1643,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1640,
											"end": 1643,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1640,
											"end": 1643,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1640,
											"end": 1643,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1640,
											"end": 1643,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1640,
											"end": 1643,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1640,
											"end": 1643,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 1640,
											"end": 1643,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1635,
											"end": 1644,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1635,
											"end": 1644,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1635,
											"end": 1644,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1635,
											"end": 1644,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1635,
											"end": 1644,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1635,
											"end": 1644,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1635,
											"end": 1644,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1635,
											"end": 1644,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1635,
											"end": 1644,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1635,
											"end": 1644,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1635,
											"end": 1644,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1635,
											"end": 1644,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1635,
											"end": 1644,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1635,
											"end": 1644,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1635,
											"end": 1644,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1635,
											"end": 1644,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1635,
											"end": 1653,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1635,
											"end": 1653,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1635,
											"end": 1653,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1635,
											"end": 1653,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1635,
											"end": 1653,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1635,
											"end": 1653,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1635,
											"end": 1653,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1635,
											"end": 1653,
											"name": "BYTE",
											"source": 0
										},
										{
											"begin": 1635,
											"end": 1653,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1635,
											"end": 1653,
											"name": "MSTORE8",
											"source": 0
										},
										{
											"begin": 1635,
											"end": 1653,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1630,
											"end": 1633,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1630,
											"end": 1633,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1630,
											"end": 1633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1630,
											"end": 1633,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1630,
											"end": 1633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1630,
											"end": 1633,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1630,
											"end": 1633,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1630,
											"end": 1633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1630,
											"end": 1633,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1630,
											"end": 1633,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1630,
											"end": 1633,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1594,
											"end": 1653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1594,
											"end": 1653,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1594,
											"end": 1653,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1594,
											"end": 1653,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1594,
											"end": 1653,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1677,
											"end": 1680,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1663,
											"end": 1681,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 1663,
											"end": 1681,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1663,
											"end": 1681,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1663,
											"end": 1681,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1663,
											"end": 1681,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1663,
											"end": 1681,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1663,
											"end": 1681,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1688,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1688,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1688,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1688,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1688,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1696,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1696,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1752,
											"end": 1765,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1801,
											"end": 1815,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1838,
											"end": 1839,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1818,
											"end": 1835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1829,
											"end": 1834,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1818,
											"end": 1828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1818,
											"end": 1835,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1818,
											"end": 1835,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1818,
											"end": 1835,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1818,
											"end": 1839,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1801,
											"end": 1839,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1801,
											"end": 1839,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1853,
											"end": 1873,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1887,
											"end": 1893,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 1894,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1876,
											"end": 1894,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 1894,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 1894,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 1894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1876,
											"end": 1894,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 1894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1876,
											"end": 1894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1876,
											"end": 1894,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1876,
											"end": 1894,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1876,
											"end": 1894,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 1894,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1876,
											"end": 1894,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 1894,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1876,
											"end": 1894,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 1894,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 1894,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 1894,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 1894,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 1894,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 1894,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1876,
											"end": 1894,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 1894,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1876,
											"end": 1894,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 1894,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 1894,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1876,
											"end": 1894,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 1894,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 1894,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 1894,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1876,
											"end": 1894,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 1894,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 1894,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 1894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1876,
											"end": 1894,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 1894,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 1894,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1876,
											"end": 1894,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 1894,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1876,
											"end": 1894,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 1894,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 1894,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 1894,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 1894,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 1894,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 1894,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 1894,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 1894,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 1894,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 1894,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 1894,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 1894,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 1894,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 1894,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1876,
											"end": 1894,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1876,
											"end": 1894,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1853,
											"end": 1894,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1853,
											"end": 1894,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1908,
											"end": 1919,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2040,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2030,
											"end": 2032,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2026,
											"end": 2041,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2018,
											"end": 2024,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2014,
											"end": 2042,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2007,
											"end": 2042,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2007,
											"end": 2042,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2069,
											"end": 2351,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2069,
											"end": 2351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2080,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2069,
											"end": 2351,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2069,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2069,
											"end": 2351,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2105,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2105,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2105,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2100,
											"end": 2105,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2105,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2105,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2105,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2100,
											"end": 2105,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2239,
											"end": 2249,
											"name": "PUSH",
											"source": 0,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 2234,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 2227,
											"end": 2232,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 2223,
											"end": 2237,
											"name": "MOD",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2250,
											"name": "BYTE",
											"source": 0
										},
										{
											"begin": 2213,
											"end": 2216,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2205,
											"end": 2251,
											"name": "MSTORE8",
											"source": 0
										},
										{
											"begin": 2295,
											"end": 2297,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 2286,
											"end": 2297,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2286,
											"end": 2297,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2286,
											"end": 2297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2286,
											"end": 2297,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2286,
											"end": 2297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2286,
											"end": 2297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2286,
											"end": 2297,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2286,
											"end": 2297,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2286,
											"end": 2297,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2286,
											"end": 2297,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2286,
											"end": 2297,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2286,
											"end": 2297,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2286,
											"end": 2297,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 2286,
											"end": 2297,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2328,
											"end": 2329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2319,
											"end": 2324,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2319,
											"end": 2329,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2315,
											"end": 2336,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2315,
											"end": 2336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2315,
											"end": 2336,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2331,
											"end": 2336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2331,
											"end": 2336,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2315,
											"end": 2336,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2315,
											"end": 2336,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2069,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2069,
											"end": 2351,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2069,
											"end": 2351,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2069,
											"end": 2351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2377,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2377,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2377,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2377,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2377,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1696,
											"end": 2394,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1696,
											"end": 2394,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1696,
											"end": 2394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1696,
											"end": 2394,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 12461,
											"end": 13409,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 12461,
											"end": 13409,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12514,
											"end": 12521,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12534,
											"end": 12548,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12551,
											"end": 12552,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12534,
											"end": 12552,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12534,
											"end": 12552,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12601,
											"end": 12609,
											"name": "PUSH",
											"source": 1,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 12592,
											"end": 12597,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12592,
											"end": 12609,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 12588,
											"end": 12694,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 12588,
											"end": 12694,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12639,
											"end": 12647,
											"name": "PUSH",
											"source": 1,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 12630,
											"end": 12647,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12630,
											"end": 12647,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12630,
											"end": 12647,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 12630,
											"end": 12647,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12630,
											"end": 12647,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 12630,
											"end": 12647,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 12630,
											"end": 12647,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12630,
											"end": 12647,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 12630,
											"end": 12647,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12630,
											"end": 12647,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 12630,
											"end": 12647,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12630,
											"end": 12647,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 12630,
											"end": 12647,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12630,
											"end": 12647,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12676,
											"end": 12678,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12666,
											"end": 12678,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12666,
											"end": 12678,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12666,
											"end": 12678,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12666,
											"end": 12678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12588,
											"end": 12694,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 12588,
											"end": 12694,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12721,
											"end": 12729,
											"name": "PUSH",
											"source": 1,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12712,
											"end": 12717,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12712,
											"end": 12729,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 12708,
											"end": 12814,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 12708,
											"end": 12814,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12759,
											"end": 12767,
											"name": "PUSH",
											"source": 1,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12750,
											"end": 12767,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12750,
											"end": 12767,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12750,
											"end": 12767,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 12750,
											"end": 12767,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12750,
											"end": 12767,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 12750,
											"end": 12767,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 12750,
											"end": 12767,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12750,
											"end": 12767,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 12750,
											"end": 12767,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12750,
											"end": 12767,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 12750,
											"end": 12767,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12750,
											"end": 12767,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 12750,
											"end": 12767,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12750,
											"end": 12767,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12796,
											"end": 12798,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12786,
											"end": 12798,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12786,
											"end": 12798,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12786,
											"end": 12798,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12786,
											"end": 12798,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12708,
											"end": 12814,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 12708,
											"end": 12814,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12841,
											"end": 12849,
											"name": "PUSH",
											"source": 1,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12832,
											"end": 12837,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12832,
											"end": 12849,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 12828,
											"end": 12934,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 12828,
											"end": 12934,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12879,
											"end": 12887,
											"name": "PUSH",
											"source": 1,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12870,
											"end": 12887,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12870,
											"end": 12887,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12870,
											"end": 12887,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 12870,
											"end": 12887,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12870,
											"end": 12887,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 12870,
											"end": 12887,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 12870,
											"end": 12887,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12870,
											"end": 12887,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 12870,
											"end": 12887,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12870,
											"end": 12887,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 12870,
											"end": 12887,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12870,
											"end": 12887,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 12870,
											"end": 12887,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12870,
											"end": 12887,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12916,
											"end": 12918,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 12906,
											"end": 12918,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12906,
											"end": 12918,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12906,
											"end": 12918,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12906,
											"end": 12918,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12828,
											"end": 12934,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 12828,
											"end": 12934,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12961,
											"end": 12968,
											"name": "PUSH",
											"source": 1,
											"value": "5F5E100"
										},
										{
											"begin": 12952,
											"end": 12957,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12952,
											"end": 12968,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 12948,
											"end": 13051,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 12948,
											"end": 13051,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12998,
											"end": 13005,
											"name": "PUSH",
											"source": 1,
											"value": "5F5E100"
										},
										{
											"begin": 12989,
											"end": 13005,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12989,
											"end": 13005,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12989,
											"end": 13005,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 12989,
											"end": 13005,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12989,
											"end": 13005,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 12989,
											"end": 13005,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 12989,
											"end": 13005,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12989,
											"end": 13005,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 12989,
											"end": 13005,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12989,
											"end": 13005,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 12989,
											"end": 13005,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12989,
											"end": 13005,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 12989,
											"end": 13005,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12989,
											"end": 13005,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13034,
											"end": 13035,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 13024,
											"end": 13035,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13024,
											"end": 13035,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13024,
											"end": 13035,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13024,
											"end": 13035,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12948,
											"end": 13051,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 12948,
											"end": 13051,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13078,
											"end": 13085,
											"name": "PUSH",
											"source": 1,
											"value": "2710"
										},
										{
											"begin": 13069,
											"end": 13074,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13069,
											"end": 13085,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 13065,
											"end": 13168,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 13065,
											"end": 13168,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13115,
											"end": 13122,
											"name": "PUSH",
											"source": 1,
											"value": "2710"
										},
										{
											"begin": 13106,
											"end": 13122,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13106,
											"end": 13122,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13106,
											"end": 13122,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 13106,
											"end": 13122,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13106,
											"end": 13122,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 13106,
											"end": 13122,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 13106,
											"end": 13122,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13106,
											"end": 13122,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 13106,
											"end": 13122,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13106,
											"end": 13122,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 13106,
											"end": 13122,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13106,
											"end": 13122,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 13106,
											"end": 13122,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13106,
											"end": 13122,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13151,
											"end": 13152,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13141,
											"end": 13152,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13141,
											"end": 13152,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13141,
											"end": 13152,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13141,
											"end": 13152,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13065,
											"end": 13168,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 13065,
											"end": 13168,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13195,
											"end": 13202,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 13186,
											"end": 13191,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13186,
											"end": 13202,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 13182,
											"end": 13285,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 13182,
											"end": 13285,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13232,
											"end": 13239,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 13223,
											"end": 13239,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13223,
											"end": 13239,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13223,
											"end": 13239,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 13223,
											"end": 13239,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13223,
											"end": 13239,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 13223,
											"end": 13239,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 13223,
											"end": 13239,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13223,
											"end": 13239,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 13223,
											"end": 13239,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13223,
											"end": 13239,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 13223,
											"end": 13239,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13223,
											"end": 13239,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 13223,
											"end": 13239,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13223,
											"end": 13239,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13268,
											"end": 13269,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 13258,
											"end": 13269,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13258,
											"end": 13269,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13258,
											"end": 13269,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13258,
											"end": 13269,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13182,
											"end": 13285,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 13182,
											"end": 13285,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13312,
											"end": 13319,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 13303,
											"end": 13308,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13303,
											"end": 13319,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 13299,
											"end": 13367,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 13299,
											"end": 13367,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13350,
											"end": 13351,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 13340,
											"end": 13351,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13340,
											"end": 13351,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13340,
											"end": 13351,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13340,
											"end": 13351,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13299,
											"end": 13367,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 13299,
											"end": 13367,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13395,
											"end": 13401,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13388,
											"end": 13401,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13388,
											"end": 13401,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13388,
											"end": 13401,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12461,
											"end": 13409,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12461,
											"end": 13409,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12461,
											"end": 13409,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12461,
											"end": 13409,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 334,
											"end": 451,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 334,
											"end": 451,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 443,
											"end": 444,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 440,
											"end": 441,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 433,
											"end": 445,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 457,
											"end": 574,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 457,
											"end": 574,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 566,
											"end": 567,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 563,
											"end": 564,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 556,
											"end": 568,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 580,
											"end": 682,
											"name": "tag",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 580,
											"end": 682,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 621,
											"end": 627,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 672,
											"end": 674,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 668,
											"end": 675,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 663,
											"end": 665,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 656,
											"end": 661,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 652,
											"end": 666,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 648,
											"end": 676,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 638,
											"end": 676,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 638,
											"end": 676,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 580,
											"end": 682,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 580,
											"end": 682,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 580,
											"end": 682,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 580,
											"end": 682,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 688,
											"end": 868,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 688,
											"end": 868,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 736,
											"end": 813,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 733,
											"end": 734,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 726,
											"end": 814,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 833,
											"end": 837,
											"name": "PUSH",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 830,
											"end": 831,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 823,
											"end": 838,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 857,
											"end": 861,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 854,
											"end": 855,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 847,
											"end": 862,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 874,
											"end": 1155,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 874,
											"end": 1155,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 957,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 979,
											"end": 983,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 957,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 957,
											"end": 984,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 957,
											"end": 984,
											"name": "tag",
											"source": 3,
											"value": "142"
										},
										{
											"begin": 957,
											"end": 984,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 949,
											"end": 955,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 945,
											"end": 985,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1087,
											"end": 1093,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1075,
											"end": 1085,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1072,
											"end": 1094,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1051,
											"end": 1069,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1039,
											"end": 1049,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1036,
											"end": 1070,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1033,
											"end": 1095,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1098,
											"end": 1116,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 1098,
											"end": 1116,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 1098,
											"end": 1116,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1098,
											"end": 1116,
											"name": "tag",
											"source": 3,
											"value": "144"
										},
										{
											"begin": 1098,
											"end": 1116,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "tag",
											"source": 3,
											"value": "143"
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1138,
											"end": 1148,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1134,
											"end": 1136,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1127,
											"end": 1149,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 917,
											"end": 1155,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 874,
											"end": 1155,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 874,
											"end": 1155,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 874,
											"end": 1155,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1161,
											"end": 1290,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 1161,
											"end": 1290,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1195,
											"end": 1201,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "tag",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1212,
											"end": 1242,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1212,
											"end": 1242,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1251,
											"end": 1284,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 1279,
											"end": 1283,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1271,
											"end": 1277,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1251,
											"end": 1284,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 1251,
											"end": 1284,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1251,
											"end": 1284,
											"name": "tag",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 1251,
											"end": 1284,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1161,
											"end": 1290,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1161,
											"end": 1290,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1161,
											"end": 1290,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1161,
											"end": 1290,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1296,
											"end": 1604,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 1296,
											"end": 1604,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1358,
											"end": 1362,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1448,
											"end": 1466,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1440,
											"end": 1446,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1437,
											"end": 1467,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1434,
											"end": 1490,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1434,
											"end": 1490,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 1434,
											"end": 1490,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1470,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 1470,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 1470,
											"end": 1488,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1470,
											"end": 1488,
											"name": "tag",
											"source": 3,
											"value": "150"
										},
										{
											"begin": 1470,
											"end": 1488,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1434,
											"end": 1490,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 1434,
											"end": 1490,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1508,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 1530,
											"end": 1536,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1508,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 1508,
											"end": 1537,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1508,
											"end": 1537,
											"name": "tag",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 1508,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1500,
											"end": 1537,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1500,
											"end": 1537,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1592,
											"end": 1596,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1586,
											"end": 1590,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1582,
											"end": 1597,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1574,
											"end": 1597,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1574,
											"end": 1597,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1296,
											"end": 1604,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1296,
											"end": 1604,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1296,
											"end": 1604,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1296,
											"end": 1604,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1610,
											"end": 1764,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 1610,
											"end": 1764,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1694,
											"end": 1700,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1692,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1684,
											"end": 1687,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1671,
											"end": 1701,
											"name": "CALLDATACOPY",
											"source": 3
										},
										{
											"begin": 1756,
											"end": 1757,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1747,
											"end": 1753,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1742,
											"end": 1745,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1738,
											"end": 1754,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1731,
											"end": 1758,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1610,
											"end": 1764,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1610,
											"end": 1764,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1610,
											"end": 1764,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1610,
											"end": 1764,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1770,
											"end": 2182,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 1770,
											"end": 2182,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1848,
											"end": 1853,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1873,
											"end": 1939,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 1889,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 1931,
											"end": 1937,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1889,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 1889,
											"end": 1938,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1889,
											"end": 1938,
											"name": "tag",
											"source": 3,
											"value": "155"
										},
										{
											"begin": 1889,
											"end": 1938,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1873,
											"end": 1939,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 1873,
											"end": 1939,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1873,
											"end": 1939,
											"name": "tag",
											"source": 3,
											"value": "154"
										},
										{
											"begin": 1873,
											"end": 1939,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1864,
											"end": 1939,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1864,
											"end": 1939,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 1968,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1955,
											"end": 1960,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1948,
											"end": 1969,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2000,
											"end": 2004,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1993,
											"end": 1998,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1989,
											"end": 2005,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2038,
											"end": 2041,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2029,
											"end": 2035,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2024,
											"end": 2027,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2020,
											"end": 2036,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2017,
											"end": 2042,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2014,
											"end": 2126,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2014,
											"end": 2126,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 2014,
											"end": 2126,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2045,
											"end": 2124,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 2045,
											"end": 2124,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 2045,
											"end": 2124,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2045,
											"end": 2124,
											"name": "tag",
											"source": 3,
											"value": "157"
										},
										{
											"begin": 2045,
											"end": 2124,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2014,
											"end": 2126,
											"name": "tag",
											"source": 3,
											"value": "156"
										},
										{
											"begin": 2014,
											"end": 2126,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2135,
											"end": 2176,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 2169,
											"end": 2175,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2164,
											"end": 2167,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2159,
											"end": 2162,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2135,
											"end": 2176,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 2135,
											"end": 2176,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2135,
											"end": 2176,
											"name": "tag",
											"source": 3,
											"value": "158"
										},
										{
											"begin": 2135,
											"end": 2176,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1854,
											"end": 2182,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1770,
											"end": 2182,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1770,
											"end": 2182,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1770,
											"end": 2182,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1770,
											"end": 2182,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1770,
											"end": 2182,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1770,
											"end": 2182,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2202,
											"end": 2542,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 2202,
											"end": 2542,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2258,
											"end": 2263,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2307,
											"end": 2310,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2300,
											"end": 2304,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2292,
											"end": 2298,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2288,
											"end": 2305,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2284,
											"end": 2311,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2396,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 2274,
											"end": 2396,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2315,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 2315,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 2315,
											"end": 2394,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2315,
											"end": 2394,
											"name": "tag",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 2315,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2274,
											"end": 2396,
											"name": "tag",
											"source": 3,
											"value": "160"
										},
										{
											"begin": 2274,
											"end": 2396,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2432,
											"end": 2438,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2419,
											"end": 2439,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 2457,
											"end": 2536,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 2532,
											"end": 2535,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2524,
											"end": 2530,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2517,
											"end": 2521,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2509,
											"end": 2515,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2505,
											"end": 2522,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2457,
											"end": 2536,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 2457,
											"end": 2536,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2457,
											"end": 2536,
											"name": "tag",
											"source": 3,
											"value": "162"
										},
										{
											"begin": 2457,
											"end": 2536,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2448,
											"end": 2536,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2448,
											"end": 2536,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2264,
											"end": 2542,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2202,
											"end": 2542,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2202,
											"end": 2542,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2202,
											"end": 2542,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2202,
											"end": 2542,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2202,
											"end": 2542,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2548,
											"end": 3707,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 2548,
											"end": 3707,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2655,
											"end": 2661,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2663,
											"end": 2669,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2671,
											"end": 2677,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2720,
											"end": 2722,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2708,
											"end": 2717,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2699,
											"end": 2706,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2695,
											"end": 2718,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2691,
											"end": 2723,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2807,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2807,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 2688,
											"end": 2807,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2726,
											"end": 2805,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 2726,
											"end": 2805,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 2726,
											"end": 2805,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2726,
											"end": 2805,
											"name": "tag",
											"source": 3,
											"value": "165"
										},
										{
											"begin": 2726,
											"end": 2805,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2807,
											"name": "tag",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 2688,
											"end": 2807,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2874,
											"end": 2875,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2863,
											"end": 2872,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2859,
											"end": 2876,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2846,
											"end": 2877,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 2904,
											"end": 2922,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2896,
											"end": 2902,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2893,
											"end": 2923,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2890,
											"end": 3007,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2890,
											"end": 3007,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 2890,
											"end": 3007,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2926,
											"end": 3005,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 2926,
											"end": 3005,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 2926,
											"end": 3005,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 2926,
											"end": 3005,
											"name": "tag",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 2926,
											"end": 3005,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2890,
											"end": 3007,
											"name": "tag",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 2890,
											"end": 3007,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3031,
											"end": 3094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 3086,
											"end": 3093,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3077,
											"end": 3083,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3066,
											"end": 3075,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 3062,
											"end": 3084,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3031,
											"end": 3094,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 3031,
											"end": 3094,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3031,
											"end": 3094,
											"name": "tag",
											"source": 3,
											"value": "168"
										},
										{
											"begin": 3031,
											"end": 3094,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3021,
											"end": 3094,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3021,
											"end": 3094,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2817,
											"end": 3104,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3171,
											"end": 3173,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3160,
											"end": 3169,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3156,
											"end": 3174,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3143,
											"end": 3175,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 3202,
											"end": 3220,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3194,
											"end": 3200,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3191,
											"end": 3221,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 3188,
											"end": 3305,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3188,
											"end": 3305,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 3188,
											"end": 3305,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3224,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 3224,
											"end": 3303,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 3224,
											"end": 3303,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3224,
											"end": 3303,
											"name": "tag",
											"source": 3,
											"value": "170"
										},
										{
											"begin": 3224,
											"end": 3303,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3188,
											"end": 3305,
											"name": "tag",
											"source": 3,
											"value": "169"
										},
										{
											"begin": 3188,
											"end": 3305,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3329,
											"end": 3392,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 3384,
											"end": 3391,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3375,
											"end": 3381,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3364,
											"end": 3373,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 3360,
											"end": 3382,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3329,
											"end": 3392,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 3329,
											"end": 3392,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3329,
											"end": 3392,
											"name": "tag",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 3329,
											"end": 3392,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3319,
											"end": 3392,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3319,
											"end": 3392,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3114,
											"end": 3402,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3469,
											"end": 3471,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3458,
											"end": 3467,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3454,
											"end": 3472,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3441,
											"end": 3473,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 3500,
											"end": 3518,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3492,
											"end": 3498,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3489,
											"end": 3519,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 3486,
											"end": 3603,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3486,
											"end": 3603,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 3486,
											"end": 3603,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3522,
											"end": 3601,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 3522,
											"end": 3601,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 3522,
											"end": 3601,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3522,
											"end": 3601,
											"name": "tag",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 3522,
											"end": 3601,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3486,
											"end": 3603,
											"name": "tag",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 3486,
											"end": 3603,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3627,
											"end": 3690,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 3682,
											"end": 3689,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3673,
											"end": 3679,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3662,
											"end": 3671,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 3658,
											"end": 3680,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3627,
											"end": 3690,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 3627,
											"end": 3690,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3627,
											"end": 3690,
											"name": "tag",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 3627,
											"end": 3690,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3617,
											"end": 3690,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3617,
											"end": 3690,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3412,
											"end": 3700,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2548,
											"end": 3707,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2548,
											"end": 3707,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2548,
											"end": 3707,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2548,
											"end": 3707,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2548,
											"end": 3707,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2548,
											"end": 3707,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3713,
											"end": 3812,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 3713,
											"end": 3812,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3765,
											"end": 3771,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3799,
											"end": 3804,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3793,
											"end": 3805,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3783,
											"end": 3805,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3783,
											"end": 3805,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3713,
											"end": 3812,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3713,
											"end": 3812,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3713,
											"end": 3812,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3713,
											"end": 3812,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3818,
											"end": 3987,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 3818,
											"end": 3987,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3902,
											"end": 3913,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3936,
											"end": 3942,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3931,
											"end": 3934,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3924,
											"end": 3943,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3976,
											"end": 3980,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3971,
											"end": 3974,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3967,
											"end": 3981,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3981,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3818,
											"end": 3987,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3818,
											"end": 3987,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3818,
											"end": 3987,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3818,
											"end": 3987,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3818,
											"end": 3987,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3993,
											"end": 4300,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 3993,
											"end": 4300,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4061,
											"end": 4062,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4071,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 4071,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4085,
											"end": 4091,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4082,
											"end": 4083,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4079,
											"end": 4092,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 4071,
											"end": 4184,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4071,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 4071,
											"end": 4184,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4170,
											"end": 4171,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4165,
											"end": 4168,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4161,
											"end": 4172,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4155,
											"end": 4173,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4151,
											"end": 4152,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4146,
											"end": 4149,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4142,
											"end": 4153,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4135,
											"end": 4174,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4107,
											"end": 4109,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4104,
											"end": 4105,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4100,
											"end": 4110,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4095,
											"end": 4110,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4095,
											"end": 4110,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4071,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 4071,
											"end": 4184,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4071,
											"end": 4184,
											"name": "tag",
											"source": 3,
											"value": "180"
										},
										{
											"begin": 4071,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4202,
											"end": 4208,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4199,
											"end": 4200,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4196,
											"end": 4209,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 4193,
											"end": 4294,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4193,
											"end": 4294,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 4193,
											"end": 4294,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4282,
											"end": 4283,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4273,
											"end": 4279,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4268,
											"end": 4271,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4264,
											"end": 4280,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4257,
											"end": 4284,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4193,
											"end": 4294,
											"name": "tag",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 4193,
											"end": 4294,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4042,
											"end": 4300,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3993,
											"end": 4300,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3993,
											"end": 4300,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3993,
											"end": 4300,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3993,
											"end": 4300,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4306,
											"end": 4670,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 4306,
											"end": 4670,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4394,
											"end": 4397,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4422,
											"end": 4461,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 4455,
											"end": 4460,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4422,
											"end": 4461,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 4422,
											"end": 4461,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4422,
											"end": 4461,
											"name": "tag",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 4422,
											"end": 4461,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4477,
											"end": 4548,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 4541,
											"end": 4547,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4536,
											"end": 4539,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4477,
											"end": 4548,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 4477,
											"end": 4548,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4477,
											"end": 4548,
											"name": "tag",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 4477,
											"end": 4548,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4470,
											"end": 4548,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4470,
											"end": 4548,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4557,
											"end": 4609,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 4602,
											"end": 4608,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4597,
											"end": 4600,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4590,
											"end": 4594,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4583,
											"end": 4588,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 4579,
											"end": 4595,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4557,
											"end": 4609,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 4557,
											"end": 4609,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4557,
											"end": 4609,
											"name": "tag",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 4557,
											"end": 4609,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4634,
											"end": 4663,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 4656,
											"end": 4662,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4634,
											"end": 4663,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 4634,
											"end": 4663,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4634,
											"end": 4663,
											"name": "tag",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 4634,
											"end": 4663,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4629,
											"end": 4632,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4625,
											"end": 4664,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4618,
											"end": 4664,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4618,
											"end": 4664,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4398,
											"end": 4670,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4306,
											"end": 4670,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4306,
											"end": 4670,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4306,
											"end": 4670,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4306,
											"end": 4670,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4306,
											"end": 4670,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4676,
											"end": 4989,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 4676,
											"end": 4989,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4789,
											"end": 4793,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4827,
											"end": 4829,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4816,
											"end": 4825,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4812,
											"end": 4830,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4804,
											"end": 4830,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4804,
											"end": 4830,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4876,
											"end": 4885,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4870,
											"end": 4874,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4866,
											"end": 4886,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4862,
											"end": 4863,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4851,
											"end": 4860,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4847,
											"end": 4864,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4840,
											"end": 4887,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4904,
											"end": 4982,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 4977,
											"end": 4981,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4968,
											"end": 4974,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4904,
											"end": 4982,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 4904,
											"end": 4982,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4904,
											"end": 4982,
											"name": "tag",
											"source": 3,
											"value": "188"
										},
										{
											"begin": 4904,
											"end": 4982,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4896,
											"end": 4982,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4896,
											"end": 4982,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4676,
											"end": 4989,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4676,
											"end": 4989,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4676,
											"end": 4989,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4676,
											"end": 4989,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4676,
											"end": 4989,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4995,
											"end": 5504,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 4995,
											"end": 5504,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5064,
											"end": 5070,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5113,
											"end": 5115,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5101,
											"end": 5110,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5092,
											"end": 5099,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5088,
											"end": 5111,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5084,
											"end": 5116,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 5081,
											"end": 5200,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5081,
											"end": 5200,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 5081,
											"end": 5200,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5119,
											"end": 5198,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 5119,
											"end": 5198,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 5119,
											"end": 5198,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5119,
											"end": 5198,
											"name": "tag",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 5119,
											"end": 5198,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5081,
											"end": 5200,
											"name": "tag",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 5081,
											"end": 5200,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5267,
											"end": 5268,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5256,
											"end": 5265,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5252,
											"end": 5269,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5239,
											"end": 5270,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 5297,
											"end": 5315,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5289,
											"end": 5295,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5286,
											"end": 5316,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 5283,
											"end": 5400,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5283,
											"end": 5400,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 5283,
											"end": 5400,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5319,
											"end": 5398,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 5319,
											"end": 5398,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 5319,
											"end": 5398,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5319,
											"end": 5398,
											"name": "tag",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 5319,
											"end": 5398,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5283,
											"end": 5400,
											"name": "tag",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 5283,
											"end": 5400,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5424,
											"end": 5487,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 5479,
											"end": 5486,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5470,
											"end": 5476,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5459,
											"end": 5468,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5455,
											"end": 5477,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5424,
											"end": 5487,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 5424,
											"end": 5487,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5424,
											"end": 5487,
											"name": "tag",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 5424,
											"end": 5487,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5414,
											"end": 5487,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5414,
											"end": 5487,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5210,
											"end": 5497,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4995,
											"end": 5504,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4995,
											"end": 5504,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4995,
											"end": 5504,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4995,
											"end": 5504,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4995,
											"end": 5504,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5510,
											"end": 5587,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 5510,
											"end": 5587,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5547,
											"end": 5554,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5576,
											"end": 5581,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5565,
											"end": 5581,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5565,
											"end": 5581,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5510,
											"end": 5587,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5510,
											"end": 5587,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5510,
											"end": 5587,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5510,
											"end": 5587,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5593,
											"end": 5711,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 5593,
											"end": 5711,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5680,
											"end": 5704,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 5698,
											"end": 5703,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5680,
											"end": 5704,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 5680,
											"end": 5704,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5680,
											"end": 5704,
											"name": "tag",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 5680,
											"end": 5704,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5675,
											"end": 5678,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5668,
											"end": 5705,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5593,
											"end": 5711,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5593,
											"end": 5711,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5593,
											"end": 5711,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5717,
											"end": 5939,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 5717,
											"end": 5939,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5810,
											"end": 5814,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5848,
											"end": 5850,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5837,
											"end": 5846,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5833,
											"end": 5851,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5825,
											"end": 5851,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5825,
											"end": 5851,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5861,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 5929,
											"end": 5930,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5918,
											"end": 5927,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5914,
											"end": 5931,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5905,
											"end": 5911,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5861,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 5861,
											"end": 5932,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 5861,
											"end": 5932,
											"name": "tag",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 5861,
											"end": 5932,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5717,
											"end": 5939,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5717,
											"end": 5939,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5717,
											"end": 5939,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5717,
											"end": 5939,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5717,
											"end": 5939,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 5945,
											"end": 6022,
											"name": "tag",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 5945,
											"end": 6022,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5982,
											"end": 5989,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6011,
											"end": 6016,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6000,
											"end": 6016,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6000,
											"end": 6016,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5945,
											"end": 6022,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5945,
											"end": 6022,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5945,
											"end": 6022,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5945,
											"end": 6022,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6028,
											"end": 6150,
											"name": "tag",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 6028,
											"end": 6150,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6101,
											"end": 6125,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 6119,
											"end": 6124,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6101,
											"end": 6125,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 6101,
											"end": 6125,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6101,
											"end": 6125,
											"name": "tag",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 6101,
											"end": 6125,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6094,
											"end": 6099,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6091,
											"end": 6126,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 6081,
											"end": 6144,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 6081,
											"end": 6144,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6140,
											"end": 6141,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6137,
											"end": 6138,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6130,
											"end": 6142,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6081,
											"end": 6144,
											"name": "tag",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 6081,
											"end": 6144,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6028,
											"end": 6150,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6028,
											"end": 6150,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6156,
											"end": 6295,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 6156,
											"end": 6295,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6202,
											"end": 6207,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6240,
											"end": 6246,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6227,
											"end": 6247,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 6218,
											"end": 6247,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6218,
											"end": 6247,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6256,
											"end": 6289,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 6283,
											"end": 6288,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6256,
											"end": 6289,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "128"
										},
										{
											"begin": 6256,
											"end": 6289,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6256,
											"end": 6289,
											"name": "tag",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 6256,
											"end": 6289,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6295,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6295,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6295,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6295,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6295,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6301,
											"end": 6955,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 6301,
											"end": 6955,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6379,
											"end": 6385,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6387,
											"end": 6393,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6436,
											"end": 6438,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6424,
											"end": 6433,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6415,
											"end": 6422,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6411,
											"end": 6434,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6407,
											"end": 6439,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 6404,
											"end": 6523,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6404,
											"end": 6523,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 6404,
											"end": 6523,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6442,
											"end": 6521,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 6442,
											"end": 6521,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 6442,
											"end": 6521,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6442,
											"end": 6521,
											"name": "tag",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 6442,
											"end": 6521,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6404,
											"end": 6523,
											"name": "tag",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 6404,
											"end": 6523,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6590,
											"end": 6591,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6579,
											"end": 6588,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6575,
											"end": 6592,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6562,
											"end": 6593,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 6620,
											"end": 6638,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6612,
											"end": 6618,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6609,
											"end": 6639,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 6606,
											"end": 6723,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6606,
											"end": 6723,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 6606,
											"end": 6723,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6642,
											"end": 6721,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 6642,
											"end": 6721,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 6642,
											"end": 6721,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6642,
											"end": 6721,
											"name": "tag",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 6642,
											"end": 6721,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6606,
											"end": 6723,
											"name": "tag",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 6606,
											"end": 6723,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6747,
											"end": 6810,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 6802,
											"end": 6809,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6793,
											"end": 6799,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6782,
											"end": 6791,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6778,
											"end": 6800,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6747,
											"end": 6810,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 6747,
											"end": 6810,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6747,
											"end": 6810,
											"name": "tag",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 6747,
											"end": 6810,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6737,
											"end": 6810,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6737,
											"end": 6810,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6533,
											"end": 6820,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6859,
											"end": 6861,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6885,
											"end": 6938,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 6930,
											"end": 6937,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6921,
											"end": 6927,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6910,
											"end": 6919,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6906,
											"end": 6928,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6885,
											"end": 6938,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 6885,
											"end": 6938,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 6885,
											"end": 6938,
											"name": "tag",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 6885,
											"end": 6938,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6875,
											"end": 6938,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6875,
											"end": 6938,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6830,
											"end": 6948,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6301,
											"end": 6955,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6301,
											"end": 6955,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6301,
											"end": 6955,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6301,
											"end": 6955,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6301,
											"end": 6955,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6301,
											"end": 6955,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6961,
											"end": 7795,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 6961,
											"end": 7795,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7049,
											"end": 7055,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7057,
											"end": 7063,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7106,
											"end": 7108,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7094,
											"end": 7103,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7085,
											"end": 7092,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7081,
											"end": 7104,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7077,
											"end": 7109,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 7074,
											"end": 7193,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7074,
											"end": 7193,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 7074,
											"end": 7193,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7112,
											"end": 7191,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 7112,
											"end": 7191,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 7112,
											"end": 7191,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7112,
											"end": 7191,
											"name": "tag",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 7112,
											"end": 7191,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7074,
											"end": 7193,
											"name": "tag",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 7074,
											"end": 7193,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7260,
											"end": 7261,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7249,
											"end": 7258,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7245,
											"end": 7262,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7232,
											"end": 7263,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 7290,
											"end": 7308,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7282,
											"end": 7288,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7279,
											"end": 7309,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 7276,
											"end": 7393,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7276,
											"end": 7393,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 7276,
											"end": 7393,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7312,
											"end": 7391,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 7312,
											"end": 7391,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 7312,
											"end": 7391,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7312,
											"end": 7391,
											"name": "tag",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 7312,
											"end": 7391,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7276,
											"end": 7393,
											"name": "tag",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 7276,
											"end": 7393,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7417,
											"end": 7480,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 7472,
											"end": 7479,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7463,
											"end": 7469,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7452,
											"end": 7461,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 7448,
											"end": 7470,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7417,
											"end": 7480,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 7417,
											"end": 7480,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7417,
											"end": 7480,
											"name": "tag",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 7417,
											"end": 7480,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7407,
											"end": 7480,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7407,
											"end": 7480,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7203,
											"end": 7490,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7557,
											"end": 7559,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7546,
											"end": 7555,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7542,
											"end": 7560,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7529,
											"end": 7561,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 7588,
											"end": 7606,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7580,
											"end": 7586,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7577,
											"end": 7607,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 7574,
											"end": 7691,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7574,
											"end": 7691,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 7574,
											"end": 7691,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7610,
											"end": 7689,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 7610,
											"end": 7689,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 7610,
											"end": 7689,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7610,
											"end": 7689,
											"name": "tag",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 7610,
											"end": 7689,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7574,
											"end": 7691,
											"name": "tag",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 7574,
											"end": 7691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7715,
											"end": 7778,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 7770,
											"end": 7777,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 7761,
											"end": 7767,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7750,
											"end": 7759,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 7746,
											"end": 7768,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7715,
											"end": 7778,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 7715,
											"end": 7778,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 7715,
											"end": 7778,
											"name": "tag",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 7715,
											"end": 7778,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7705,
											"end": 7778,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7705,
											"end": 7778,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7500,
											"end": 7788,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6961,
											"end": 7795,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6961,
											"end": 7795,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6961,
											"end": 7795,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6961,
											"end": 7795,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6961,
											"end": 7795,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6961,
											"end": 7795,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7801,
											"end": 7949,
											"name": "tag",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 7801,
											"end": 7949,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7903,
											"end": 7914,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7940,
											"end": 7943,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7925,
											"end": 7943,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7925,
											"end": 7943,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7801,
											"end": 7949,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7801,
											"end": 7949,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7801,
											"end": 7949,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7801,
											"end": 7949,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7801,
											"end": 7949,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7955,
											"end": 8332,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 7955,
											"end": 8332,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8061,
											"end": 8064,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8089,
											"end": 8128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 8122,
											"end": 8127,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8089,
											"end": 8128,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 8089,
											"end": 8128,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8089,
											"end": 8128,
											"name": "tag",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 8089,
											"end": 8128,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8144,
											"end": 8233,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 8226,
											"end": 8232,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8221,
											"end": 8224,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 8144,
											"end": 8233,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 8144,
											"end": 8233,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8144,
											"end": 8233,
											"name": "tag",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 8144,
											"end": 8233,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8137,
											"end": 8233,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 8137,
											"end": 8233,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8242,
											"end": 8294,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 8287,
											"end": 8293,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8282,
											"end": 8285,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 8275,
											"end": 8279,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8268,
											"end": 8273,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 8264,
											"end": 8280,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8242,
											"end": 8294,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 8242,
											"end": 8294,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8242,
											"end": 8294,
											"name": "tag",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 8242,
											"end": 8294,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8319,
											"end": 8325,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8314,
											"end": 8317,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8310,
											"end": 8326,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8303,
											"end": 8326,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8303,
											"end": 8326,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8065,
											"end": 8332,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7955,
											"end": 8332,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7955,
											"end": 8332,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7955,
											"end": 8332,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7955,
											"end": 8332,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7955,
											"end": 8332,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 8338,
											"end": 8613,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 8338,
											"end": 8613,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8470,
											"end": 8473,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8492,
											"end": 8587,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 8583,
											"end": 8586,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8574,
											"end": 8580,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8492,
											"end": 8587,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 8492,
											"end": 8587,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8492,
											"end": 8587,
											"name": "tag",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 8492,
											"end": 8587,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8485,
											"end": 8587,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8485,
											"end": 8587,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8604,
											"end": 8607,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8597,
											"end": 8607,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8597,
											"end": 8607,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8338,
											"end": 8613,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8338,
											"end": 8613,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8338,
											"end": 8613,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8338,
											"end": 8613,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8338,
											"end": 8613,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 8619,
											"end": 8799,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 8619,
											"end": 8799,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8667,
											"end": 8744,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8664,
											"end": 8665,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8657,
											"end": 8745,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8764,
											"end": 8768,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 8761,
											"end": 8762,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8754,
											"end": 8769,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8788,
											"end": 8792,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 8785,
											"end": 8786,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8778,
											"end": 8793,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 8805,
											"end": 9110,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 8805,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8845,
											"end": 8848,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8864,
											"end": 8884,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 8882,
											"end": 8883,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8864,
											"end": 8884,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 8864,
											"end": 8884,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8864,
											"end": 8884,
											"name": "tag",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 8864,
											"end": 8884,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8859,
											"end": 8884,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8859,
											"end": 8884,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8898,
											"end": 8918,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 8916,
											"end": 8917,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8898,
											"end": 8918,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 8898,
											"end": 8918,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 8898,
											"end": 8918,
											"name": "tag",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 8898,
											"end": 8918,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8893,
											"end": 8918,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8893,
											"end": 8918,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9052,
											"end": 9053,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8984,
											"end": 9050,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8980,
											"end": 9054,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8977,
											"end": 8978,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8974,
											"end": 9055,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 8971,
											"end": 9078,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 8971,
											"end": 9078,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 8971,
											"end": 9078,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9058,
											"end": 9076,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 9058,
											"end": 9076,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 9058,
											"end": 9076,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9058,
											"end": 9076,
											"name": "tag",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 9058,
											"end": 9076,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8971,
											"end": 9078,
											"name": "tag",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 8971,
											"end": 9078,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9102,
											"end": 9103,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9099,
											"end": 9100,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9095,
											"end": 9104,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9088,
											"end": 9104,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9088,
											"end": 9104,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8805,
											"end": 9110,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8805,
											"end": 9110,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8805,
											"end": 9110,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8805,
											"end": 9110,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8805,
											"end": 9110,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 9116,
											"end": 9296,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 9116,
											"end": 9296,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9164,
											"end": 9241,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9161,
											"end": 9162,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9154,
											"end": 9242,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9261,
											"end": 9265,
											"name": "PUSH",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 9258,
											"end": 9259,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9251,
											"end": 9266,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9285,
											"end": 9289,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 9282,
											"end": 9283,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9275,
											"end": 9290,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9302,
											"end": 9535,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 9302,
											"end": 9535,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9341,
											"end": 9344,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9364,
											"end": 9388,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 9382,
											"end": 9387,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9364,
											"end": 9388,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "127"
										},
										{
											"begin": 9364,
											"end": 9388,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9364,
											"end": 9388,
											"name": "tag",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 9364,
											"end": 9388,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9355,
											"end": 9388,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9355,
											"end": 9388,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9410,
											"end": 9476,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9403,
											"end": 9408,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9400,
											"end": 9477,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 9397,
											"end": 9500,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 9397,
											"end": 9500,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 9397,
											"end": 9500,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9480,
											"end": 9498,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 9480,
											"end": 9498,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 9480,
											"end": 9498,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 9480,
											"end": 9498,
											"name": "tag",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 9480,
											"end": 9498,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9397,
											"end": 9500,
											"name": "tag",
											"source": 3,
											"value": "238"
										},
										{
											"begin": 9397,
											"end": 9500,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9527,
											"end": 9528,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 9520,
											"end": 9525,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9516,
											"end": 9529,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9509,
											"end": 9529,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9509,
											"end": 9529,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9302,
											"end": 9535,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9302,
											"end": 9535,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9302,
											"end": 9535,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9302,
											"end": 9535,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 9541,
											"end": 9721,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 9541,
											"end": 9721,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9589,
											"end": 9666,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9586,
											"end": 9587,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9579,
											"end": 9667,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9686,
											"end": 9690,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 9683,
											"end": 9684,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9676,
											"end": 9691,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9710,
											"end": 9714,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 9707,
											"end": 9708,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9700,
											"end": 9715,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"error(string,string,string)": "609f7070",
							"strConcat(string,string)": "ff74927b",
							"stringToBytes32(string)": "cfb51928",
							"toAssetIndex(string,uint256)": "a1f7ed1a",
							"toRole(string)": "60e01594"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_contract\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_function\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_msg\",\"type\":\"string\"}],\"name\":\"error\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_a\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_b\",\"type\":\"string\"}],\"name\":\"strConcat\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"stringToBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_group\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"toAssetIndex\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"toRole\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"stringToBytes32(string)\":{\"notice\":\"\\u901a\\u7528\\u5de5\\u5177\\u533a*\"},\"toRole(string)\":{\"notice\":\"\\u4e1a\\u52a1\\u5de5\\u5177\\u533a*\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"1127/util/CommonUtil.sol\":\"CommonUtil\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"1127/util/CommonUtil.sol\":{\"keccak256\":\"0x63c031af59058d98c70fdef1050457c12bc4675992f4206b6931f5f4d683e892\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://248a8cccf59251b8b72f28c7844bcdc20616dfa2f6ee3521e46fb68859995d7b\",\"dweb:/ipfs/QmZg3wV9WRiJ1b82VRwaGtSyPZoEGQnvFYNJsZ3CvmNLLk\"]},\"1127/util/Math.sol\":{\"keccak256\":\"0x6d790b2a3a4c6fb5d7901e09c098663bad705b1681e7fe17718b057675cf5b47\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8998c4532df28dd49346ee7a8078db7f03df2f768b4046488e62fc9c447edc08\",\"dweb:/ipfs/QmcSNYLnPJUNGrjE1uLsYUFwsz1JBQcAVyEcMJ8jVCndQT\"]},\"1127/util/SignedMath.sol\":{\"keccak256\":\"0xcd190ec50c58eef78381c5cad6dc71c2dcbb104fbb15eb9f412d8c71c77f8191\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://511f09b21404b420a7a31eedf3367168565f173384a8f2b8579e9897c310c173\",\"dweb:/ipfs/QmQnY9XT1TQ244s7cfMk22AWDv4oSUyNzZkWaDofoD6AnB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"stringToBytes32(string)": {
								"notice": "通用工具区*"
							},
							"toRole(string)": {
								"notice": "业务工具区*"
							}
						},
						"version": 1
					}
				}
			},
			"1127/util/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"1127/util/Math.sol\":138:15458  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"1127/util/Math.sol\":138:15458  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220751589440c3830d40b9251637bef1d60d40fb9b9f2e1f1eef13403aa0ca9fe1d64736f6c634300080b0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220751589440c3830d40b9251637bef1d60d40fb9b9f2e1f1eef13403aa0ca9fe1d64736f6c634300080b0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH22 0x1589440C3830D40B9251637BEF1D60D40FB9B9F2E1F1 0xEE CALL CALLVALUE SUB 0xAA 0xC 0xA9 INVALID SAR PUSH5 0x736F6C6343 STOP ADDMOD SIGNEXTEND STOP CALLER ",
							"sourceMap": "138:15320:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220751589440c3830d40b9251637bef1d60d40fb9b9f2e1f1eef13403aa0ca9fe1d64736f6c634300080b0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH22 0x1589440C3830D40B9251637BEF1D60D40FB9B9F2E1F1 0xEE CALL CALLVALUE SUB 0xAA 0xC 0xA9 INVALID SAR PUSH5 0x736F6C6343 STOP ADDMOD SIGNEXTEND STOP CALLER ",
							"sourceMap": "138:15320:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 138,
									"end": 15458,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 138,
									"end": 15458,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 138,
									"end": 15458,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 138,
									"end": 15458,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 138,
									"end": 15458,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 138,
									"end": 15458,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 138,
									"end": 15458,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 138,
									"end": 15458,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 138,
									"end": 15458,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 138,
									"end": 15458,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 138,
									"end": 15458,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 138,
									"end": 15458,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 138,
									"end": 15458,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 138,
									"end": 15458,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 138,
									"end": 15458,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 138,
									"end": 15458,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 138,
									"end": 15458,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 138,
									"end": 15458,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 138,
									"end": 15458,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 138,
									"end": 15458,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 138,
									"end": 15458,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 138,
									"end": 15458,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 138,
									"end": 15458,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 138,
									"end": 15458,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 138,
									"end": 15458,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 138,
									"end": 15458,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 138,
									"end": 15458,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 138,
									"end": 15458,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 138,
									"end": 15458,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 138,
									"end": 15458,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 138,
									"end": 15458,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 138,
									"end": 15458,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 138,
									"end": 15458,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 138,
									"end": 15458,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 138,
									"end": 15458,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220751589440c3830d40b9251637bef1d60d40fb9b9f2e1f1eef13403aa0ca9fe1d64736f6c634300080b0033",
									".code": [
										{
											"begin": 138,
											"end": 15458,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 138,
											"end": 15458,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 138,
											"end": 15458,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 138,
											"end": 15458,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 138,
											"end": 15458,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 138,
											"end": 15458,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 138,
											"end": 15458,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 138,
											"end": 15458,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 138,
											"end": 15458,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"1127/util/Math.sol\":\"Math\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"1127/util/Math.sol\":{\"keccak256\":\"0x6d790b2a3a4c6fb5d7901e09c098663bad705b1681e7fe17718b057675cf5b47\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8998c4532df28dd49346ee7a8078db7f03df2f768b4046488e62fc9c447edc08\",\"dweb:/ipfs/QmcSNYLnPJUNGrjE1uLsYUFwsz1JBQcAVyEcMJ8jVCndQT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"1127/util/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"1127/util/SignedMath.sol\":145:1226  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"1127/util/SignedMath.sol\":145:1226  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220cb049dc2e1427a6c25b343f43450a80200c8503971f363b630d2fe87e802770a64736f6c634300080b0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cb049dc2e1427a6c25b343f43450a80200c8503971f363b630d2fe87e802770a64736f6c634300080b0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCB DIV SWAP14 0xC2 0xE1 TIMESTAMP PUSH27 0x6C25B343F43450A80200C8503971F363B630D2FE87E802770A6473 PUSH16 0x6C634300080B00330000000000000000 ",
							"sourceMap": "145:1081:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cb049dc2e1427a6c25b343f43450a80200c8503971f363b630d2fe87e802770a64736f6c634300080b0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCB DIV SWAP14 0xC2 0xE1 TIMESTAMP PUSH27 0x6C25B343F43450A80200C8503971F363B630D2FE87E802770A6473 PUSH16 0x6C634300080B00330000000000000000 ",
							"sourceMap": "145:1081:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 145,
									"end": 1226,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 145,
									"end": 1226,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 145,
									"end": 1226,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 145,
									"end": 1226,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 145,
									"end": 1226,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 145,
									"end": 1226,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 145,
									"end": 1226,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 145,
									"end": 1226,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 145,
									"end": 1226,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 145,
									"end": 1226,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 145,
									"end": 1226,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 145,
									"end": 1226,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 145,
									"end": 1226,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 145,
									"end": 1226,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 145,
									"end": 1226,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 145,
									"end": 1226,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 145,
									"end": 1226,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 145,
									"end": 1226,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 145,
									"end": 1226,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 145,
									"end": 1226,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 145,
									"end": 1226,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 145,
									"end": 1226,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 145,
									"end": 1226,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 145,
									"end": 1226,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 145,
									"end": 1226,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 145,
									"end": 1226,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 145,
									"end": 1226,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 145,
									"end": 1226,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 145,
									"end": 1226,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 145,
									"end": 1226,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 145,
									"end": 1226,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 145,
									"end": 1226,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 145,
									"end": 1226,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 145,
									"end": 1226,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 145,
									"end": 1226,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cb049dc2e1427a6c25b343f43450a80200c8503971f363b630d2fe87e802770a64736f6c634300080b0033",
									".code": [
										{
											"begin": 145,
											"end": 1226,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 145,
											"end": 1226,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 145,
											"end": 1226,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 145,
											"end": 1226,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 145,
											"end": 1226,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 145,
											"end": 1226,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 145,
											"end": 1226,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 145,
											"end": 1226,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 145,
											"end": 1226,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"1127/util/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"1127/util/SignedMath.sol\":{\"keccak256\":\"0xcd190ec50c58eef78381c5cad6dc71c2dcbb104fbb15eb9f412d8c71c77f8191\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://511f09b21404b420a7a31eedf3367168565f173384a8f2b8579e9897c310c173\",\"dweb:/ipfs/QmQnY9XT1TQ244s7cfMk22AWDv4oSUyNzZkWaDofoD6AnB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"1127/util/CommonUtil.sol": {
				"ast": {
					"absolutePath": "1127/util/CommonUtil.sol",
					"exportedSymbols": {
						"CommonUtil": [
							227
						],
						"Math": [
							1281
						],
						"SignedMath": [
							1386
						]
					},
					"id": 228,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".11"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"absolutePath": "1127/util/Math.sol",
							"file": "1127/util/Math.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 228,
							"sourceUnit": 1282,
							"src": "56:40:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "64:4:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "1127/util/SignedMath.sol",
							"file": "1127/util/SignedMath.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 228,
							"sourceUnit": 1387,
							"src": "97:52:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "105:10:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "CommonUtil",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 227,
							"linearizedBaseContracts": [
								227
							],
							"name": "CommonUtil",
							"nameLocation": "159:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 8,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "202:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 227,
									"src": "177:56:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 6,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "177:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 7,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "215:18:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 20,
										"nodeType": "Block",
										"src": "372:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 17,
															"name": "str",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 11,
															"src": "405:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 16,
														"name": "stringToBytes32",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "389:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (string memory) pure returns (bytes32)"
														}
													},
													"id": 18,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "389:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 15,
												"id": 19,
												"nodeType": "Return",
												"src": "382:27:0"
											}
										]
									},
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "244:31:0",
										"text": "业务工具区*"
									},
									"functionSelector": "60e01594",
									"id": 21,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toRole",
									"nameLocation": "316:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "str",
												"nameLocation": "337:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "323:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 10,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "323:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "322:19:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "363:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 13,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "363:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "362:9:0"
									},
									"scope": 227,
									"src": "307:109:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 40,
										"nodeType": "Block",
										"src": "572:79:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 32,
																	"name": "_group",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 23,
																	"src": "618:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"hexValue": "3a",
																	"id": 33,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "626:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_96d280011b274d9410ea6c6fc28e2bb076b01d2fac329c49c4b29a719ec4650c",
																		"typeString": "literal_string \":\""
																	},
																	"value": ":"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_96d280011b274d9410ea6c6fc28e2bb076b01d2fac329c49c4b29a719ec4650c",
																		"typeString": "literal_string \":\""
																	}
																],
																"id": 31,
																"name": "strConcat",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 179,
																"src": "608:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (string memory,string memory) pure returns (string memory)"
																}
															},
															"id": 34,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "608:22:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"id": 36,
																	"name": "id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 25,
																	"src": "640:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 35,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 226,
																"src": "631:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 37,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "631:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 30,
														"name": "strConcat",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 179,
														"src": "598:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
															"typeString": "function (string memory,string memory) pure returns (string memory)"
														}
													},
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "598:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 29,
												"id": 39,
												"nodeType": "Return",
												"src": "591:53:0"
											}
										]
									},
									"functionSelector": "a1f7ed1a",
									"id": 41,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toAssetIndex",
									"nameLocation": "491:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "_group",
												"nameLocation": "518:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "504:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 22,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "504:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "533:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "525:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "525:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:33:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "558:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 27,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "558:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "557:15:0"
									},
									"scope": 227,
									"src": "482:169:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 69,
										"nodeType": "Block",
										"src": "813:199:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"hexValue": "436f6e74726163743a20",
																			"id": 55,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "877:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_b167031a99af10f52264f6cf3e0742ffdc4771f4494373bc656778e84f5a0cc2",
																				"typeString": "literal_string \"Contract: \""
																			},
																			"value": "Contract: "
																		},
																		{
																			"id": 56,
																			"name": "_contract",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 43,
																			"src": "891:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_b167031a99af10f52264f6cf3e0742ffdc4771f4494373bc656778e84f5a0cc2",
																				"typeString": "literal_string \"Contract: \""
																			},
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 54,
																		"name": "strConcat",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 179,
																		"src": "867:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
																			"typeString": "function (string memory,string memory) pure returns (string memory)"
																		}
																	},
																	"id": 57,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "867:34:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"arguments": [
																		{
																			"hexValue": "2c46756e6374696f6e3a20",
																			"id": 59,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "921:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_39e057eeb042ddba93f43854add7c6d4ede2298fafc267749901ed7c35797f80",
																				"typeString": "literal_string \",Function: \""
																			},
																			"value": ",Function: "
																		},
																		{
																			"id": 60,
																			"name": "_function",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 45,
																			"src": "936:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_39e057eeb042ddba93f43854add7c6d4ede2298fafc267749901ed7c35797f80",
																				"typeString": "literal_string \",Function: \""
																			},
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 58,
																		"name": "strConcat",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 179,
																		"src": "911:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
																			"typeString": "function (string memory,string memory) pure returns (string memory)"
																		}
																	},
																	"id": 61,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "911:35:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 53,
																"name": "strConcat",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 179,
																"src": "848:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (string memory,string memory) pure returns (string memory)"
																}
															},
															"id": 62,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "848:108:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "2c4d6573736167653a20",
																	"id": 64,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "976:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_9bf20ed8f8566bd5e401ba57fadbc01222fd1aedf4c6dd3f740fafc8b2a7b832",
																		"typeString": "literal_string \",Message: \""
																	},
																	"value": ",Message: "
																},
																{
																	"id": 65,
																	"name": "_msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 47,
																	"src": "990:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_9bf20ed8f8566bd5e401ba57fadbc01222fd1aedf4c6dd3f740fafc8b2a7b832",
																		"typeString": "literal_string \",Message: \""
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 63,
																"name": "strConcat",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 179,
																"src": "966:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (string memory,string memory) pure returns (string memory)"
																}
															},
															"id": 66,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "966:29:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 52,
														"name": "strConcat",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 179,
														"src": "829:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
															"typeString": "function (string memory,string memory) pure returns (string memory)"
														}
													},
													"id": 67,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "829:176:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 51,
												"id": 68,
												"nodeType": "Return",
												"src": "822:183:0"
											}
										]
									},
									"functionSelector": "609f7070",
									"id": 70,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "error",
									"nameLocation": "671:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "_contract",
												"nameLocation": "700:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "686:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 42,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "686:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "_function",
												"nameLocation": "733:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "719:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 44,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "719:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "_msg",
												"nameLocation": "766:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "752:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 46,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "752:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "676:100:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "798:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 49,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "798:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "797:15:0"
									},
									"scope": 227,
									"src": "662:350:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 85,
										"nodeType": "Block",
										"src": "1129:56:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 81,
																	"name": "str",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 73,
																	"src": "1173:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"expression": {
																	"id": 79,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1156:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 80,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "1156:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1156:21:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 78,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "1146:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 83,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1146:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 77,
												"id": 84,
												"nodeType": "Return",
												"src": "1139:39:0"
											}
										]
									},
									"documentation": {
										"id": 71,
										"nodeType": "StructuredDocumentation",
										"src": "1019:31:0",
										"text": "通用工具区*"
									},
									"functionSelector": "cfb51928",
									"id": 86,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stringToBytes32",
									"nameLocation": "1064:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "str",
												"nameLocation": "1094:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "1080:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 72,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1080:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1079:19:0"
									},
									"returnParameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "1120:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 75,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1120:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1119:9:0"
									},
									"scope": 227,
									"src": "1055:130:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 178,
										"nodeType": "Block",
										"src": "1311:377:0",
										"statements": [
											{
												"assignments": [
													96
												],
												"declarations": [
													{
														"constant": false,
														"id": 96,
														"mutability": "mutable",
														"name": "_ba",
														"nameLocation": "1334:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 178,
														"src": "1321:16:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 95,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1321:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 101,
												"initialValue": {
													"arguments": [
														{
															"id": 99,
															"name": "_a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 88,
															"src": "1346:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 98,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1340:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
															"typeString": "type(bytes storage pointer)"
														},
														"typeName": {
															"id": 97,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1340:5:0",
															"typeDescriptions": {}
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1340:9:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1321:28:0"
											},
											{
												"assignments": [
													103
												],
												"declarations": [
													{
														"constant": false,
														"id": 103,
														"mutability": "mutable",
														"name": "_bb",
														"nameLocation": "1372:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 178,
														"src": "1359:16:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 102,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1359:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 108,
												"initialValue": {
													"arguments": [
														{
															"id": 106,
															"name": "_b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "1384:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 105,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1378:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
															"typeString": "type(bytes storage pointer)"
														},
														"typeName": {
															"id": 104,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1378:5:0",
															"typeDescriptions": {}
														}
													},
													"id": 107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1378:9:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1359:28:0"
											},
											{
												"assignments": [
													110
												],
												"declarations": [
													{
														"constant": false,
														"id": 110,
														"mutability": "mutable",
														"name": "ret",
														"nameLocation": "1411:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 178,
														"src": "1397:17:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 109,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1397:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 119,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 117,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 113,
																	"name": "_ba",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 96,
																	"src": "1428:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 114,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "1428:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"expression": {
																	"id": 115,
																	"name": "_bb",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 103,
																	"src": "1441:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 116,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "1441:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1428:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 112,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1417:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) pure returns (string memory)"
														},
														"typeName": {
															"id": 111,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1421:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														}
													},
													"id": 118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1417:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1397:55:0"
											},
											{
												"assignments": [
													121
												],
												"declarations": [
													{
														"constant": false,
														"id": 121,
														"mutability": "mutable",
														"name": "bret",
														"nameLocation": "1475:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 178,
														"src": "1462:17:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 120,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1462:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 126,
												"initialValue": {
													"arguments": [
														{
															"id": 124,
															"name": "ret",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "1488:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 123,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1482:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
															"typeString": "type(bytes storage pointer)"
														},
														"typeName": {
															"id": 122,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1482:5:0",
															"typeDescriptions": {}
														}
													},
													"id": 125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1482:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1462:30:0"
											},
											{
												"assignments": [
													128
												],
												"declarations": [
													{
														"constant": false,
														"id": 128,
														"mutability": "mutable",
														"name": "k",
														"nameLocation": "1510:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 178,
														"src": "1502:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 127,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1502:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 130,
												"initialValue": {
													"hexValue": "30",
													"id": 129,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1514:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1502:13:0"
											},
											{
												"body": {
													"expression": {
														"id": 149,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"baseExpression": {
																"id": 142,
																"name": "bret",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 121,
																"src": "1566:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 145,
															"indexExpression": {
																"id": 144,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "1571:3:0",
																"subExpression": {
																	"id": 143,
																	"name": "k",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 128,
																	"src": "1571:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"nodeType": "IndexAccess",
															"src": "1566:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes1",
																"typeString": "bytes1"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"baseExpression": {
																"id": 146,
																"name": "_ba",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "1578:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 148,
															"indexExpression": {
																"id": 147,
																"name": "i",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 132,
																"src": "1582:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1578:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes1",
																"typeString": "bytes1"
															}
														},
														"src": "1566:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"id": 150,
													"nodeType": "ExpressionStatement",
													"src": "1566:18:0"
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 135,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 132,
														"src": "1545:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 136,
															"name": "_ba",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 96,
															"src": "1549:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 137,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1549:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1545:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 151,
												"initializationExpression": {
													"assignments": [
														132
													],
													"declarations": [
														{
															"constant": false,
															"id": 132,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1538:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 151,
															"src": "1530:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 131,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1530:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 134,
													"initialValue": {
														"hexValue": "30",
														"id": 133,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1542:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1530:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 140,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1561:3:0",
														"subExpression": {
															"id": 139,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 132,
															"src": "1561:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 141,
													"nodeType": "ExpressionStatement",
													"src": "1561:3:0"
												},
												"nodeType": "ForStatement",
												"src": "1525:59:0"
											},
											{
												"body": {
													"expression": {
														"id": 170,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"baseExpression": {
																"id": 163,
																"name": "bret",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 121,
																"src": "1635:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 166,
															"indexExpression": {
																"id": 165,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "1640:3:0",
																"subExpression": {
																	"id": 164,
																	"name": "k",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 128,
																	"src": "1640:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"nodeType": "IndexAccess",
															"src": "1635:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes1",
																"typeString": "bytes1"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"baseExpression": {
																"id": 167,
																"name": "_bb",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 103,
																"src": "1647:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 169,
															"indexExpression": {
																"id": 168,
																"name": "i",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 153,
																"src": "1651:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1647:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes1",
																"typeString": "bytes1"
															}
														},
														"src": "1635:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"id": 171,
													"nodeType": "ExpressionStatement",
													"src": "1635:18:0"
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 156,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 153,
														"src": "1614:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 157,
															"name": "_bb",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 103,
															"src": "1618:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 158,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1618:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1614:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 172,
												"initializationExpression": {
													"assignments": [
														153
													],
													"declarations": [
														{
															"constant": false,
															"id": 153,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1607:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 172,
															"src": "1599:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 152,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1599:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 155,
													"initialValue": {
														"hexValue": "30",
														"id": 154,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1611:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1599:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 161,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1630:3:0",
														"subExpression": {
															"id": 160,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "1630:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 162,
													"nodeType": "ExpressionStatement",
													"src": "1630:3:0"
												},
												"nodeType": "ForStatement",
												"src": "1594:59:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 175,
															"name": "ret",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "1677:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 174,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1670:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 173,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1670:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1670:11:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 94,
												"id": 177,
												"nodeType": "Return",
												"src": "1663:18:0"
											}
										]
									},
									"functionSelector": "ff74927b",
									"id": 179,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "strConcat",
									"nameLocation": "1201:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "_a",
												"nameLocation": "1225:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "1211:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 87,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1211:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "_b",
												"nameLocation": "1243:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "1229:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 89,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1229:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:36:0"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "1292:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 92,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1292:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1291:15:0"
									},
									"scope": 227,
									"src": "1192:496:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 225,
										"nodeType": "Block",
										"src": "1767:627:0",
										"statements": [
											{
												"id": 224,
												"nodeType": "UncheckedBlock",
												"src": "1777:611:0",
												"statements": [
													{
														"assignments": [
															187
														],
														"declarations": [
															{
																"constant": false,
																"id": 187,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "1809:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 224,
																"src": "1801:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 186,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1801:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 194,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 193,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 190,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 181,
																		"src": "1829:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 188,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1281,
																		"src": "1818:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$1281_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 189,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1101,
																	"src": "1818:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 191,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1818:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 192,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1838:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1818:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1801:38:0"
													},
													{
														"assignments": [
															196
														],
														"declarations": [
															{
																"constant": false,
																"id": 196,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "1867:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 224,
																"src": "1853:20:0",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 195,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "1853:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 201,
														"initialValue": {
															"arguments": [
																{
																	"id": 199,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 187,
																	"src": "1887:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 198,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "1876:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 197,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "1880:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1876:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1853:41:0"
													},
													{
														"assignments": [
															203
														],
														"declarations": [
															{
																"constant": false,
																"id": 203,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "1916:3:0",
																"nodeType": "VariableDeclaration",
																"scope": 224,
																"src": "1908:11:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 202,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1908:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 204,
														"nodeType": "VariableDeclarationStatement",
														"src": "1908:11:0"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "1989:67:0",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "2007:35:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nodeType": "YulIdentifier",
																				"src": "2018:6:0"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2030:2:0",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "2034:6:0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2026:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2026:15:0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2014:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2014:28:0"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nodeType": "YulIdentifier",
																			"src": "2007:3:0"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 196,
																"isOffset": false,
																"isSlot": false,
																"src": "2018:6:0",
																"valueSize": 1
															},
															{
																"declaration": 187,
																"isOffset": false,
																"isSlot": false,
																"src": "2034:6:0",
																"valueSize": 1
															},
															{
																"declaration": 203,
																"isOffset": false,
																"isSlot": false,
																"src": "2007:3:0",
																"valueSize": 1
															}
														],
														"id": 205,
														"nodeType": "InlineAssembly",
														"src": "1980:76:0"
													},
													{
														"body": {
															"id": 220,
															"nodeType": "Block",
															"src": "2082:269:0",
															"statements": [
																{
																	"expression": {
																		"id": 208,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "2100:5:0",
																		"subExpression": {
																			"id": 207,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 203,
																			"src": "2100:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 209,
																	"nodeType": "ExpressionStatement",
																	"src": "2100:5:0"
																},
																{
																	"AST": {
																		"nodeType": "YulBlock",
																		"src": "2183:86:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nodeType": "YulIdentifier",
																							"src": "2213:3:0"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "2227:5:0"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "2234:2:0",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nodeType": "YulIdentifier",
																										"src": "2223:3:0"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "2223:14:0"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nodeType": "YulIdentifier",
																									"src": "2239:10:0"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nodeType": "YulIdentifier",
																								"src": "2218:4:0"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2218:32:0"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nodeType": "YulIdentifier",
																						"src": "2205:7:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2205:46:0"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2205:46:0"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "london",
																	"externalReferences": [
																		{
																			"declaration": 8,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "2239:10:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 203,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "2213:3:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 181,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "2227:5:0",
																			"valueSize": 1
																		}
																	],
																	"id": 210,
																	"nodeType": "InlineAssembly",
																	"src": "2174:95:0"
																},
																{
																	"expression": {
																		"id": 213,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 211,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 181,
																			"src": "2286:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 212,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2295:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "2286:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 214,
																	"nodeType": "ExpressionStatement",
																	"src": "2286:11:0"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 217,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 215,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 181,
																			"src": "2319:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 216,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2328:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "2319:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 219,
																	"nodeType": "IfStatement",
																	"src": "2315:21:0",
																	"trueBody": {
																		"id": 218,
																		"nodeType": "Break",
																		"src": "2331:5:0"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 206,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2076:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 221,
														"nodeType": "WhileStatement",
														"src": "2069:282:0"
													},
													{
														"expression": {
															"id": 222,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 196,
															"src": "2371:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 185,
														"id": 223,
														"nodeType": "Return",
														"src": "2364:13:0"
													}
												]
											}
										]
									},
									"id": 226,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "1705:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1722:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "1714:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 180,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1714:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1713:15:0"
									},
									"returnParameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "1752:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 183,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1752:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1751:15:0"
									},
									"scope": 227,
									"src": "1696:698:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 228,
							"src": "150:2252:0",
							"usedErrors": []
						}
					],
					"src": "32:2371:0"
				},
				"id": 0
			},
			"1127/util/Math.sol": {
				"ast": {
					"absolutePath": "1127/util/Math.sol",
					"exportedSymbols": {
						"Math": [
							1281
						]
					},
					"id": 1282,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 229,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".11"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 230,
								"nodeType": "StructuredDocumentation",
								"src": "61:75:1",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1281,
							"linearizedBaseContracts": [
								1281
							],
							"name": "Math",
							"nameLocation": "146:4:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 231,
										"nodeType": "StructuredDocumentation",
										"src": "158:52:1",
										"text": " @dev Muldiv operation overflow."
									},
									"id": 233,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "222:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "242:2:1"
									},
									"src": "216:29:1"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 238,
									"members": [
										{
											"id": 234,
											"name": "Floor",
											"nameLocation": "278:5:1",
											"nodeType": "EnumValue",
											"src": "278:5:1"
										},
										{
											"id": 235,
											"name": "Ceil",
											"nameLocation": "322:4:1",
											"nodeType": "EnumValue",
											"src": "322:4:1"
										},
										{
											"id": 236,
											"name": "Trunc",
											"nameLocation": "365:5:1",
											"nodeType": "EnumValue",
											"src": "365:5:1"
										},
										{
											"id": 237,
											"name": "Expand",
											"nameLocation": "396:6:1",
											"nodeType": "EnumValue",
											"src": "396:6:1"
										}
									],
									"name": "Rounding",
									"nameLocation": "258:8:1",
									"nodeType": "EnumDefinition",
									"src": "253:174:1"
								},
								{
									"body": {
										"id": 269,
										"nodeType": "Block",
										"src": "612:146:1",
										"statements": [
											{
												"id": 268,
												"nodeType": "UncheckedBlock",
												"src": "623:128:1",
												"statements": [
													{
														"assignments": [
															251
														],
														"declarations": [
															{
																"constant": false,
																"id": 251,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "656:1:1",
																"nodeType": "VariableDeclaration",
																"scope": 268,
																"src": "648:9:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 250,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "648:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 255,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 254,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 252,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 241,
																"src": "660:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 253,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 243,
																"src": "664:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "660:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "648:17:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 256,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 251,
																"src": "684:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 257,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 241,
																"src": "688:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "684:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 263,
														"nodeType": "IfStatement",
														"src": "680:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 259,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "699:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 260,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "706:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 261,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "698:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 249,
															"id": 262,
															"nodeType": "Return",
															"src": "691:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 264,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "731:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 265,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 251,
																	"src": "737:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 266,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "730:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 249,
														"id": 267,
														"nodeType": "Return",
														"src": "723:16:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "435:95:1",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 270,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "545:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "560:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "552:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "552:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "571:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "563:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "563:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "551:22:1"
									},
									"returnParameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "597:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 245,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "597:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "603:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "596:15:1"
									},
									"scope": 1281,
									"src": "536:222:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 297,
										"nodeType": "Block",
										"src": "946:118:1",
										"statements": [
											{
												"id": 296,
												"nodeType": "UncheckedBlock",
												"src": "957:100:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 284,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 282,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 275,
																"src": "986:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 283,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 273,
																"src": "990:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "986:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 289,
														"nodeType": "IfStatement",
														"src": "982:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 285,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1001:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 286,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1008:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 287,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1000:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 281,
															"id": 288,
															"nodeType": "Return",
															"src": "993:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 290,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1033:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 293,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 291,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 273,
																		"src": "1039:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 292,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 275,
																		"src": "1043:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1039:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 294,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1032:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 281,
														"id": 295,
														"nodeType": "Return",
														"src": "1025:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 271,
										"nodeType": "StructuredDocumentation",
										"src": "766:98:1",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 298,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "879:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "894:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "886:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "886:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "905:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "897:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "897:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "885:22:1"
									},
									"returnParameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "931:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 277,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "931:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "937:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 279,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "937:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:15:1"
									},
									"scope": 1281,
									"src": "870:194:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 339,
										"nodeType": "Block",
										"src": "1255:427:1",
										"statements": [
											{
												"id": 338,
												"nodeType": "UncheckedBlock",
												"src": "1266:409:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 310,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 301,
																"src": "1528:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 311,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1533:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1528:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 317,
														"nodeType": "IfStatement",
														"src": "1524:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 313,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1544:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 314,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1550:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 315,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1543:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 309,
															"id": 316,
															"nodeType": "Return",
															"src": "1536:16:1"
														}
													},
													{
														"assignments": [
															319
														],
														"declarations": [
															{
																"constant": false,
																"id": 319,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1575:1:1",
																"nodeType": "VariableDeclaration",
																"scope": 338,
																"src": "1567:9:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 318,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1567:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 323,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 322,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 320,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 301,
																"src": "1579:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 321,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 303,
																"src": "1583:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1579:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1567:17:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 326,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 324,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 319,
																	"src": "1603:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 325,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 301,
																	"src": "1607:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1603:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 327,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 303,
																"src": "1612:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1603:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 333,
														"nodeType": "IfStatement",
														"src": "1599:33:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 329,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1623:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 330,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1630:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 331,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1622:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 309,
															"id": 332,
															"nodeType": "Return",
															"src": "1615:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 334,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1655:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 335,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 319,
																	"src": "1661:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 336,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1654:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 309,
														"id": 337,
														"nodeType": "Return",
														"src": "1647:16:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "1072:101:1",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 340,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1188:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1203:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "1195:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1214:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "1206:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1206:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:22:1"
									},
									"returnParameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "1240:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 305,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1240:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "1246:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1246:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1239:15:1"
									},
									"scope": 1281,
									"src": "1179:503:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 367,
										"nodeType": "Block",
										"src": "1874:119:1",
										"statements": [
											{
												"id": 366,
												"nodeType": "UncheckedBlock",
												"src": "1885:101:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 354,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 352,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 345,
																"src": "1914:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 353,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1919:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1914:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 359,
														"nodeType": "IfStatement",
														"src": "1910:29:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 355,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1930:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 356,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1937:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 357,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1929:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 351,
															"id": 358,
															"nodeType": "Return",
															"src": "1922:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 360,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1962:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 363,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 361,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 343,
																		"src": "1968:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 362,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 345,
																		"src": "1972:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1968:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 364,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1961:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 351,
														"id": 365,
														"nodeType": "Return",
														"src": "1954:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 341,
										"nodeType": "StructuredDocumentation",
										"src": "1690:102:1",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 368,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1807:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1822:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "1814:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1814:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1833:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "1825:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 344,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1825:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1813:22:1"
									},
									"returnParameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "1859:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 347,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1859:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "1865:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1865:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1858:15:1"
									},
									"scope": 1281,
									"src": "1798:195:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 395,
										"nodeType": "Block",
										"src": "2195:119:1",
										"statements": [
											{
												"id": 394,
												"nodeType": "UncheckedBlock",
												"src": "2206:101:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 382,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 380,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 373,
																"src": "2235:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 381,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2240:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2235:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 387,
														"nodeType": "IfStatement",
														"src": "2231:29:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 383,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2251:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 384,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2258:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 385,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2250:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 379,
															"id": 386,
															"nodeType": "Return",
															"src": "2243:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 389,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 371,
																		"src": "2289:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 390,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 373,
																		"src": "2293:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 392,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 379,
														"id": 393,
														"nodeType": "Return",
														"src": "2275:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 369,
										"nodeType": "StructuredDocumentation",
										"src": "2001:112:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 396,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2128:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2143:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 396,
												"src": "2135:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 370,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2135:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2154:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 396,
												"src": "2146:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2146:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2134:22:1"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 396,
												"src": "2180:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 375,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2180:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 396,
												"src": "2186:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2186:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2179:15:1"
									},
									"scope": 1281,
									"src": "2119:195:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 413,
										"nodeType": "Block",
										"src": "2456:39:1",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 408,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 406,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 399,
															"src": "2474:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 407,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 401,
															"src": "2478:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2474:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 410,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 401,
														"src": "2486:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2474:13:1",
													"trueExpression": {
														"id": 409,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 399,
														"src": "2482:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 405,
												"id": 412,
												"nodeType": "Return",
												"src": "2467:20:1"
											}
										]
									},
									"documentation": {
										"id": 397,
										"nodeType": "StructuredDocumentation",
										"src": "2322:61:1",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 414,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2398:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2410:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "2402:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2402:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2421:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "2413:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 400,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2413:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2401:22:1"
									},
									"returnParameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "2447:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2447:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2446:9:1"
									},
									"scope": 1281,
									"src": "2389:106:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 431,
										"nodeType": "Block",
										"src": "2638:39:1",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 426,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 424,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "2656:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 425,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 419,
															"src": "2660:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2656:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 428,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 419,
														"src": "2668:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2656:13:1",
													"trueExpression": {
														"id": 427,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 417,
														"src": "2664:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 423,
												"id": 430,
												"nodeType": "Return",
												"src": "2649:20:1"
											}
										]
									},
									"documentation": {
										"id": 415,
										"nodeType": "StructuredDocumentation",
										"src": "2503:62:1",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 432,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2580:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2592:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "2584:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2584:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2603:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "2595:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 418,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2595:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2583:22:1"
									},
									"returnParameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "2629:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 421,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2629:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2628:9:1"
									},
									"scope": 1281,
									"src": "2571:106:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 454,
										"nodeType": "Block",
										"src": "2867:85:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 444,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 442,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 435,
																	"src": "2924:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 443,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 437,
																	"src": "2928:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2924:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 445,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2923:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 451,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 448,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 446,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 435,
																		"src": "2934:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 447,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 437,
																		"src": "2938:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2934:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 449,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2933:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 450,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2943:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2933:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2923:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 441,
												"id": 453,
												"nodeType": "Return",
												"src": "2916:28:1"
											}
										]
									},
									"documentation": {
										"id": 433,
										"nodeType": "StructuredDocumentation",
										"src": "2685:105:1",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 455,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2805:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2821:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "2813:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2832:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "2824:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 436,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2824:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:22:1"
									},
									"returnParameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "2858:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 439,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2858:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2857:9:1"
									},
									"scope": 1281,
									"src": "2796:156:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 488,
										"nodeType": "Block",
										"src": "3252:268:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 465,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 460,
														"src": "3267:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 466,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3272:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3267:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 473,
												"nodeType": "IfStatement",
												"src": "3263:130:1",
												"trueBody": {
													"id": 472,
													"nodeType": "Block",
													"src": "3275:118:1",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 470,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 468,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 458,
																	"src": "3376:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 469,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 460,
																	"src": "3380:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3376:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 464,
															"id": 471,
															"nodeType": "Return",
															"src": "3369:12:1"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 476,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 474,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 458,
															"src": "3484:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 475,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3489:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3484:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 485,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 483,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 480,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 478,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 458,
																			"src": "3498:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 479,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3502:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3498:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 481,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3497:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 482,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 460,
																"src": "3507:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3497:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 484,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3511:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3497:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3484:28:1",
													"trueExpression": {
														"hexValue": "30",
														"id": 477,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3493:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 464,
												"id": 487,
												"nodeType": "Return",
												"src": "3477:35:1"
											}
										]
									},
									"documentation": {
										"id": 456,
										"nodeType": "StructuredDocumentation",
										"src": "2960:215:1",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 489,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3190:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3206:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "3198:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 457,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3198:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3217:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "3209:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3209:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3197:22:1"
									},
									"returnParameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "3243:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3243:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3242:9:1"
									},
									"scope": 1281,
									"src": "3181:339:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 614,
										"nodeType": "Block",
										"src": "3950:4097:1",
										"statements": [
											{
												"id": 613,
												"nodeType": "UncheckedBlock",
												"src": "3961:4079:1",
												"statements": [
													{
														"assignments": [
															502
														],
														"declarations": [
															{
																"constant": false,
																"id": 502,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4294:5:1",
																"nodeType": "VariableDeclaration",
																"scope": 613,
																"src": "4286:13:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 501,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4286:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 506,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 505,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 503,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 492,
																"src": "4302:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 504,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 494,
																"src": "4306:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4302:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4286:21:1"
													},
													{
														"assignments": [
															508
														],
														"declarations": [
															{
																"constant": false,
																"id": 508,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4375:5:1",
																"nodeType": "VariableDeclaration",
																"scope": 613,
																"src": "4367:13:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 507,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4367:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 509,
														"nodeType": "VariableDeclarationStatement",
														"src": "4367:13:1"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "4448:125:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4467:30:1",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "4484:1:1"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "4487:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4494:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "4490:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4490:6:1"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "4477:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4477:20:1"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nodeType": "YulTypedName",
																			"src": "4471:2:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4515:43:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:1"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "4536:5:1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4528:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4528:14:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "4547:2:1"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "4551:5:1"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "4544:2:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4544:13:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4524:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4524:34:1"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "4515:5:1"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 502,
																"isOffset": false,
																"isSlot": false,
																"src": "4536:5:1",
																"valueSize": 1
															},
															{
																"declaration": 502,
																"isOffset": false,
																"isSlot": false,
																"src": "4551:5:1",
																"valueSize": 1
															},
															{
																"declaration": 508,
																"isOffset": false,
																"isSlot": false,
																"src": "4515:5:1",
																"valueSize": 1
															},
															{
																"declaration": 492,
																"isOffset": false,
																"isSlot": false,
																"src": "4484:1:1",
																"valueSize": 1
															},
															{
																"declaration": 494,
																"isOffset": false,
																"isSlot": false,
																"src": "4487:1:1",
																"valueSize": 1
															}
														],
														"id": 510,
														"nodeType": "InlineAssembly",
														"src": "4439:134:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 513,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 511,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 508,
																"src": "4657:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 512,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4666:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4657:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 519,
														"nodeType": "IfStatement",
														"src": "4653:373:1",
														"trueBody": {
															"id": 518,
															"nodeType": "Block",
															"src": "4669:357:1",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 516,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 514,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 502,
																			"src": "4991:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 515,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 496,
																			"src": "4999:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4991:19:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 500,
																	"id": 517,
																	"nodeType": "Return",
																	"src": "4984:26:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 522,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 520,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 496,
																"src": "5135:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 521,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 508,
																"src": "5150:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5135:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 527,
														"nodeType": "IfStatement",
														"src": "5131:90:1",
														"trueBody": {
															"id": 526,
															"nodeType": "Block",
															"src": "5157:64:1",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 523,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 233,
																			"src": "5183:20:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 524,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5183:22:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 525,
																	"nodeType": "RevertStatement",
																	"src": "5176:29:1"
																}
															]
														}
													},
													{
														"assignments": [
															529
														],
														"declarations": [
															{
																"constant": false,
																"id": 529,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5491:9:1",
																"nodeType": "VariableDeclaration",
																"scope": 613,
																"src": "5483:17:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 528,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5483:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 530,
														"nodeType": "VariableDeclarationStatement",
														"src": "5483:17:1"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "5524:298:1",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "5595:38:1",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "5615:1:1"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "5618:1:1"
																			},
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "5621:11:1"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "5608:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5608:25:1"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nodeType": "YulIdentifier",
																			"src": "5595:9:1"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5718:41:1",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nodeType": "YulIdentifier",
																				"src": "5731:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nodeType": "YulIdentifier",
																						"src": "5741:9:1"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "5752:5:1"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "5738:2:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5738:20:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5727:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5727:32:1"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "5718:5:1"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5777:30:1",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "5790:5:1"
																			},
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "5797:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5786:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5786:21:1"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "5777:5:1"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 496,
																"isOffset": false,
																"isSlot": false,
																"src": "5621:11:1",
																"valueSize": 1
															},
															{
																"declaration": 502,
																"isOffset": false,
																"isSlot": false,
																"src": "5752:5:1",
																"valueSize": 1
															},
															{
																"declaration": 502,
																"isOffset": false,
																"isSlot": false,
																"src": "5777:5:1",
																"valueSize": 1
															},
															{
																"declaration": 502,
																"isOffset": false,
																"isSlot": false,
																"src": "5790:5:1",
																"valueSize": 1
															},
															{
																"declaration": 508,
																"isOffset": false,
																"isSlot": false,
																"src": "5718:5:1",
																"valueSize": 1
															},
															{
																"declaration": 508,
																"isOffset": false,
																"isSlot": false,
																"src": "5731:5:1",
																"valueSize": 1
															},
															{
																"declaration": 529,
																"isOffset": false,
																"isSlot": false,
																"src": "5595:9:1",
																"valueSize": 1
															},
															{
																"declaration": 529,
																"isOffset": false,
																"isSlot": false,
																"src": "5741:9:1",
																"valueSize": 1
															},
															{
																"declaration": 529,
																"isOffset": false,
																"isSlot": false,
																"src": "5797:9:1",
																"valueSize": 1
															},
															{
																"declaration": 492,
																"isOffset": false,
																"isSlot": false,
																"src": "5615:1:1",
																"valueSize": 1
															},
															{
																"declaration": 494,
																"isOffset": false,
																"isSlot": false,
																"src": "5618:1:1",
																"valueSize": 1
															}
														],
														"id": 531,
														"nodeType": "InlineAssembly",
														"src": "5515:307:1"
													},
													{
														"assignments": [
															533
														],
														"declarations": [
															{
																"constant": false,
																"id": 533,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "6039:4:1",
																"nodeType": "VariableDeclaration",
																"scope": 613,
																"src": "6031:12:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 532,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6031:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 540,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 539,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 534,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 496,
																"src": "6046:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 537,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 535,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6061:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 536,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 496,
																			"src": "6065:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6061:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 538,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6060:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6046:31:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6031:46:1"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "6101:371:1",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "6168:37:1",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "6187:11:1"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "6200:4:1"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "6183:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6183:22:1"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nodeType": "YulIdentifier",
																			"src": "6168:11:1"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6275:25:1",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "6288:5:1"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "6295:4:1"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "6284:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6284:16:1"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "6275:5:1"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6418:39:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6438:1:1",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nodeType": "YulIdentifier",
																								"src": "6441:4:1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "6434:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6434:12:1"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "6448:4:1"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "6430:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6430:23:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6455:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6426:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6426:31:1"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nodeType": "YulIdentifier",
																			"src": "6418:4:1"
																		}
																	]
																}
															]
														},
														"evmVersion": "london",
														"externalReferences": [
															{
																"declaration": 496,
																"isOffset": false,
																"isSlot": false,
																"src": "6168:11:1",
																"valueSize": 1
															},
															{
																"declaration": 496,
																"isOffset": false,
																"isSlot": false,
																"src": "6187:11:1",
																"valueSize": 1
															},
															{
																"declaration": 502,
																"isOffset": false,
																"isSlot": false,
																"src": "6275:5:1",
																"valueSize": 1
															},
															{
																"declaration": 502,
																"isOffset": false,
																"isSlot": false,
																"src": "6288:5:1",
																"valueSize": 1
															},
															{
																"declaration": 533,
																"isOffset": false,
																"isSlot": false,
																"src": "6200:4:1",
																"valueSize": 1
															},
															{
																"declaration": 533,
																"isOffset": false,
																"isSlot": false,
																"src": "6295:4:1",
																"valueSize": 1
															},
															{
																"declaration": 533,
																"isOffset": false,
																"isSlot": false,
																"src": "6418:4:1",
																"valueSize": 1
															},
															{
																"declaration": 533,
																"isOffset": false,
																"isSlot": false,
																"src": "6441:4:1",
																"valueSize": 1
															},
															{
																"declaration": 533,
																"isOffset": false,
																"isSlot": false,
																"src": "6448:4:1",
																"valueSize": 1
															}
														],
														"id": 541,
														"nodeType": "InlineAssembly",
														"src": "6092:380:1"
													},
													{
														"expression": {
															"id": 546,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 542,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 502,
																"src": "6541:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 545,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 543,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 508,
																	"src": "6550:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 544,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 533,
																	"src": "6558:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6550:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6541:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 547,
														"nodeType": "ExpressionStatement",
														"src": "6541:21:1"
													},
													{
														"assignments": [
															549
														],
														"declarations": [
															{
																"constant": false,
																"id": 549,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6893:7:1",
																"nodeType": "VariableDeclaration",
																"scope": 613,
																"src": "6885:15:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 548,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6885:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 556,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 555,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 552,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 550,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6904:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 551,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 496,
																			"src": "6908:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6904:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 553,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6903:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 554,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6923:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6903:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6885:39:1"
													},
													{
														"expression": {
															"id": 563,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 557,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 549,
																"src": "7145:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 562,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 558,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7156:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 561,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 559,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 496,
																		"src": "7160:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 560,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 549,
																		"src": "7174:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7160:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7156:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7145:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 564,
														"nodeType": "ExpressionStatement",
														"src": "7145:36:1"
													},
													{
														"expression": {
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 565,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 549,
																"src": "7215:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 570,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 566,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7226:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 569,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 567,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 496,
																		"src": "7230:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 568,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 549,
																		"src": "7244:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7230:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7226:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7215:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 572,
														"nodeType": "ExpressionStatement",
														"src": "7215:36:1"
													},
													{
														"expression": {
															"id": 579,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 573,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 549,
																"src": "7286:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 578,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 574,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7297:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 577,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 575,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 496,
																		"src": "7301:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 576,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 549,
																		"src": "7315:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7301:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7297:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7286:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 580,
														"nodeType": "ExpressionStatement",
														"src": "7286:36:1"
													},
													{
														"expression": {
															"id": 587,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 581,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 549,
																"src": "7357:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 586,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 582,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7368:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 585,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 583,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 496,
																		"src": "7372:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 584,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 549,
																		"src": "7386:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7372:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7368:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7357:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 588,
														"nodeType": "ExpressionStatement",
														"src": "7357:36:1"
													},
													{
														"expression": {
															"id": 595,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 589,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 549,
																"src": "7428:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 594,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 590,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7439:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 593,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 591,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 496,
																		"src": "7443:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 592,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 549,
																		"src": "7457:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7443:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7439:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7428:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 596,
														"nodeType": "ExpressionStatement",
														"src": "7428:36:1"
													},
													{
														"expression": {
															"id": 603,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 597,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 549,
																"src": "7500:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 602,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 598,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7511:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 601,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 599,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 496,
																		"src": "7515:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 600,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 549,
																		"src": "7529:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7515:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7511:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7500:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 604,
														"nodeType": "ExpressionStatement",
														"src": "7500:36:1"
													},
													{
														"expression": {
															"id": 609,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 605,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 499,
																"src": "7976:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 608,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 606,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 502,
																	"src": "7985:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 607,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 549,
																	"src": "7993:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7985:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7976:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 610,
														"nodeType": "ExpressionStatement",
														"src": "7976:24:1"
													},
													{
														"expression": {
															"id": 611,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 499,
															"src": "8022:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 500,
														"id": 612,
														"nodeType": "Return",
														"src": "8015:13:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 490,
										"nodeType": "StructuredDocumentation",
										"src": "3528:318:1",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 615,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3861:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3876:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "3868:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 491,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3868:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3887:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "3879:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 493,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3879:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3898:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "3890:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3890:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3867:43:1"
									},
									"returnParameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3942:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "3934:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 498,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3934:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3933:16:1"
									},
									"scope": 1281,
									"src": "3852:4195:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 657,
										"nodeType": "Block",
										"src": "8294:198:1",
										"statements": [
											{
												"assignments": [
													631
												],
												"declarations": [
													{
														"constant": false,
														"id": 631,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8313:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 657,
														"src": "8305:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 630,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8305:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 637,
												"initialValue": {
													"arguments": [
														{
															"id": 633,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 618,
															"src": "8329:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 634,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 620,
															"src": "8332:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 635,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 622,
															"src": "8335:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 632,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															615,
															658
														],
														"referencedDeclaration": 615,
														"src": "8322:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8322:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8305:42:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 639,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 625,
																"src": "8379:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$238",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$238",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 638,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1280,
															"src": "8362:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$238_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 640,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8362:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 647,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 642,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 618,
																	"src": "8399:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 643,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 620,
																	"src": "8402:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 644,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 622,
																	"src": "8405:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 641,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8392:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 645,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8392:25:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 646,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8420:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8392:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8362:59:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 654,
												"nodeType": "IfStatement",
												"src": "8358:103:1",
												"trueBody": {
													"id": 653,
													"nodeType": "Block",
													"src": "8423:38:1",
													"statements": [
														{
															"expression": {
																"id": 651,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 649,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 631,
																	"src": "8438:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 650,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8448:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8438:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 652,
															"nodeType": "ExpressionStatement",
															"src": "8438:11:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 655,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 631,
													"src": "8478:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 629,
												"id": 656,
												"nodeType": "Return",
												"src": "8471:13:1"
											}
										]
									},
									"documentation": {
										"id": 616,
										"nodeType": "StructuredDocumentation",
										"src": "8055:123:1",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 658,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8193:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8208:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "8200:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 617,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8200:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8219:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "8211:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 619,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8211:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8230:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "8222:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 621,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8222:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8252:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "8243:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$238",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 624,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 623,
														"name": "Rounding",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 238,
														"src": "8243:8:1"
													},
													"referencedDeclaration": 238,
													"src": "8243:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$238",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8199:62:1"
									},
									"returnParameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "8285:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 627,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8285:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8284:9:1"
									},
									"scope": 1281,
									"src": "8184:308:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 769,
										"nodeType": "Block",
										"src": "8791:1616:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 666,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 661,
														"src": "8806:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 667,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8811:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8806:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 672,
												"nodeType": "IfStatement",
												"src": "8802:47:1",
												"trueBody": {
													"id": 671,
													"nodeType": "Block",
													"src": "8814:35:1",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 669,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8836:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 665,
															"id": 670,
															"nodeType": "Return",
															"src": "8829:8:1"
														}
													]
												}
											},
											{
												"assignments": [
													674
												],
												"declarations": [
													{
														"constant": false,
														"id": 674,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9548:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 769,
														"src": "9540:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 673,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9540:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 683,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 675,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9557:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 680,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 677,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 661,
																			"src": "9568:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 676,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			937,
																			972
																		],
																		"referencedDeclaration": 937,
																		"src": "9563:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 678,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9563:7:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 679,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9574:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9563:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 681,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9562:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9557:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9540:36:1"
											},
											{
												"id": 768,
												"nodeType": "UncheckedBlock",
												"src": "9983:417:1",
												"statements": [
													{
														"expression": {
															"id": 693,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 684,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 674,
																"src": "10008:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 692,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 689,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 685,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 674,
																				"src": "10018:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 688,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 686,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 661,
																					"src": "10027:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 687,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 674,
																					"src": "10031:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10027:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10018:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 690,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10017:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 691,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10042:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10017:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10008:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 694,
														"nodeType": "ExpressionStatement",
														"src": "10008:35:1"
													},
													{
														"expression": {
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 695,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 674,
																"src": "10058:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 703,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 700,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 696,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 674,
																				"src": "10068:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 699,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 697,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 661,
																					"src": "10077:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 698,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 674,
																					"src": "10081:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10077:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10068:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 701,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10067:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 702,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10092:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10067:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10058:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 705,
														"nodeType": "ExpressionStatement",
														"src": "10058:35:1"
													},
													{
														"expression": {
															"id": 715,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 706,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 674,
																"src": "10108:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 714,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 711,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 707,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 674,
																				"src": "10118:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 710,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 708,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 661,
																					"src": "10127:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 709,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 674,
																					"src": "10131:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10127:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10118:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 712,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10117:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 713,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10142:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10117:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10108:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 716,
														"nodeType": "ExpressionStatement",
														"src": "10108:35:1"
													},
													{
														"expression": {
															"id": 726,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 717,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 674,
																"src": "10158:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 725,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 722,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 718,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 674,
																				"src": "10168:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 721,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 719,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 661,
																					"src": "10177:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 720,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 674,
																					"src": "10181:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10177:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10168:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 723,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10167:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 724,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10192:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10167:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10158:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 727,
														"nodeType": "ExpressionStatement",
														"src": "10158:35:1"
													},
													{
														"expression": {
															"id": 737,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 728,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 674,
																"src": "10208:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 736,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 733,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 729,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 674,
																				"src": "10218:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 732,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 730,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 661,
																					"src": "10227:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 731,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 674,
																					"src": "10231:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10227:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10218:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 734,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10217:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 735,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10242:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10217:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10208:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 738,
														"nodeType": "ExpressionStatement",
														"src": "10208:35:1"
													},
													{
														"expression": {
															"id": 748,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 739,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 674,
																"src": "10258:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 747,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 744,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 740,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 674,
																				"src": "10268:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 743,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 741,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 661,
																					"src": "10277:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 742,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 674,
																					"src": "10281:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10277:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10268:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 745,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10267:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 746,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10292:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10267:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10258:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 749,
														"nodeType": "ExpressionStatement",
														"src": "10258:35:1"
													},
													{
														"expression": {
															"id": 759,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 750,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 674,
																"src": "10308:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 758,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 755,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 751,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 674,
																				"src": "10318:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 754,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 752,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 661,
																					"src": "10327:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 753,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 674,
																					"src": "10331:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10327:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10318:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 756,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10317:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 757,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10342:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10317:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10308:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 760,
														"nodeType": "ExpressionStatement",
														"src": "10308:35:1"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 762,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 674,
																	"src": "10369:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 765,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 763,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 661,
																		"src": "10377:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 764,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 674,
																		"src": "10381:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10377:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 761,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 432,
																"src": "10365:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 766,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10365:23:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 665,
														"id": 767,
														"nodeType": "Return",
														"src": "10358:30:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 659,
										"nodeType": "StructuredDocumentation",
										"src": "8500:228:1",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 770,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8743:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8756:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "8748:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8748:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8747:11:1"
									},
									"returnParameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "8782:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 663,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8782:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8781:9:1"
									},
									"scope": 1281,
									"src": "8734:1673:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 804,
										"nodeType": "Block",
										"src": "10588:169:1",
										"statements": [
											{
												"id": 803,
												"nodeType": "UncheckedBlock",
												"src": "10599:151:1",
												"statements": [
													{
														"assignments": [
															782
														],
														"declarations": [
															{
																"constant": false,
																"id": 782,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10632:6:1",
																"nodeType": "VariableDeclaration",
																"scope": 803,
																"src": "10624:14:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 781,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10624:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 786,
														"initialValue": {
															"arguments": [
																{
																	"id": 784,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 773,
																	"src": "10646:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 783,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	770,
																	805
																],
																"referencedDeclaration": 770,
																"src": "10641:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 785,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10641:7:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10624:24:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 801,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 787,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 782,
																"src": "10670:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 796,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 789,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 776,
																						"src": "10697:8:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$238",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$238",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 788,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1280,
																					"src": "10680:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$238_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10680:26:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 795,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 793,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 791,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 782,
																						"src": "10710:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 792,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 782,
																						"src": "10719:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10710:15:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 794,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 773,
																					"src": "10728:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10710:19:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10680:49:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 798,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10736:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 799,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10680:57:1",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 797,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10732:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 800,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10679:59:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10670:68:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 780,
														"id": 802,
														"nodeType": "Return",
														"src": "10663:75:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 771,
										"nodeType": "StructuredDocumentation",
										"src": "10415:91:1",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 805,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10521:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 773,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10534:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 805,
												"src": "10526:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 772,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10526:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 776,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10546:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 805,
												"src": "10537:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$238",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 775,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 774,
														"name": "Rounding",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 238,
														"src": "10537:8:1"
													},
													"referencedDeclaration": 238,
													"src": "10537:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$238",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10525:30:1"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 805,
												"src": "10579:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10579:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10578:9:1"
									},
									"scope": 1281,
									"src": "10512:245:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 936,
										"nodeType": "Block",
										"src": "10954:958:1",
										"statements": [
											{
												"assignments": [
													814
												],
												"declarations": [
													{
														"constant": false,
														"id": 814,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10973:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 936,
														"src": "10965:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 813,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10965:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 816,
												"initialValue": {
													"hexValue": "30",
													"id": 815,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10982:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10965:18:1"
											},
											{
												"id": 933,
												"nodeType": "UncheckedBlock",
												"src": "10994:887:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 821,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 819,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 817,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 808,
																	"src": "11023:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 818,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11032:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "11023:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 820,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11038:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11023:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 831,
														"nodeType": "IfStatement",
														"src": "11019:102:1",
														"trueBody": {
															"id": 830,
															"nodeType": "Block",
															"src": "11041:80:1",
															"statements": [
																{
																	"expression": {
																		"id": 824,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 822,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 808,
																			"src": "11060:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 823,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11070:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "11060:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 825,
																	"nodeType": "ExpressionStatement",
																	"src": "11060:13:1"
																},
																{
																	"expression": {
																		"id": 828,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 826,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 814,
																			"src": "11092:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 827,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11102:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "11092:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 829,
																	"nodeType": "ExpressionStatement",
																	"src": "11092:13:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 836,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 834,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 832,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 808,
																	"src": "11139:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 833,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11148:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "11139:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 835,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11153:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11139:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 846,
														"nodeType": "IfStatement",
														"src": "11135:99:1",
														"trueBody": {
															"id": 845,
															"nodeType": "Block",
															"src": "11156:78:1",
															"statements": [
																{
																	"expression": {
																		"id": 839,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 837,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 808,
																			"src": "11175:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 838,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11185:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11175:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 840,
																	"nodeType": "ExpressionStatement",
																	"src": "11175:12:1"
																},
																{
																	"expression": {
																		"id": 843,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 841,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 814,
																			"src": "11206:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 842,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11216:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11206:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 844,
																	"nodeType": "ExpressionStatement",
																	"src": "11206:12:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 851,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 849,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 847,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 808,
																	"src": "11252:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 848,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11261:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11252:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 850,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11266:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11252:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 861,
														"nodeType": "IfStatement",
														"src": "11248:99:1",
														"trueBody": {
															"id": 860,
															"nodeType": "Block",
															"src": "11269:78:1",
															"statements": [
																{
																	"expression": {
																		"id": 854,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 852,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 808,
																			"src": "11288:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 853,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11298:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11288:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 855,
																	"nodeType": "ExpressionStatement",
																	"src": "11288:12:1"
																},
																{
																	"expression": {
																		"id": 858,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 856,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 814,
																			"src": "11319:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 857,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11329:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11319:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 859,
																	"nodeType": "ExpressionStatement",
																	"src": "11319:12:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 866,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 864,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 862,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 808,
																	"src": "11365:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 863,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11374:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11365:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 865,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11379:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11365:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 876,
														"nodeType": "IfStatement",
														"src": "11361:99:1",
														"trueBody": {
															"id": 875,
															"nodeType": "Block",
															"src": "11382:78:1",
															"statements": [
																{
																	"expression": {
																		"id": 869,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 867,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 808,
																			"src": "11401:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 868,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11411:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11401:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 870,
																	"nodeType": "ExpressionStatement",
																	"src": "11401:12:1"
																},
																{
																	"expression": {
																		"id": 873,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 871,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 814,
																			"src": "11432:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 872,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11442:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11432:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 874,
																	"nodeType": "ExpressionStatement",
																	"src": "11432:12:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 881,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 879,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 877,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 808,
																	"src": "11478:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 878,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11487:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11478:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 880,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11491:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11478:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 891,
														"nodeType": "IfStatement",
														"src": "11474:96:1",
														"trueBody": {
															"id": 890,
															"nodeType": "Block",
															"src": "11494:76:1",
															"statements": [
																{
																	"expression": {
																		"id": 884,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 882,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 808,
																			"src": "11513:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 883,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11523:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11513:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 885,
																	"nodeType": "ExpressionStatement",
																	"src": "11513:11:1"
																},
																{
																	"expression": {
																		"id": 888,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 886,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 814,
																			"src": "11543:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 887,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11553:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11543:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 889,
																	"nodeType": "ExpressionStatement",
																	"src": "11543:11:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 896,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 894,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 892,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 808,
																	"src": "11588:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 893,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11597:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11588:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 895,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11601:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11588:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 906,
														"nodeType": "IfStatement",
														"src": "11584:96:1",
														"trueBody": {
															"id": 905,
															"nodeType": "Block",
															"src": "11604:76:1",
															"statements": [
																{
																	"expression": {
																		"id": 899,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 897,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 808,
																			"src": "11623:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 898,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11633:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11623:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 900,
																	"nodeType": "ExpressionStatement",
																	"src": "11623:11:1"
																},
																{
																	"expression": {
																		"id": 903,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 901,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 814,
																			"src": "11653:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 902,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11663:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11653:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 904,
																	"nodeType": "ExpressionStatement",
																	"src": "11653:11:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 911,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 909,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 907,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 808,
																	"src": "11698:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 908,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11707:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11698:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 910,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11711:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11698:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 921,
														"nodeType": "IfStatement",
														"src": "11694:96:1",
														"trueBody": {
															"id": 920,
															"nodeType": "Block",
															"src": "11714:76:1",
															"statements": [
																{
																	"expression": {
																		"id": 914,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 912,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 808,
																			"src": "11733:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 913,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11743:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11733:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 915,
																	"nodeType": "ExpressionStatement",
																	"src": "11733:11:1"
																},
																{
																	"expression": {
																		"id": 918,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 916,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 814,
																			"src": "11763:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 917,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11773:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11763:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 919,
																	"nodeType": "ExpressionStatement",
																	"src": "11763:11:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 926,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 924,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 922,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 808,
																	"src": "11808:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 923,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11817:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11808:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 925,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11821:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11808:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 932,
														"nodeType": "IfStatement",
														"src": "11804:66:1",
														"trueBody": {
															"id": 931,
															"nodeType": "Block",
															"src": "11824:46:1",
															"statements": [
																{
																	"expression": {
																		"id": 929,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 927,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 814,
																			"src": "11843:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 928,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11853:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11843:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 930,
																	"nodeType": "ExpressionStatement",
																	"src": "11843:11:1"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 934,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 814,
													"src": "11898:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 812,
												"id": 935,
												"nodeType": "Return",
												"src": "11891:13:1"
											}
										]
									},
									"documentation": {
										"id": 806,
										"nodeType": "StructuredDocumentation",
										"src": "10765:122:1",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 937,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10902:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10915:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "10907:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 807,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10907:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10906:15:1"
									},
									"returnParameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "10945:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 810,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10945:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10944:9:1"
									},
									"scope": 1281,
									"src": "10893:1019:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 971,
										"nodeType": "Block",
										"src": "12151:173:1",
										"statements": [
											{
												"id": 970,
												"nodeType": "UncheckedBlock",
												"src": "12162:155:1",
												"statements": [
													{
														"assignments": [
															949
														],
														"declarations": [
															{
																"constant": false,
																"id": 949,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "12195:6:1",
																"nodeType": "VariableDeclaration",
																"scope": 970,
																"src": "12187:14:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 948,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12187:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 953,
														"initialValue": {
															"arguments": [
																{
																	"id": 951,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 940,
																	"src": "12209:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 950,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	937,
																	972
																],
																"referencedDeclaration": 937,
																"src": "12204:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 952,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12204:11:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12187:28:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 968,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 954,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 949,
																"src": "12237:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 963,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 956,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 943,
																						"src": "12264:8:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$238",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$238",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 955,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1280,
																					"src": "12247:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$238_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 957,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12247:26:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 962,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 960,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 958,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12277:1:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 959,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 949,
																						"src": "12282:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12277:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 961,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 940,
																					"src": "12291:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12277:19:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12247:49:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 965,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12303:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 966,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12247:57:1",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 964,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12299:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 967,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12246:59:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "12237:68:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 947,
														"id": 969,
														"nodeType": "Return",
														"src": "12230:75:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 938,
										"nodeType": "StructuredDocumentation",
										"src": "11920:145:1",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 972,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "12080:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12093:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "12085:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 939,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12085:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 943,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "12109:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "12100:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$238",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 942,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 941,
														"name": "Rounding",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 238,
														"src": "12100:8:1"
													},
													"referencedDeclaration": 238,
													"src": "12100:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$238",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12084:34:1"
									},
									"returnParameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "12142:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 945,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12142:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12141:9:1"
									},
									"scope": 1281,
									"src": "12071:253:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1100,
										"nodeType": "Block",
										"src": "12523:886:1",
										"statements": [
											{
												"assignments": [
													981
												],
												"declarations": [
													{
														"constant": false,
														"id": 981,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12542:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 1100,
														"src": "12534:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 980,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12534:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 983,
												"initialValue": {
													"hexValue": "30",
													"id": 982,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12551:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12534:18:1"
											},
											{
												"id": 1097,
												"nodeType": "UncheckedBlock",
												"src": "12563:815:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 988,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 984,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 975,
																"src": "12592:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 987,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 985,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12601:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 986,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12607:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12601:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12592:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1000,
														"nodeType": "IfStatement",
														"src": "12588:106:1",
														"trueBody": {
															"id": 999,
															"nodeType": "Block",
															"src": "12611:83:1",
															"statements": [
																{
																	"expression": {
																		"id": 993,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 989,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 975,
																			"src": "12630:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 992,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 990,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12639:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 991,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12645:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12639:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12630:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 994,
																	"nodeType": "ExpressionStatement",
																	"src": "12630:17:1"
																},
																{
																	"expression": {
																		"id": 997,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 995,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 981,
																			"src": "12666:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 996,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12676:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12666:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 998,
																	"nodeType": "ExpressionStatement",
																	"src": "12666:12:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1005,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1001,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 975,
																"src": "12712:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 1004,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1002,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12721:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1003,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12727:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12721:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12712:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1017,
														"nodeType": "IfStatement",
														"src": "12708:106:1",
														"trueBody": {
															"id": 1016,
															"nodeType": "Block",
															"src": "12731:83:1",
															"statements": [
																{
																	"expression": {
																		"id": 1010,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1006,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 975,
																			"src": "12750:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 1009,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1007,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12759:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 1008,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12765:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12759:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12750:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1011,
																	"nodeType": "ExpressionStatement",
																	"src": "12750:17:1"
																},
																{
																	"expression": {
																		"id": 1014,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1012,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 981,
																			"src": "12786:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1013,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12796:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12786:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1015,
																	"nodeType": "ExpressionStatement",
																	"src": "12786:12:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1022,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1018,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 975,
																"src": "12832:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 1021,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1019,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12841:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1020,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12847:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12841:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12832:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1034,
														"nodeType": "IfStatement",
														"src": "12828:106:1",
														"trueBody": {
															"id": 1033,
															"nodeType": "Block",
															"src": "12851:83:1",
															"statements": [
																{
																	"expression": {
																		"id": 1027,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1023,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 975,
																			"src": "12870:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 1026,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1024,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12879:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 1025,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12885:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12879:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12870:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1028,
																	"nodeType": "ExpressionStatement",
																	"src": "12870:17:1"
																},
																{
																	"expression": {
																		"id": 1031,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1029,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 981,
																			"src": "12906:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1030,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12916:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12906:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1032,
																	"nodeType": "ExpressionStatement",
																	"src": "12906:12:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1039,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1035,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 975,
																"src": "12952:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 1038,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1036,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12961:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1037,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12967:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12961:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12952:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1051,
														"nodeType": "IfStatement",
														"src": "12948:103:1",
														"trueBody": {
															"id": 1050,
															"nodeType": "Block",
															"src": "12970:81:1",
															"statements": [
																{
																	"expression": {
																		"id": 1044,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1040,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 975,
																			"src": "12989:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 1043,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1041,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12998:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 1042,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13004:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12998:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12989:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1045,
																	"nodeType": "ExpressionStatement",
																	"src": "12989:16:1"
																},
																{
																	"expression": {
																		"id": 1048,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1046,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 981,
																			"src": "13024:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1047,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13034:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "13024:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1049,
																	"nodeType": "ExpressionStatement",
																	"src": "13024:11:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1056,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1052,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 975,
																"src": "13069:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 1055,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1053,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13078:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1054,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13084:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "13078:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "13069:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1068,
														"nodeType": "IfStatement",
														"src": "13065:103:1",
														"trueBody": {
															"id": 1067,
															"nodeType": "Block",
															"src": "13087:81:1",
															"statements": [
																{
																	"expression": {
																		"id": 1061,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1057,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 975,
																			"src": "13106:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 1060,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1058,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13115:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 1059,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13121:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "13115:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "13106:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1062,
																	"nodeType": "ExpressionStatement",
																	"src": "13106:16:1"
																},
																{
																	"expression": {
																		"id": 1065,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1063,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 981,
																			"src": "13141:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1064,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13151:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "13141:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1066,
																	"nodeType": "ExpressionStatement",
																	"src": "13141:11:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1073,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1069,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 975,
																"src": "13186:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 1072,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1070,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13195:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1071,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13201:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "13195:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "13186:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1085,
														"nodeType": "IfStatement",
														"src": "13182:103:1",
														"trueBody": {
															"id": 1084,
															"nodeType": "Block",
															"src": "13204:81:1",
															"statements": [
																{
																	"expression": {
																		"id": 1078,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1074,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 975,
																			"src": "13223:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 1077,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1075,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13232:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 1076,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13238:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "13232:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "13223:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1079,
																	"nodeType": "ExpressionStatement",
																	"src": "13223:16:1"
																},
																{
																	"expression": {
																		"id": 1082,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1080,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 981,
																			"src": "13258:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1081,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13268:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "13258:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1083,
																	"nodeType": "ExpressionStatement",
																	"src": "13258:11:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1090,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1086,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 975,
																"src": "13303:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 1089,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1087,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13312:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1088,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13318:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13312:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13303:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1096,
														"nodeType": "IfStatement",
														"src": "13299:68:1",
														"trueBody": {
															"id": 1095,
															"nodeType": "Block",
															"src": "13321:46:1",
															"statements": [
																{
																	"expression": {
																		"id": 1093,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1091,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 981,
																			"src": "13340:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1092,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13350:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13340:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1094,
																	"nodeType": "ExpressionStatement",
																	"src": "13340:11:1"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1098,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 981,
													"src": "13395:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 979,
												"id": 1099,
												"nodeType": "Return",
												"src": "13388:13:1"
											}
										]
									},
									"documentation": {
										"id": 973,
										"nodeType": "StructuredDocumentation",
										"src": "12332:123:1",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 1101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12470:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12484:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "12476:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 974,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12476:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12475:15:1"
									},
									"returnParameters": {
										"id": 979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "12514:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 977,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12514:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12513:9:1"
									},
									"scope": 1281,
									"src": "12461:948:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1135,
										"nodeType": "Block",
										"src": "13650:175:1",
										"statements": [
											{
												"id": 1134,
												"nodeType": "UncheckedBlock",
												"src": "13661:157:1",
												"statements": [
													{
														"assignments": [
															1113
														],
														"declarations": [
															{
																"constant": false,
																"id": 1113,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13694:6:1",
																"nodeType": "VariableDeclaration",
																"scope": 1134,
																"src": "13686:14:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1112,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13686:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1117,
														"initialValue": {
															"arguments": [
																{
																	"id": 1115,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1104,
																	"src": "13709:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1114,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1101,
																	1136
																],
																"referencedDeclaration": 1101,
																"src": "13703:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1116,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13703:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13686:29:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1132,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1118,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1113,
																"src": "13737:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1127,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1120,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1107,
																						"src": "13764:8:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$238",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$238",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1119,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1280,
																					"src": "13747:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$238_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1121,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13747:26:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1126,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1124,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 1122,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13777:2:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 1123,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1113,
																						"src": "13783:6:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13777:12:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1125,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1104,
																					"src": "13792:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13777:20:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13747:50:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1129,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13804:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1130,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13747:58:1",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1128,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13800:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1131,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13746:60:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13737:69:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1111,
														"id": 1133,
														"nodeType": "Return",
														"src": "13730:76:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1102,
										"nodeType": "StructuredDocumentation",
										"src": "13417:146:1",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1136,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13578:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13592:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1136,
												"src": "13584:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13584:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13608:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1136,
												"src": "13599:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$238",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1106,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1105,
														"name": "Rounding",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 238,
														"src": "13599:8:1"
													},
													"referencedDeclaration": 238,
													"src": "13599:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$238",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13583:34:1"
									},
									"returnParameters": {
										"id": 1111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1136,
												"src": "13641:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13641:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13640:9:1"
									},
									"scope": 1281,
									"src": "13569:256:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1222,
										"nodeType": "Block",
										"src": "14153:624:1",
										"statements": [
											{
												"assignments": [
													1145
												],
												"declarations": [
													{
														"constant": false,
														"id": 1145,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "14172:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 1222,
														"src": "14164:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1144,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14164:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1147,
												"initialValue": {
													"hexValue": "30",
													"id": 1146,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14181:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14164:18:1"
											},
											{
												"id": 1219,
												"nodeType": "UncheckedBlock",
												"src": "14193:553:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1152,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1150,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1148,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1139,
																	"src": "14222:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1149,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14231:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "14222:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1151,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14237:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14222:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1162,
														"nodeType": "IfStatement",
														"src": "14218:101:1",
														"trueBody": {
															"id": 1161,
															"nodeType": "Block",
															"src": "14240:79:1",
															"statements": [
																{
																	"expression": {
																		"id": 1155,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1153,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1139,
																			"src": "14259:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1154,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14269:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "14259:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1156,
																	"nodeType": "ExpressionStatement",
																	"src": "14259:13:1"
																},
																{
																	"expression": {
																		"id": 1159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1157,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1145,
																			"src": "14291:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1158,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14301:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14291:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1160,
																	"nodeType": "ExpressionStatement",
																	"src": "14291:12:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1167,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1165,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1163,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1139,
																	"src": "14337:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1164,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14346:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14337:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1166,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14351:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14337:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1177,
														"nodeType": "IfStatement",
														"src": "14333:98:1",
														"trueBody": {
															"id": 1176,
															"nodeType": "Block",
															"src": "14354:77:1",
															"statements": [
																{
																	"expression": {
																		"id": 1170,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1168,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1139,
																			"src": "14373:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1169,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14383:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14373:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1171,
																	"nodeType": "ExpressionStatement",
																	"src": "14373:12:1"
																},
																{
																	"expression": {
																		"id": 1174,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1172,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1145,
																			"src": "14404:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1173,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14414:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14404:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1175,
																	"nodeType": "ExpressionStatement",
																	"src": "14404:11:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1182,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1180,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1178,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1139,
																	"src": "14449:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1179,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14458:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14449:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1181,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14463:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14449:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1192,
														"nodeType": "IfStatement",
														"src": "14445:98:1",
														"trueBody": {
															"id": 1191,
															"nodeType": "Block",
															"src": "14466:77:1",
															"statements": [
																{
																	"expression": {
																		"id": 1185,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1183,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1139,
																			"src": "14485:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1184,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14495:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14485:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1186,
																	"nodeType": "ExpressionStatement",
																	"src": "14485:12:1"
																},
																{
																	"expression": {
																		"id": 1189,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1187,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1145,
																			"src": "14516:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1188,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14526:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14516:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1190,
																	"nodeType": "ExpressionStatement",
																	"src": "14516:11:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1195,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1193,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1139,
																	"src": "14561:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1194,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14570:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14561:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1196,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14575:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14561:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1207,
														"nodeType": "IfStatement",
														"src": "14557:98:1",
														"trueBody": {
															"id": 1206,
															"nodeType": "Block",
															"src": "14578:77:1",
															"statements": [
																{
																	"expression": {
																		"id": 1200,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1198,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1139,
																			"src": "14597:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1199,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14607:2:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14597:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1201,
																	"nodeType": "ExpressionStatement",
																	"src": "14597:12:1"
																},
																{
																	"expression": {
																		"id": 1204,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1202,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1145,
																			"src": "14628:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1203,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14638:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14628:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1205,
																	"nodeType": "ExpressionStatement",
																	"src": "14628:11:1"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1212,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1210,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1208,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1139,
																	"src": "14673:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1209,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14682:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14673:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1211,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14686:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14673:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1218,
														"nodeType": "IfStatement",
														"src": "14669:66:1",
														"trueBody": {
															"id": 1217,
															"nodeType": "Block",
															"src": "14689:46:1",
															"statements": [
																{
																	"expression": {
																		"id": 1215,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1213,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1145,
																			"src": "14708:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1214,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14718:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14708:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1216,
																	"nodeType": "ExpressionStatement",
																	"src": "14708:11:1"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1220,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1145,
													"src": "14763:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1143,
												"id": 1221,
												"nodeType": "Return",
												"src": "14756:13:1"
											}
										]
									},
									"documentation": {
										"id": 1137,
										"nodeType": "StructuredDocumentation",
										"src": "13833:251:1",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 1223,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14099:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14114:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "14106:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14106:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14105:15:1"
									},
									"returnParameters": {
										"id": 1143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "14144:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14144:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14143:9:1"
									},
									"scope": 1281,
									"src": "14090:687:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1260,
										"nodeType": "Block",
										"src": "15020:182:1",
										"statements": [
											{
												"id": 1259,
												"nodeType": "UncheckedBlock",
												"src": "15031:164:1",
												"statements": [
													{
														"assignments": [
															1235
														],
														"declarations": [
															{
																"constant": false,
																"id": 1235,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "15064:6:1",
																"nodeType": "VariableDeclaration",
																"scope": 1259,
																"src": "15056:14:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1234,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "15056:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1239,
														"initialValue": {
															"arguments": [
																{
																	"id": 1237,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1226,
																	"src": "15080:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1236,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1223,
																	1261
																],
																"referencedDeclaration": 1223,
																"src": "15073:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1238,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15073:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "15056:30:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1240,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1235,
																"src": "15108:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1252,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1242,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1229,
																						"src": "15135:8:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$238",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$238",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1241,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1280,
																					"src": "15118:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$238_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1243,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "15118:26:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1251,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1249,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1244,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "15148:1:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1247,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1245,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1235,
																									"src": "15154:6:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 1246,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "15164:1:1",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "15154:11:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1248,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "15153:13:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "15148:18:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1250,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1226,
																					"src": "15169:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "15148:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "15118:56:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1254,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "15181:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1255,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "15118:64:1",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1253,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "15177:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1256,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "15117:66:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "15108:75:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1233,
														"id": 1258,
														"nodeType": "Return",
														"src": "15101:82:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1224,
										"nodeType": "StructuredDocumentation",
										"src": "14785:147:1",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14947:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1226,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14962:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "14954:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14954:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1229,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14978:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "14969:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$238",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1228,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1227,
														"name": "Rounding",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 238,
														"src": "14969:8:1"
													},
													"referencedDeclaration": 238,
													"src": "14969:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$238",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14953:34:1"
									},
									"returnParameters": {
										"id": 1233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1232,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "15011:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15011:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15010:9:1"
									},
									"scope": 1281,
									"src": "14938:264:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1279,
										"nodeType": "Block",
										"src": "15405:50:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 1277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 1275,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1272,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1265,
																	"src": "15429:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$238",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$238",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 1271,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15423:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 1270,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15423:5:1",
																	"typeDescriptions": {}
																}
															},
															"id": 1273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15423:15:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 1274,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15441:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15423:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 1276,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15446:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15423:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1269,
												"id": 1278,
												"nodeType": "Return",
												"src": "15416:31:1"
											}
										]
									},
									"documentation": {
										"id": 1262,
										"nodeType": "StructuredDocumentation",
										"src": "15210:115:1",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 1280,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15340:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1265,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15366:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "15357:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$238",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1264,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1263,
														"name": "Rounding",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 238,
														"src": "15357:8:1"
													},
													"referencedDeclaration": 238,
													"src": "15357:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$238",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15356:19:1"
									},
									"returnParameters": {
										"id": 1269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1268,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "15399:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1267,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15399:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15398:6:1"
									},
									"scope": 1281,
									"src": "15331:124:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1282,
							"src": "138:15320:1",
							"usedErrors": [
								233
							]
						}
					],
					"src": "33:15425:1"
				},
				"id": 1
			},
			"1127/util/SignedMath.sol": {
				"ast": {
					"absolutePath": "1127/util/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							1386
						]
					},
					"id": 1387,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1283,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".11"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1284,
								"nodeType": "StructuredDocumentation",
								"src": "61:82:2",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1386,
							"linearizedBaseContracts": [
								1386
							],
							"name": "SignedMath",
							"nameLocation": "153:10:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1301,
										"nodeType": "Block",
										"src": "309:39:2",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 1296,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1294,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1287,
															"src": "327:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1295,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1289,
															"src": "331:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "327:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1298,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1289,
														"src": "339:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 1299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "327:13:2",
													"trueExpression": {
														"id": 1297,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1287,
														"src": "335:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1293,
												"id": 1300,
												"nodeType": "Return",
												"src": "320:20:2"
											}
										]
									},
									"documentation": {
										"id": 1285,
										"nodeType": "StructuredDocumentation",
										"src": "171:68:2",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 1302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "254:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1287,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "265:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 1302,
												"src": "258:8:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1286,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "258:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1289,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "275:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 1302,
												"src": "268:8:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1288,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "268:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "257:20:2"
									},
									"returnParameters": {
										"id": 1293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1292,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1302,
												"src": "301:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1291,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "301:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "300:8:2"
									},
									"scope": 1386,
									"src": "245:103:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1319,
										"nodeType": "Block",
										"src": "495:39:2",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 1314,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1312,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1305,
															"src": "513:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1313,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1307,
															"src": "517:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "513:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1316,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1307,
														"src": "525:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 1317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "513:13:2",
													"trueExpression": {
														"id": 1315,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1305,
														"src": "521:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1311,
												"id": 1318,
												"nodeType": "Return",
												"src": "506:20:2"
											}
										]
									},
									"documentation": {
										"id": 1303,
										"nodeType": "StructuredDocumentation",
										"src": "356:69:2",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 1320,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "440:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1305,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "451:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 1320,
												"src": "444:8:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1304,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "444:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1307,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "461:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 1320,
												"src": "454:8:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1306,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "454:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "443:20:2"
									},
									"returnParameters": {
										"id": 1311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1310,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1320,
												"src": "487:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1309,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "487:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "486:8:2"
									},
									"scope": 1386,
									"src": "431:103:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1363,
										"nodeType": "Block",
										"src": "745:166:2",
										"statements": [
											{
												"assignments": [
													1331
												],
												"declarations": [
													{
														"constant": false,
														"id": 1331,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "816:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 1363,
														"src": "809:8:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1330,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "809:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1344,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1334,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1332,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1323,
																	"src": "821:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1333,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1325,
																	"src": "825:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "821:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1335,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "820:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1341,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1338,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1336,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1323,
																				"src": "832:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 1337,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1325,
																				"src": "836:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "832:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 1339,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "831:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1340,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "842:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "831:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1342,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "830:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "820:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "809:35:2"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1345,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1331,
														"src": "862:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1359,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1353,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1350,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1331,
																						"src": "882:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 1349,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "874:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 1348,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "874:7:2",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1351,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "874:10:2",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 1352,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "888:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "874:17:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1347,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "867:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 1346,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "867:6:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1354,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "867:25:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1357,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1355,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1323,
																				"src": "896:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 1356,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1325,
																				"src": "900:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "896:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 1358,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "895:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "867:35:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1360,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "866:37:2",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "862:41:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1329,
												"id": 1362,
												"nodeType": "Return",
												"src": "855:48:2"
											}
										]
									},
									"documentation": {
										"id": 1321,
										"nodeType": "StructuredDocumentation",
										"src": "542:129:2",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 1364,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "686:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1323,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "701:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "694:8:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1322,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "694:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1325,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "711:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "704:8:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1324,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "704:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "693:20:2"
									},
									"returnParameters": {
										"id": 1329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1328,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "737:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1327,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "737:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "736:8:2"
									},
									"scope": 1386,
									"src": "677:234:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1384,
										"nodeType": "Block",
										"src": "1060:163:2",
										"statements": [
											{
												"id": 1383,
												"nodeType": "UncheckedBlock",
												"src": "1071:145:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 1376,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1374,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1367,
																			"src": "1188:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1375,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1193:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1188:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 1379,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1201:2:2",
																		"subExpression": {
																			"id": 1378,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1367,
																			"src": "1202:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 1380,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1188:15:2",
																	"trueExpression": {
																		"id": 1377,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1367,
																		"src": "1197:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 1373,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1180:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1372,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1180:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1180:24:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1371,
														"id": 1382,
														"nodeType": "Return",
														"src": "1173:31:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1365,
										"nodeType": "StructuredDocumentation",
										"src": "919:80:2",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 1385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1014:3:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1367,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1025:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 1385,
												"src": "1018:8:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1366,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:10:2"
									},
									"returnParameters": {
										"id": 1371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1370,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1385,
												"src": "1051:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1051:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1050:9:2"
									},
									"scope": 1386,
									"src": "1005:218:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1387,
							"src": "145:1081:2",
							"usedErrors": []
						}
					],
					"src": "33:1193:2"
				},
				"id": 2
			}
		}
	}
}